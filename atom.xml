<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>洞香春</title>
  
  <subtitle>洞香春以名士荟萃、谈论国事、交流思想而著称于当时列国 --《大秦帝国》</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://wdd.js.org/"/>
  <updated>2018-02-09T05:27:53.000Z</updated>
  <id>https://wdd.js.org/</id>
  
  <author>
    <name>王端端</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>你不知道的JSON.stringify()妙用</title>
    <link href="https://wdd.js.org/json-stringify-powerful.html"/>
    <id>https://wdd.js.org/json-stringify-powerful.html</id>
    <published>2018-02-09T05:27:15.000Z</published>
    <updated>2018-02-09T05:27:53.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h1><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">JSON</span><span class="selector-class">.stringify</span>(<span class="selector-tag">value</span><span class="selector-attr">[, replacer[, space]</span>])</span><br></pre></td></tr></table></figure><p>一般用法：<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var user = &#123;name: <span class="string">'andy'</span>, isDead: false, age: <span class="number">11</span>, addr: <span class="string">'shanghai'</span>&#125;;</span><br><span class="line"></span><br><span class="line">JSON.stringify(user);</span><br><span class="line"></span><br><span class="line"><span class="string">"&#123;"</span>name<span class="string">":"</span>andy<span class="string">","</span>isDead<span class="string">":false,"</span>age<span class="string">":11,"</span>add<span class="string">r":"</span>shanghai<span class="string">"&#125;"</span></span><br></pre></td></tr></table></figure></p><h1 id="扩展用法"><a href="#扩展用法" class="headerlink" title="扩展用法"></a>扩展用法</h1><h2 id="replacer"><a href="#replacer" class="headerlink" title="replacer"></a>replacer</h2><p>replacer可以是<code>函数</code>或者是<code>数组</code>。</p><p><code>功能1: 改变属性值</code><br>将isDead属性的值翻译成0或1，0对应false,1对应true<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">var user = &#123;name: <span class="string">'andy'</span>, isDead: false, age: <span class="number">11</span>, addr: <span class="string">'shanghai'</span>&#125;;</span><br><span class="line"></span><br><span class="line">JSON.stringify(user, <span class="keyword">function</span>(key, value)&#123;</span><br><span class="line">    <span class="keyword">if</span>(key === <span class="string">'isDead'</span>)&#123;</span><br><span class="line">        return value === true ? <span class="number">1</span> : <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    return value;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="string">"&#123;"</span>name<span class="string">":"</span>andy<span class="string">","</span>isDead<span class="string">":0,"</span>age<span class="string">":11,"</span>add<span class="string">r":"</span>shanghai<span class="string">"&#125;"</span></span><br></pre></td></tr></table></figure></p><p><code>功能2：删除某个属性</code><br>将isDead属性删除，如果replacer的返回值是<code>undefined</code>,那么该属性会被删除。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">var user = &#123;name: <span class="string">'andy'</span>, isDead: false, age: <span class="number">11</span>, addr: <span class="string">'shanghai'</span>&#125;;</span><br><span class="line"></span><br><span class="line">JSON.stringify(user, function(key, value)&#123;</span><br><span class="line">    <span class="keyword">if</span>(key === <span class="string">'isDead'</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> undefined;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> value;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="string">"&#123;"</span>name<span class="string">":"</span>andy<span class="string">","</span>age<span class="string">":11,"</span>add<span class="string">r":"</span>shanghai<span class="string">"&#125;"</span></span><br></pre></td></tr></table></figure></p><p><code>功能3: 通过数组过滤某些属性</code><br>只需要name属性和addr属性，其他不要。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var user = &#123;name: <span class="string">'andy'</span>, isDead: false, age: <span class="number">11</span>, addr: <span class="string">'shanghai'</span>&#125;;</span><br><span class="line"></span><br><span class="line">JSON.stringify(user, [<span class="string">'name'</span>, <span class="string">'addr'</span>]);</span><br><span class="line"></span><br><span class="line"><span class="string">"&#123;"</span>name<span class="string">":"</span>andy<span class="string">","</span>add<span class="string">r":"</span>shanghai<span class="string">"&#125;"</span></span><br></pre></td></tr></table></figure><h2 id="space"><a href="#space" class="headerlink" title="space"></a>space</h2><p>space可以是<code>数字</code>或者是<code>字符串</code>, 如果是数字则表示属性名前加上空格符号的数量，如果是字符串，则直接在属性名前加上该字符串。</p><p><code>功能1: 给输出属性前加上n个空格</code><br><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">var</span> user = &#123;name: <span class="string">'andy'</span>, isDead: <span class="literal">false</span>, age: <span class="number">11</span>, addr: <span class="string">'shanghai'</span>&#125;;</span><br><span class="line"></span><br><span class="line">JSON.stringify(user, <span class="built_in">null</span>, <span class="number">4</span>);</span><br><span class="line"></span><br><span class="line"><span class="string">"&#123;</span></span><br><span class="line"><span class="string">    "</span>name<span class="string">": "</span>andy<span class="string">",</span></span><br><span class="line"><span class="string">    "</span>isDead<span class="string">": false,</span></span><br><span class="line"><span class="string">    "</span>age<span class="string">": 11,</span></span><br><span class="line"><span class="string">    "</span>addr<span class="string">": "</span>shanghai<span class="string">"</span></span><br><span class="line"><span class="string">&#125;"</span></span><br></pre></td></tr></table></figure></p><p><code>功能2: tab格式化输出</code><br><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">var</span> user = &#123;name: <span class="string">'andy'</span>, isDead: <span class="literal">false</span>, age: <span class="number">11</span>, addr: <span class="string">'shanghai'</span>&#125;;</span><br><span class="line"></span><br><span class="line">JSON.stringify(user, <span class="built_in">null</span>, <span class="string">'\t'</span>);</span><br><span class="line"><span class="string">"&#123;</span></span><br><span class="line"><span class="string">"</span>name<span class="string">": "</span>andy<span class="string">",</span></span><br><span class="line"><span class="string">"</span>isDead<span class="string">": false,</span></span><br><span class="line"><span class="string">"</span>age<span class="string">": 11,</span></span><br><span class="line"><span class="string">"</span>addr<span class="string">": "</span>shanghai<span class="string">"</span></span><br><span class="line"><span class="string">&#125;"</span></span><br></pre></td></tr></table></figure></p><p><code>功能3： 搞笑</code><br><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">JSON.stringify(user, <span class="literal">null</span>, 'good');</span><br><span class="line"><span class="string">"&#123;</span></span><br><span class="line">good<span class="string">"name"</span>: <span class="string">"andy"</span>,</span><br><span class="line">good<span class="string">"isDead"</span>: false,</span><br><span class="line">good<span class="string">"age"</span>: <span class="number">11</span>,</span><br><span class="line">good<span class="string">"addr"</span>: <span class="string">"shanghai"</span></span><br><span class="line">&#125;<span class="string">"</span></span><br></pre></td></tr></table></figure></p><h2 id="深拷贝"><a href="#深拷贝" class="headerlink" title="深拷贝"></a>深拷贝</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> user = &#123;<span class="attr">name</span>: <span class="string">'andy'</span>, <span class="attr">isDead</span>: <span class="literal">false</span>, <span class="attr">age</span>: <span class="number">11</span>, <span class="attr">addr</span>: <span class="string">'shanghai'</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> temp = <span class="built_in">JSON</span>.stringify(user);</span><br><span class="line"><span class="keyword">var</span> user2 = <span class="built_in">JSON</span>.parse(temp);</span><br></pre></td></tr></table></figure><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><p>JSON.parse() 其实也是支持第二个参数的。功能类似于JSON.stringify的第二个参数的功能。</p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify" target="_blank" rel="noopener">MDN JSON.stringify()</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;语法&quot;&gt;&lt;a href=&quot;#语法&quot; class=&quot;headerlink&quot; title=&quot;语法&quot;&gt;&lt;/a&gt;语法&lt;/h1&gt;&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span cl
      
    
    </summary>
    
    
      <category term="json" scheme="https://wdd.js.org/tags/json/"/>
    
  </entry>
  
  <entry>
    <title>手写可配置的express &amp; nodejs的代理</title>
    <link href="https://wdd.js.org/write-configurable-nodejs-http-proxy.html"/>
    <id>https://wdd.js.org/write-configurable-nodejs-http-proxy.html</id>
    <published>2018-02-09T05:24:35.000Z</published>
    <updated>2018-02-09T05:25:34.000Z</updated>
    
    <content type="html"><![CDATA[<p>nodejs比较好的代理包有：<a href="https://github.com/nodejitsu/node-http-proxy" target="_blank" rel="noopener">node-http-proxy</a>和<a href="https://github.com/chimurai/http-proxy-middleware" target="_blank" rel="noopener">http-proxy-middleware</a>。这两个我都用过，它们的优点自不用说，只说说缺点：<code>它们不能从配置文件里读取代理配置。每添加一个拦截路径都需要多加一个接口调用。</code></p><p><img src="http://p3alsaatj.bkt.clouddn.com/20180209132526_lgeTcJ_bVVFlt.jpeg" alt=""></p><p>所以，我需要自己写一个http代理，要包含一下功能：</p><ol><li>从配置文件里读取代理配置</li><li>可以路径重写</li></ol><p>这样做的好处是：<code>新增服务只需要在配置文件上加上该服务，无需修改业务逻辑</code></p><h1 id="config-default-js"><a href="#config-default-js" class="headerlink" title="/config/default.js"></a>/config/default.js</h1><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line"><span class="string">"ENV"</span>:<span class="string">"dev"</span>,</span><br><span class="line"><span class="string">"PORT"</span>:<span class="string">"8088"</span>,</span><br><span class="line"></span><br><span class="line"><span class="string">"maxAge"</span>: <span class="number">10</span>,</span><br><span class="line"></span><br><span class="line"><span class="string">"proxy"</span>:&#123;</span><br><span class="line"><span class="string">"olap"</span>:&#123;</span><br><span class="line"><span class="string">"host"</span>:<span class="string">"172.16.200.225"</span>,</span><br><span class="line"><span class="string">"port"</span>:<span class="string">"8092"</span>,</span><br><span class="line"><span class="string">"form"</span>:<span class="string">""</span>,</span><br><span class="line"><span class="string">"to"</span>:<span class="string">""</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">"qc"</span>:&#123;</span><br><span class="line"><span class="string">"host"</span>:<span class="string">"192.168.40.231"</span>,</span><br><span class="line"><span class="string">"port"</span>:<span class="string">"30088"</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">"api"</span>:&#123;</span><br><span class="line"><span class="string">"host"</span>:<span class="string">"192.168.40.231"</span>,</span><br><span class="line"><span class="string">"port"</span>:<span class="string">"30412"</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">"ocm"</span>:&#123;</span><br><span class="line"><span class="string">"host"</span>: process.env.ocm_host || <span class="string">"192.168.40.119"</span>,</span><br><span class="line"><span class="string">"port"</span>: process.env.ocm_port || <span class="string">"31003"</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="app-js"><a href="#app-js" class="headerlink" title="/app.js"></a>/app.js</h1><p>将所有要走代理的路径前必需加上 <code>/p</code>, 这个是我的个人配置，当然也可以是其他的名字。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> express = <span class="keyword">require</span>(<span class="string">'express'</span>);</span><br><span class="line"><span class="keyword">var</span> compression = <span class="keyword">require</span>(<span class="string">'compression'</span>);</span><br><span class="line"><span class="keyword">var</span> path = <span class="keyword">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="keyword">var</span> config = <span class="keyword">require</span>(<span class="string">'config'</span>);</span><br><span class="line"><span class="keyword">var</span> log4js = <span class="keyword">require</span>(<span class="string">'log4js'</span>);</span><br><span class="line"><span class="keyword">var</span> wsProxyConfig = config.get(<span class="string">'proxy'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> routes = <span class="keyword">require</span>(<span class="string">'./routes/index'</span>);</span><br><span class="line"><span class="keyword">var</span> views = <span class="keyword">require</span>(<span class="string">'./routes/views'</span>);</span><br><span class="line"><span class="keyword">var</span> proxy = <span class="keyword">require</span>(<span class="string">'./routes/proxy'</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.<span class="keyword">use</span>(<span class="string">'/p'</span>,proxy);</span><br></pre></td></tr></table></figure><h1 id="routes-proxy-js"><a href="#routes-proxy-js" class="headerlink" title="/routes/proxy.js"></a>/routes/proxy.js</h1><figure class="highlight qml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line"><span class="comment">// config是一个第三方包，它的功能是</span></span><br><span class="line"><span class="comment">// 自动根据环境变量帮你读取config目录下</span></span><br><span class="line"><span class="comment">// 的配置文件，默认会读取default.json，</span></span><br><span class="line"><span class="comment">// config支持很多文件类型。</span></span><br><span class="line"><span class="keyword">var</span> config = <span class="built_in">require</span>(<span class="string">'config'</span>);</span><br><span class="line"><span class="keyword">var</span> request = <span class="built_in">require</span>(<span class="string">'request'</span>);</span><br><span class="line"><span class="keyword">var</span> log4js = <span class="built_in">require</span>(<span class="string">'log4js'</span>);</span><br><span class="line"><span class="keyword">var</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> router = express.Router();</span><br><span class="line"><span class="comment">// 此处就是获取配置文件的proxy项了</span></span><br><span class="line"><span class="keyword">var</span> proxyConfig = config.get(<span class="string">'proxy'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 这里记录代理的日志</span></span><br><span class="line">log4js.configure(&#123;</span><br><span class="line">  <span class="attribute">appenders</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="attribute">type</span>: <span class="string">'file'</span>,</span><br><span class="line">    <span class="attribute">filename</span>: <span class="string">'./logs/all-proxy-logs.log'</span>,</span><br><span class="line">    <span class="attribute">maxLogSize</span>: <span class="number">10</span>*<span class="number">1024</span>*<span class="number">1024</span>, <span class="comment">//max 10mb</span></span><br><span class="line">    <span class="attribute">backups</span>: <span class="number">5</span>,</span><br><span class="line">    <span class="attribute">compress</span>: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="attribute">type</span>: <span class="string">'stdout'</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">var</span> logger = log4js.getLogger(<span class="string">'proxy'</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">router.all(<span class="string">'/:apiName/*'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res, next</span>) </span>&#123;</span><br><span class="line"> <span class="comment">// apiName 必需要对应配置文件的proxy的属性名</span></span><br><span class="line"> <span class="keyword">var</span> apiName = req.params.apiName;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">if</span>(!apiName)&#123;</span><br><span class="line"> res.status(<span class="number">404</span>).end(<span class="string">'api not found'</span>);</span><br><span class="line"> &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 如果apiName不在配置文件里，则报500</span></span><br><span class="line"> <span class="keyword">else</span> <span class="keyword">if</span>(!proxyConfig[apiName])&#123;</span><br><span class="line"> res.status(<span class="number">500</span>).end(<span class="string">'api has no config'</span>);</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="title">else</span>&#123;</span><br><span class="line">     <span class="comment">// originUrl是原始的url</span></span><br><span class="line">     <span class="comment">// 例如 /p/qc/calls</span></span><br><span class="line"> <span class="keyword">var</span> originalUrl = req.originalUrl;</span><br><span class="line"> <span class="keyword">var</span> api = proxyConfig[apiName];</span><br><span class="line"> <span class="keyword">var</span> <span class="built_in">url</span> = originalUrl.replace(<span class="string">'/p'</span>,<span class="string">''</span>);</span><br><span class="line"></span><br><span class="line"> <span class="built_in">url</span> = <span class="string">`http://<span class="subst">$&#123;api.host&#125;</span>:<span class="subst">$&#123;api.port&#125;</span>`</span> + <span class="built_in">url</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 某些需要路径重写的地方</span></span><br><span class="line"> <span class="keyword">if</span>(api.form &amp;&amp; api.to)&#123;</span><br><span class="line"> <span class="built_in">url</span> = <span class="built_in">url</span>.replace(api.form, api.to);</span><br><span class="line"> &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 必须要删除这个host</span></span><br><span class="line">        <span class="comment">// 因为本地测试时，这个host是localhost</span></span><br><span class="line">        <span class="comment">// 这会导致服务端报错</span></span><br><span class="line"> <span class="keyword">delete</span> req.headers.host;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 修改好的请求头</span></span><br><span class="line"> <span class="keyword">var</span> option = &#123;</span><br><span class="line"> <span class="attribute">url</span>: <span class="built_in">url</span>,</span><br><span class="line"> <span class="attribute">headers</span>: req.headers</span><br><span class="line"> &#125;;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 使用request发起请求</span></span><br><span class="line"> <span class="keyword">var</span> proxy = request(option);</span><br><span class="line"> <span class="comment">// 此处是关键，将请求流写入代理，将代理的响应写入原始响应</span></span><br><span class="line"> req.pipe(proxy);</span><br><span class="line"> proxy.pipe(res);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 代理结束响应时，原始请求结束，并输出日志</span></span><br><span class="line"> proxy.on(<span class="string">'end'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"> <span class="keyword">var</span> log = <span class="string">`<span class="subst">$&#123;req.method&#125;</span> <span class="subst">$&#123;res.statusCode&#125;</span> <span class="subst">$&#123;req.originalUrl&#125;</span> ---&gt; <span class="subst">$&#123;option.url&#125;</span> <span class="subst">$&#123;req.headers.sessionid&#125;</span>`</span>;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">if</span>(res.statusCode &lt; <span class="number">400</span>)&#123;</span><br><span class="line"> logger.info(log);</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="title">else</span>&#123;</span><br><span class="line"> logger.error(log);</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> res.end();</span><br><span class="line"> &#125;);</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = router;</span><br></pre></td></tr></table></figure><h1 id="相关第三方模块"><a href="#相关第三方模块" class="headerlink" title="相关第三方模块"></a>相关第三方模块</h1><ul><li><a href="https://github.com/lorenwest/node-config" target="_blank" rel="noopener">node-config</a></li><li><a href="https://github.com/request/request" target="_blank" rel="noopener">request</a></li><li><a href="https://github.com/nomiddlename/log4js-node" target="_blank" rel="noopener">log4js-node</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;nodejs比较好的代理包有：&lt;a href=&quot;https://github.com/nodejitsu/node-http-proxy&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;node-http-proxy&lt;/a&gt;和&lt;a href=&quot;https:/
      
    
    </summary>
    
    
      <category term="代理" scheme="https://wdd.js.org/tags/%E4%BB%A3%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>mac-sublime-shortcut-collector</title>
    <link href="https://wdd.js.org/mac-sublime-shortcut-collector.html"/>
    <id>https://wdd.js.org/mac-sublime-shortcut-collector.html</id>
    <published>2018-02-09T05:22:22.000Z</published>
    <updated>2018-02-09T05:22:54.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="对应关系"><a href="#对应关系" class="headerlink" title="对应关系"></a>对应关系</h1><table><thead><tr><th>标志</th><th>键名</th></tr></thead><tbody><tr><td>⌘</td><td>command</td></tr><tr><td>⇧</td><td>shift</td></tr><tr><td>↩</td><td>回车</td></tr><tr><td>↑</td><td>上</td></tr><tr><td>↓</td><td>下</td></tr><tr><td>⌃</td><td>control</td></tr><tr><td>⌥</td><td>option</td></tr></tbody></table><p>红色标记的是常用的快捷键。</p><h1 id="编辑"><a href="#编辑" class="headerlink" title="编辑"></a>编辑</h1><table><thead><tr><th>按键</th><th>功能</th></tr></thead><tbody><tr><td><code>⌘ + X</code></td><td>剪切当前行</td></tr><tr><td><code>⌥ + 拖动鼠标</code></td><td>垂直选中</td></tr><tr><td><code>⌘ + ↩</code></td><td>在当前行之后换行，无论鼠标在哪里</td></tr><tr><td>⌘ + ⇧ + ↩</td><td>再当前行之前换行，无论鼠标在哪里</td></tr><tr><td><code>⌘ + ⌃ + ↑</code></td><td>向上移动整行或者整段</td></tr><tr><td><code>⌘ + ⌃ + ↓</code></td><td>向下移动正行或者整段</td></tr><tr><td><code>⌘ + L</code></td><td>选择正行，重复按会向下再选择整行</td></tr><tr><td><code>⌘ + D</code></td><td>选中单词，重复按会向下选择相同的单词</td></tr><tr><td><code>⌃ + ⌘ + G</code></td><td>选中所有你选中的单词，比如先选中name这儿单词，然后按下这个快捷键，则当前文件里所有的name都会被选中</td></tr><tr><td>⌃ + ⇧ + ↑</td><td>Extra cursor on the line above</td></tr><tr><td>⌃ + ⇧ + ↓</td><td>Extra cursor on the line below</td></tr><tr><td>⌃ + M</td><td>跳到回应圆括号或大括号的结尾</td></tr><tr><td>⌃ + ⇧ + M</td><td>跳到回应圆括号或大括号的结尾，并选中这些内容</td></tr><tr><td>⌃ + A</td><td>跳到一行的最左边，光标右边有可能不是字母</td></tr><tr><td><code>⌘ + Left</code></td><td>调到一行文本的左边，光标右边一定跟着字母</td></tr><tr><td><code>⌃ + E, ⌘ + Right</code></td><td>调到一行的最右边</td></tr><tr><td><code>⌘ + K, ⌘ + K</code></td><td>删除光标所在行</td></tr><tr><td>⌘ + K + ⌫</td><td>删除光标所在位置到一行开头</td></tr><tr><td>⌘ + ]</td><td>缩进当前行或者段落</td></tr><tr><td>⌘ + [</td><td>取消缩进当前行或者段落</td></tr><tr><td><code>⌘ + ⇧ + D</code></td><td>复制当前行</td></tr><tr><td>⌘ + J</td><td>使当前行和当前行的下一行合并成一行</td></tr><tr><td><code>⌘ + /</code></td><td>注释或者取消注释当前行</td></tr><tr><td>⌘ + ⌥ + /</td><td>Block comment current selection</td></tr><tr><td>⌘ + Y</td><td>重复上一个快捷键</td></tr><tr><td><code>⌘ + ⇧ + V</code></td><td>粘贴并自动缩进</td></tr><tr><td>⌃ + Space</td><td>Select next auto-complete suggestion</td></tr><tr><td>⌃ + U</td><td>Soft undo; jumps to your last change before undoing change when repeated</td></tr><tr><td>⌃ + ⇧ + Up</td><td>Column selection up</td></tr><tr><td>⌃ + ⇧ + Down</td><td>Column selection down</td></tr><tr><td>⌃ + ⇧ + W</td><td>Wrap Selection in html tag</td></tr><tr><td>⌃ + ⇧ + K</td><td>Delete current line of cursor</td></tr></tbody></table><h1 id="导航"><a href="#导航" class="headerlink" title="导航"></a>导航</h1><table><thead><tr><th>按键</th><th>功能</th></tr></thead><tbody><tr><td>⌘ + P or ⌘ + T</td><td>按照文件名打开文件</td></tr><tr><td>⌘ + R</td><td>Goto symbol</td></tr><tr><td><code>⌃ + G</code></td><td>跳到制定行</td></tr></tbody></table><h1 id="通用"><a href="#通用" class="headerlink" title="通用"></a>通用</h1><table><thead><tr><th>按键</th><th>功能</th></tr></thead><tbody><tr><td>⌘ + ⇧ + P</td><td>Command Palette</td></tr><tr><td>⌃ + `</td><td>Python Console</td></tr><tr><td>⌃ + ⌘ + F</td><td>Toggle fullscreen mode</td></tr><tr><td>⌃ + ⇧ + ⌘ + F</td><td>Toggle distraction-free mode</td></tr><tr><td>⌘ + K, ⌘ + B</td><td>Toggle side bar</td></tr><tr><td>⌃ + ⇧ + P</td><td>Show scope in status bar</td></tr></tbody></table><h1 id="查找／替换"><a href="#查找／替换" class="headerlink" title="查找／替换"></a>查找／替换</h1><table><thead><tr><th>按键</th><th>功能</th></tr></thead><tbody><tr><td><code>⌘ + F</code></td><td>查找</td></tr><tr><td><code>⌘ + ⌥ + F</code></td><td>替换</td></tr><tr><td>⌘ + ⇧ + F</td><td>在文件中查找</td></tr></tbody></table><h1 id="滚动"><a href="#滚动" class="headerlink" title="滚动"></a>滚动</h1><table><thead><tr><th>按键</th><th>功能</th></tr></thead><tbody><tr><td>⌃ + V</td><td>向下滚动一页</td></tr><tr><td>⌃ + L</td><td>使当前行处于显示器的中央</td></tr><tr><td><code>⌘ + Down</code></td><td>滚动到文件结尾</td></tr><tr><td><code>⌘ + Up</code></td><td>滚动到文件开始</td></tr></tbody></table><h1 id="标签页"><a href="#标签页" class="headerlink" title="标签页"></a>标签页</h1><table><thead><tr><th>按键</th><th>功能</th></tr></thead><tbody><tr><td>⌘ + ⇧ + t</td><td>打开最近关闭的标签页</td></tr><tr><td>⌘ + [NUM]</td><td>调到制定标签页 1-9</td></tr><tr><td>⌘ + 0</td><td>调到第10个标签页</td></tr><tr><td><code>⌘ + ⇧ + [</code></td><td>切换成左边的标签页</td></tr><tr><td><code>⌘ + ⇧ + ]</code></td><td>切换成右边的标签页</td></tr><tr><td><code>^ + Tab</code></td><td>顺序跳转到最近使用的标签页</td></tr><tr><td>⇧ + ^ + Tab</td><td>逆序跳转最近使用的标签页</td></tr></tbody></table><h1 id="窗口分割"><a href="#窗口分割" class="headerlink" title="窗口分割"></a>窗口分割</h1><table><thead><tr><th>按键</th><th>功能</th></tr></thead><tbody><tr><td>⌘ + ⌥ + 1</td><td>切换成单窗口</td></tr><tr><td>⌘ + ⌥ + 2</td><td>切换窗口成2栏</td></tr><tr><td>⌘ + ⌥ + 3</td><td>切换窗口成3栏</td></tr><tr><td>⌘ + ⌥ + 4</td><td>切换窗口成4栏</td></tr><tr><td>⌘ + ⌥ + 5</td><td>Set view to grid (4 groups)</td></tr><tr><td>⌃ + [NUM]</td><td>Jump to group where num is 1-4</td></tr><tr><td>⌃ + ⇧ + [NUM]</td><td>Move file to specified group where num is 1-4</td></tr></tbody></table><h1 id="书签"><a href="#书签" class="headerlink" title="书签"></a>书签</h1><table><thead><tr><th>按键</th><th>功能</th></tr></thead><tbody><tr><td><code>⌘ + F2</code></td><td>设置或取消设置书签</td></tr><tr><td><code>F2</code></td><td>调到下一个书签</td></tr><tr><td><code>⇧ + F2</code></td><td>跳到上一个书签</td></tr><tr><td><code>⇧ + ⌘ + F2</code></td><td>清空所有书签</td></tr></tbody></table><h1 id="文本管理"><a href="#文本管理" class="headerlink" title="文本管理"></a>文本管理</h1><table><thead><tr><th>按键</th><th>功能</th></tr></thead><tbody><tr><td>⌘ + K, ⌘ + U</td><td>转成大写</td></tr><tr><td>⌘ + K, ⌘ + L</td><td>转成小写</td></tr><tr><td>⌘ + ⌃ + up, ⌘ + ⌃ + down</td><td>Clip text upwards / downwards</td></tr></tbody></table><h1 id="常用插件快捷键"><a href="#常用插件快捷键" class="headerlink" title="常用插件快捷键"></a>常用插件快捷键</h1><table><thead><tr><th>插件名</th><th>按键</th><th>功能</th></tr></thead><tbody><tr><td>omniMarkupPreview</td><td>⌘ + ⌥ + o</td><td>预览markdown</td></tr><tr><td>viewInBrowse</td><td>⌃ + ⌥ + c</td><td>在谷歌浏览器中预览html</td></tr></tbody></table><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="http://docs.sublimetext.info/en/latest/reference/keyboard_shortcuts_osx.html" target="_blank" rel="noopener">Keyboard Shortcuts - OSX</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;对应关系&quot;&gt;&lt;a href=&quot;#对应关系&quot; class=&quot;headerlink&quot; title=&quot;对应关系&quot;&gt;&lt;/a&gt;对应关系&lt;/h1&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;标志&lt;/th&gt;
&lt;th&gt;键名&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbod
      
    
    </summary>
    
    
      <category term="sublime" scheme="https://wdd.js.org/tags/sublime/"/>
    
  </entry>
  
  <entry>
    <title>ECharts 轮流高亮中国地图各个省份</title>
    <link href="https://wdd.js.org/echarts-highlight-china-map.html"/>
    <id>https://wdd.js.org/echarts-highlight-china-map.html</id>
    <published>2018-02-09T05:16:53.000Z</published>
    <updated>2018-02-09T05:18:17.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://p3alsaatj.bkt.clouddn.com/20180209131759_k10o0Z_bVVWEB.jpeg" alt=""></p><p>最早我是想通过<code>dispatchAction</code>方法去改变选中的省份，但是没有起作用，如果你知道这个方法怎么实现，麻烦你可以告诉我。<br>我实现的方法是另外一种。</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">dispatchAction(&#123;</span><br><span class="line">    <span class="keyword">type</span>: <span class="string">'geoSelect'</span>,</span><br><span class="line">    <span class="comment">// 可选，系列 index，可以是一个数组指定多个系列</span></span><br><span class="line">    seriesIndex?: <span class="built_in">number</span>|<span class="built_in">Array</span>,</span><br><span class="line">    <span class="comment">// 可选，系列名称，可以是一个数组指定多个系列</span></span><br><span class="line">    seriesName?: <span class="built_in">string</span>|<span class="built_in">Array</span>,</span><br><span class="line">    <span class="comment">// 数据的 index，如果不指定也可以通过 name 属性根据名称指定数据</span></span><br><span class="line">    dataIndex?: <span class="built_in">number</span>,</span><br><span class="line">    <span class="comment">// 可选，数据名称，在有 dataIndex 的时候忽略</span></span><br><span class="line">    name?: <span class="built_in">string</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>后来我改变了一个方法。这个方法的核心思路是定时获取图标的配置，然后更新配置，最后在设置配置。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> myChart = echarts.init(<span class="built_in">document</span>.getElementById(<span class="string">'china-map'</span>));</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> COLORS = [<span class="string">"#070093"</span>, <span class="string">"#1c3fbf"</span>, <span class="string">"#1482e5"</span>, <span class="string">"#70b4eb"</span>, <span class="string">"#b4e0f3"</span>, <span class="string">"#ffffff"</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 指定图表的配置项和数据</span></span><br><span class="line"><span class="keyword">var</span> option = &#123;</span><br><span class="line">    tooltip: &#123;</span><br><span class="line">        trigger: <span class="string">'item'</span>,</span><br><span class="line">        formatter: <span class="string">'&#123;b&#125;'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    series: [</span><br><span class="line">        &#123;</span><br><span class="line">            name: <span class="string">'中国'</span>,</span><br><span class="line">            type: <span class="string">'map'</span>,</span><br><span class="line">            mapType: <span class="string">'china'</span>,</span><br><span class="line">            selectedMode : <span class="string">'single'</span>,</span><br><span class="line">            label: &#123;</span><br><span class="line">                normal: &#123;</span><br><span class="line">                    show: <span class="literal">true</span></span><br><span class="line">                &#125;,</span><br><span class="line">                emphasis: &#123;</span><br><span class="line">                    show: <span class="literal">true</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            data:[</span><br><span class="line">                <span class="comment">// 默认高亮安徽省</span></span><br><span class="line">                &#123;<span class="attr">name</span>:<span class="string">'安徽'</span>, <span class="attr">selected</span>:<span class="literal">true</span>&#125;</span><br><span class="line">            ],</span><br><span class="line">            itemStyle: &#123;</span><br><span class="line">                normal: &#123;</span><br><span class="line">                    areaColor: <span class="string">'rgba(255,255,255,0.5)'</span>,</span><br><span class="line">                    color: <span class="string">'#000000'</span>,</span><br><span class="line">                    shadowBlur: <span class="number">200</span>,</span><br><span class="line">                    shadowColor: <span class="string">'rgba(0, 0, 0, 0.5)'</span></span><br><span class="line">                &#125;,</span><br><span class="line">                emphasis:&#123;</span><br><span class="line">                    areaColor: <span class="string">'#3be2fb'</span>,</span><br><span class="line">                    color: <span class="string">'#000000'</span>,</span><br><span class="line">                    shadowBlur: <span class="number">200</span>,</span><br><span class="line">                    shadowColor: <span class="string">'rgba(0, 0, 0, 0.5)'</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用刚指定的配置项和数据显示图表。</span></span><br><span class="line">myChart.setOption(option);</span><br><span class="line"></span><br><span class="line">myChart.on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">params</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(params);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> op = myChart.getOption();</span><br><span class="line">    <span class="keyword">var</span> data = op.series[<span class="number">0</span>].data;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> length = data.length;</span><br><span class="line"></span><br><span class="line">    data.some(<span class="function"><span class="keyword">function</span>(<span class="params">item, index</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(item.selected)&#123;</span><br><span class="line">            item.selected = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">var</span> next = (index + <span class="number">1</span>)%length;</span><br><span class="line">            data[next].selected = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    myChart.setOption(op);</span><br><span class="line"></span><br><span class="line">&#125;, <span class="number">3000</span>);</span><br></pre></td></tr></table></figure></p><h1 id="后续补充"><a href="#后续补充" class="headerlink" title="后续补充"></a>后续补充</h1><p>我从这里发现：<a href="https://github.com/ecomfe/echarts/issues/3282，选中地图的写法是这样的，而试了一下果然可以。主要是type要是`mapSelect`,而不是`geoSelect`" target="_blank" rel="noopener">https://github.com/ecomfe/echarts/issues/3282，选中地图的写法是这样的，而试了一下果然可以。主要是type要是`mapSelect`,而不是`geoSelect`</a><br><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">myChart</span><span class="selector-class">.dispatchAction</span>(&#123;</span><br><span class="line">    <span class="attribute">type</span>: <span class="string">'mapSelect'</span>,</span><br><span class="line">    <span class="comment">// 可选，系列 index，可以是一个数组指定多个系列</span></span><br><span class="line">    <span class="comment">// seriesIndex: 0,</span></span><br><span class="line">    <span class="comment">// 可选，系列名称，可以是一个数组指定多个系列</span></span><br><span class="line">    <span class="comment">// seriesName: string|Array,</span></span><br><span class="line">    <span class="comment">// 数据的 index，如果不指定也可以通过 name 属性根据名称指定数据</span></span><br><span class="line">    <span class="comment">// dataIndex: number,</span></span><br><span class="line">    <span class="comment">// 可选，数据名称，在有 dataIndex 的时候忽略</span></span><br><span class="line">    <span class="attribute">name</span>: <span class="string">'河北'</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;http://p3alsaatj.bkt.clouddn.com/20180209131759_k10o0Z_bVVWEB.jpeg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;最早我是想通过&lt;code&gt;dispatchAction&lt;/code&gt;方法去改变选中的省份
      
    
    </summary>
    
    
      <category term="echarts" scheme="https://wdd.js.org/tags/echarts/"/>
    
  </entry>
  
  <entry>
    <title>Python3笔记 列表方法详解</title>
    <link href="https://wdd.js.org/python3-list-methods-collect.html"/>
    <id>https://wdd.js.org/python3-list-methods-collect.html</id>
    <published>2018-02-09T05:15:13.000Z</published>
    <updated>2018-02-09T05:15:58.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="使用-或者list-创建列表"><a href="#使用-或者list-创建列表" class="headerlink" title="使用[]或者list()创建列表"></a>使用<code>[]</code>或者<code>list()</code>创建列表</h1><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">user = []</span><br><span class="line">user = list()</span><br></pre></td></tr></table></figure><h1 id="使用list-可以将其他类型转换成列表"><a href="#使用list-可以将其他类型转换成列表" class="headerlink" title="使用list()可以将其他类型转换成列表"></a>使用<code>list()</code>可以将其他类型转换成列表</h1><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将字符串转成列表</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; list(<span class="string">'abcde'</span>)</span><br><span class="line">[<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将元祖转成列表</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; list((<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>))</span><br><span class="line">[<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>]</span><br></pre></td></tr></table></figure><h1 id="使用-offset-获取元素-或-修改元素"><a href="#使用-offset-获取元素-或-修改元素" class="headerlink" title="使用[offset]获取元素 或 修改元素"></a>使用<code>[offset]</code>获取元素 或 修改元素</h1><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;</span>&gt; users = [<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>,<span class="string">'d'</span>,<span class="string">'e'</span>]</span><br><span class="line"><span class="comment"># 可以使用整数来获取某个元素</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users[<span class="number">0</span>]</span><br><span class="line"><span class="string">'a'</span></span><br><span class="line"><span class="comment"># 可以使用负整数来表示从尾部获取某个元素</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users[-<span class="number">1</span>]</span><br><span class="line"><span class="string">'e'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 数组越界会报错</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users[<span class="number">100</span>]</span><br><span class="line">Traceback (most recent call last)<span class="symbol">:</span></span><br><span class="line">  File <span class="string">"&lt;stdin&gt;"</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;<span class="class"><span class="keyword">module</span>&gt;</span></span><br><span class="line"><span class="symbol">IndexError:</span> list index out of range</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users[-<span class="number">100</span>]</span><br><span class="line">Traceback (most recent call last)<span class="symbol">:</span></span><br><span class="line">  File <span class="string">"&lt;stdin&gt;"</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;<span class="class"><span class="keyword">module</span>&gt;</span></span><br><span class="line"><span class="symbol">IndexError:</span> list index out of range</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改某个元素</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users[<span class="number">0</span>] = <span class="string">'wdd'</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users</span><br><span class="line">[<span class="string">'wdd'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt;</span><br></pre></td></tr></table></figure><h1 id="列表切片与提取元素"><a href="#列表切片与提取元素" class="headerlink" title="列表切片与提取元素"></a>列表切片与提取元素</h1><p>列表的切片或者提取之后仍然是一个列表<br>形式如：<code>list[start:end:step]</code><br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;</span>&gt; users</span><br><span class="line">[<span class="string">'wdd'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>]</span><br><span class="line"><span class="comment"># 正常截取 注意这里并不会截取到users[2]</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users[<span class="number">0</span><span class="symbol">:</span><span class="number">2</span>]</span><br><span class="line">[<span class="string">'wdd'</span>, <span class="string">'b'</span>]</span><br><span class="line"><span class="comment"># 也可从尾部截取</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users[<span class="number">0</span><span class="symbol">:-</span><span class="number">2</span>]</span><br><span class="line">[<span class="string">'wdd'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>]</span><br><span class="line"><span class="comment"># 这样可以获取所有的元素</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users[<span class="symbol">:</span>]</span><br><span class="line">[<span class="string">'wdd'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>]</span><br><span class="line"><span class="comment"># 也可以加上步长参数</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users[<span class="number">0</span><span class="symbol">:</span><span class="number">4</span><span class="symbol">:</span><span class="number">2</span>]</span><br><span class="line">[<span class="string">'wdd'</span>, <span class="string">'c'</span>]</span><br><span class="line"><span class="comment"># 也可以通过这种方式去将列表取反</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users[<span class="symbol">:</span><span class="symbol">:-</span><span class="number">1</span>]</span><br><span class="line">[<span class="string">'e'</span>, <span class="string">'d'</span>, <span class="string">'c'</span>, <span class="string">'b'</span>, <span class="string">'wdd'</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 注意切片时，偏移量可以越界，越界之后不会报错，仍然按照界限来处理 例如开始偏移量如果小于0，那么仍然会按照0去计算。</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users</span><br><span class="line">[<span class="string">'wdd'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users[-<span class="number">100</span><span class="symbol">:</span><span class="number">3</span>]</span><br><span class="line">[<span class="string">'wdd'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users[-<span class="number">100</span><span class="symbol">:</span><span class="number">100</span>]</span><br><span class="line">[<span class="string">'wdd'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt;</span><br></pre></td></tr></table></figure></p><h1 id="使用append-添加元素至尾部"><a href="#使用append-添加元素至尾部" class="headerlink" title="使用append()添加元素至尾部"></a>使用<code>append()</code>添加元素至尾部</h1><p>形式如：<code>list.append(item)</code><br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;</span>&gt; users</span><br><span class="line">[<span class="string">'wdd'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users.append(<span class="string">'ddw'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users</span><br><span class="line">[<span class="string">'wdd'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>, <span class="string">'ddw'</span>]</span><br></pre></td></tr></table></figure></p><h1 id="使用extend-或-合并列表"><a href="#使用extend-或-合并列表" class="headerlink" title="使用extend()或+=合并列表"></a>使用<code>extend()</code>或<code>+=</code>合并列表</h1><p>形式如：<code>list1.extend(list2)</code><br>这两个方法都会直接修改原列表<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;</span>&gt; users</span><br><span class="line">[<span class="string">'wdd'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>, <span class="string">'ddw'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; names</span><br><span class="line">[<span class="string">'heihei'</span>, <span class="string">'haha'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users.extend(names)</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users</span><br><span class="line">[<span class="string">'wdd'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>, <span class="string">'ddw'</span>, <span class="string">'heihei'</span>, <span class="string">'haha'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users += names</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users</span><br><span class="line">[<span class="string">'wdd'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>, <span class="string">'ddw'</span>, <span class="string">'heihei'</span>, <span class="string">'haha'</span>, <span class="string">'heihei'</span>, <span class="string">'haha'</span>]</span><br></pre></td></tr></table></figure></p><h1 id="使用insert-在指定位置插入元素"><a href="#使用insert-在指定位置插入元素" class="headerlink" title="使用insert()在指定位置插入元素"></a>使用<code>insert()</code>在指定位置插入元素</h1><p>形式如：<code>list.insert(offset, item)</code><br>insert也不存在越界的问题，偏移量正负都行，越界之后会自动伸缩到界限之内，并不会报错<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;</span>&gt; users</span><br><span class="line">[<span class="string">'wdd'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>, <span class="string">'ddw'</span>, <span class="string">'heihei'</span>, <span class="string">'haha'</span>, <span class="string">'heihei'</span>, <span class="string">'haha'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users.insert(<span class="number">0</span>,<span class="string">'xiaoxiao'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users</span><br><span class="line">[<span class="string">'xiaoxiao'</span>, <span class="string">'wdd'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>, <span class="string">'ddw'</span>, <span class="string">'heihei'</span>, <span class="string">'haha'</span>, <span class="string">'heihei'</span>, <span class="string">'haha'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users.insert(-<span class="number">1</span>,<span class="string">'-xiaoxiao'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users</span><br><span class="line">[<span class="string">'xiaoxiao'</span>, <span class="string">'wdd'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>, <span class="string">'ddw'</span>, <span class="string">'heihei'</span>, <span class="string">'haha'</span>, <span class="string">'heihei'</span>, <span class="string">'-xiaoxiao'</span>, <span class="string">'haha'</span>]</span><br><span class="line"><span class="comment"># 下面-100肯定越界了</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users.insert(-<span class="number">100</span>,<span class="string">'-xiaoxiao'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users</span><br><span class="line">[<span class="string">'-xiaoxiao'</span>, <span class="string">'xiaoxiao'</span>, <span class="string">'wdd'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>, <span class="string">'ddw'</span>, <span class="string">'heihei'</span>, <span class="string">'haha'</span>, <span class="string">'heihei'</span>, <span class="string">'-xiaoxiao'</span>, <span class="string">'haha'</span>]</span><br><span class="line"><span class="comment"># 下面100也是越界了</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users.insert(<span class="number">100</span>,<span class="string">'-xiaoxiao'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users</span><br><span class="line">[<span class="string">'-xiaoxiao'</span>, <span class="string">'xiaoxiao'</span>, <span class="string">'wdd'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>, <span class="string">'ddw'</span>, <span class="string">'heihei'</span>, <span class="string">'haha'</span>, <span class="string">'heihei'</span>, <span class="string">'-xiaoxiao'</span>, <span class="string">'haha'</span>, <span class="string">'-xiaoxiao'</span>]</span><br></pre></td></tr></table></figure></p><h1 id="使用del删除某个元素"><a href="#使用del删除某个元素" class="headerlink" title="使用del删除某个元素"></a>使用<code>del</code>删除某个元素</h1><p>形式如：<code>del list[offset]</code><br>del是python的语句，而不是列表的方法，del删除不存在的元素时，也会提示越界<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;</span>&gt; users</span><br><span class="line">[<span class="string">'-xiaoxiao'</span>, <span class="string">'xiaoxiao'</span>, <span class="string">'wdd'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>, <span class="string">'ddw'</span>, <span class="string">'heihei'</span>, <span class="string">'haha'</span>, <span class="string">'heihei'</span>, <span class="string">'-xiaoxiao'</span>, <span class="string">'haha'</span>, <span class="string">'-xiaoxiao'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; del users[<span class="number">0</span>]</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users</span><br><span class="line">[<span class="string">'xiaoxiao'</span>, <span class="string">'wdd'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>, <span class="string">'ddw'</span>, <span class="string">'heihei'</span>, <span class="string">'haha'</span>, <span class="string">'heihei'</span>, <span class="string">'-xiaoxiao'</span>, <span class="string">'haha'</span>, <span class="string">'-xiaoxiao'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; del users[<span class="number">100</span>]</span><br><span class="line">Traceback (most recent call last)<span class="symbol">:</span></span><br><span class="line">  File <span class="string">"&lt;stdin&gt;"</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;<span class="class"><span class="keyword">module</span>&gt;</span></span><br><span class="line"><span class="symbol">IndexError:</span> list assignment index out of range</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; del users[-<span class="number">100</span>]</span><br><span class="line">Traceback (most recent call last)<span class="symbol">:</span></span><br><span class="line">  File <span class="string">"&lt;stdin&gt;"</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;<span class="class"><span class="keyword">module</span>&gt;</span></span><br><span class="line"><span class="symbol">IndexError:</span> list assignment index out of range</span><br></pre></td></tr></table></figure></p><h1 id="使用remove删除具有指定值的元素"><a href="#使用remove删除具有指定值的元素" class="headerlink" title="使用remove删除具有指定值的元素"></a>使用<code>remove</code>删除具有指定值的元素</h1><p>形式如：<code>list.remove(value)</code><br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;</span>&gt; users</span><br><span class="line">[<span class="string">'xiaoxiao'</span>, <span class="string">'wdd'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>, <span class="string">'ddw'</span>, <span class="string">'heihei'</span>, <span class="string">'haha'</span>, <span class="string">'heihei'</span>, <span class="string">'-xiaoxiao'</span>, <span class="string">'haha'</span>, <span class="string">'-xiaoxiao'</span>]</span><br><span class="line"><span class="comment"># 删除指定值'c'</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users.remove(<span class="string">'c'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users</span><br><span class="line">[<span class="string">'xiaoxiao'</span>, <span class="string">'wdd'</span>, <span class="string">'b'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>, <span class="string">'ddw'</span>, <span class="string">'heihei'</span>, <span class="string">'haha'</span>, <span class="string">'heihei'</span>, <span class="string">'-xiaoxiao'</span>, <span class="string">'haha'</span>, <span class="string">'-xiaoxiao'</span>]</span><br><span class="line"><span class="comment"># 删除不存在的值会报错</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users.remove(<span class="string">'alsdkfjalsdf'</span>)</span><br><span class="line">Traceback (most recent call last)<span class="symbol">:</span></span><br><span class="line">  File <span class="string">"&lt;stdin&gt;"</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;<span class="class"><span class="keyword">module</span>&gt;</span></span><br><span class="line"><span class="symbol">ValueError:</span> list.remove(x): x <span class="keyword">not</span> <span class="keyword">in</span> list</span><br><span class="line"><span class="comment"># 如果该值存在多个，那么只能删除到第一个</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users.remove(<span class="string">'haha'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users</span><br><span class="line">[<span class="string">'xiaoxiao'</span>, <span class="string">'wdd'</span>, <span class="string">'b'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>, <span class="string">'ddw'</span>, <span class="string">'heihei'</span>, <span class="string">'heihei'</span>, <span class="string">'-xiaoxiao'</span>, <span class="string">'haha'</span>, <span class="string">'-xiaoxiao'</span>]</span><br></pre></td></tr></table></figure></p><h1 id="使用pop-方式返回某个元素后，并在数组里删除它"><a href="#使用pop-方式返回某个元素后，并在数组里删除它" class="headerlink" title="使用pop()方式返回某个元素后，并在数组里删除它"></a>使用<code>pop()</code>方式返回某个元素后，并在数组里删除它</h1><p>形式如：<code>list.pop(offset=-1)</code> 偏移量默认等于-1，也就是删除最后的元素<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;</span>&gt; users</span><br><span class="line">[<span class="string">'xiaoxiao'</span>, <span class="string">'wdd'</span>, <span class="string">'b'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>, <span class="string">'ddw'</span>, <span class="string">'heihei'</span>, <span class="string">'heihei'</span>, <span class="string">'-xiaoxiao'</span>, <span class="string">'haha'</span>, <span class="string">'-xiaoxiao'</span>]</span><br><span class="line"><span class="comment"># 删除最后的元素</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users.pop()</span><br><span class="line"><span class="string">'-xiaoxiao'</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users</span><br><span class="line">[<span class="string">'xiaoxiao'</span>, <span class="string">'wdd'</span>, <span class="string">'b'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>, <span class="string">'ddw'</span>, <span class="string">'heihei'</span>, <span class="string">'heihei'</span>, <span class="string">'-xiaoxiao'</span>, <span class="string">'haha'</span>]</span><br><span class="line"><span class="comment"># 如果列表本身就是空的，那么pop时会报错</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; user.pop(<span class="number">0</span>)</span><br><span class="line">Traceback (most recent call last)<span class="symbol">:</span></span><br><span class="line">  File <span class="string">"&lt;stdin&gt;"</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;<span class="class"><span class="keyword">module</span>&gt;</span></span><br><span class="line"><span class="symbol">IndexError:</span> pop from empty list</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users.pop(<span class="number">0</span>)</span><br><span class="line"><span class="string">'xiaoxiao'</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users</span><br><span class="line">[<span class="string">'wdd'</span>, <span class="string">'b'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>, <span class="string">'ddw'</span>, <span class="string">'heihei'</span>, <span class="string">'heihei'</span>, <span class="string">'-xiaoxiao'</span>, <span class="string">'haha'</span>]</span><br><span class="line"><span class="comment"># 越界时也会报错</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users.pop(<span class="number">100</span>)</span><br><span class="line">Traceback (most recent call last)<span class="symbol">:</span></span><br><span class="line">  File <span class="string">"&lt;stdin&gt;"</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;<span class="class"><span class="keyword">module</span>&gt;</span></span><br><span class="line"><span class="symbol">IndexError:</span> pop index out of range</span><br></pre></td></tr></table></figure></p><h1 id="使用index-查询具有特定值的元素位置"><a href="#使用index-查询具有特定值的元素位置" class="headerlink" title="使用index()查询具有特定值的元素位置"></a>使用<code>index()</code>查询具有特定值的元素位置</h1><p>形式如：<code>list.index(value)</code><br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># index只会返回第一遇到该值得位置</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users</span><br><span class="line">[<span class="string">'wdd'</span>, <span class="string">'b'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>, <span class="string">'ddw'</span>, <span class="string">'heihei'</span>, <span class="string">'heihei'</span>, <span class="string">'-xiaoxiao'</span>, <span class="string">'haha'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users.index(<span class="string">'heihei'</span>)</span><br><span class="line"><span class="number">5</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果该值不存在，也会报错</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users.index(<span class="string">'laksdf'</span>)</span><br><span class="line">Traceback (most recent call last)<span class="symbol">:</span></span><br><span class="line">  File <span class="string">"&lt;stdin&gt;"</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;<span class="class"><span class="keyword">module</span>&gt;</span></span><br><span class="line"><span class="symbol">ValueError:</span> <span class="string">'laksdf'</span> is <span class="keyword">not</span> <span class="keyword">in</span> list</span><br></pre></td></tr></table></figure></p><h1 id="使用in判断值是否存在列表"><a href="#使用in判断值是否存在列表" class="headerlink" title="使用in判断值是否存在列表"></a>使用<code>in</code>判断值是否存在列表</h1><p>形式如：<code>value in list</code><br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;</span>&gt; users</span><br><span class="line">[<span class="string">'wdd'</span>, <span class="string">'b'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>, <span class="string">'ddw'</span>, <span class="string">'heihei'</span>, <span class="string">'heihei'</span>, <span class="string">'-xiaoxiao'</span>, <span class="string">'haha'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; <span class="string">'wdd'</span> in users</span><br><span class="line">True</span><br></pre></td></tr></table></figure></p><h1 id="使用count-记录特定值出现的次数"><a href="#使用count-记录特定值出现的次数" class="headerlink" title="使用count()记录特定值出现的次数"></a>使用<code>count()</code>记录特定值出现的次数</h1><p>形式如：<code>list.count(value)</code><br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;</span>&gt; users</span><br><span class="line">[<span class="string">'wdd'</span>, <span class="string">'b'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>, <span class="string">'ddw'</span>, <span class="string">'heihei'</span>, <span class="string">'heihei'</span>, <span class="string">'-xiaoxiao'</span>, <span class="string">'haha'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users.count(<span class="string">'heihei'</span>)</span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users.count(<span class="string">'h'</span>)</span><br><span class="line"><span class="number">0</span></span><br></pre></td></tr></table></figure></p><h1 id="使用join-将列表转为字符串"><a href="#使用join-将列表转为字符串" class="headerlink" title="使用join()将列表转为字符串"></a>使用<code>join()</code>将列表转为字符串</h1><p>形式如：<code>string.join(list)</code><br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;</span>&gt; users</span><br><span class="line">[<span class="string">'wdd'</span>, <span class="string">'b'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>, <span class="string">'ddw'</span>, <span class="string">'heihei'</span>, <span class="string">'heihei'</span>, <span class="string">'-xiaoxiao'</span>, <span class="string">'haha'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; <span class="string">','</span>.join(users)</span><br><span class="line"><span class="string">'wdd,b,d,e,ddw,heihei,heihei,-xiaoxiao,haha'</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; user</span><br><span class="line">[]</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; <span class="string">','</span>.join(user)</span><br><span class="line"><span class="string">''</span></span><br></pre></td></tr></table></figure></p><h1 id="使用sort-重新排列列表元素"><a href="#使用sort-重新排列列表元素" class="headerlink" title="使用sort()重新排列列表元素"></a>使用<code>sort()</code>重新排列列表元素</h1><p>形式如：list.sort()<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;</span>&gt; users</span><br><span class="line">[<span class="string">'wdd'</span>, <span class="string">'b'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>, <span class="string">'ddw'</span>, <span class="string">'heihei'</span>, <span class="string">'heihei'</span>, <span class="string">'-xiaoxiao'</span>, <span class="string">'haha'</span>]</span><br><span class="line"><span class="comment"># 默认是升序排序</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users.sort()</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users</span><br><span class="line">[<span class="string">'-xiaoxiao'</span>, <span class="string">'b'</span>, <span class="string">'d'</span>, <span class="string">'ddw'</span>, <span class="string">'e'</span>, <span class="string">'haha'</span>, <span class="string">'heihei'</span>, <span class="string">'heihei'</span>, <span class="string">'wdd'</span>]</span><br><span class="line"><span class="comment"># 加入reverse=True, 可以降序排序</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users.sort(reverse=True)</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users</span><br><span class="line">[<span class="string">'wdd'</span>, <span class="string">'heihei'</span>, <span class="string">'heihei'</span>, <span class="string">'haha'</span>, <span class="string">'e'</span>, <span class="string">'ddw'</span>, <span class="string">'d'</span>, <span class="string">'b'</span>, <span class="string">'-xiaoxiao'</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过匿名函数，传入函数进行自定义排序</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; students</span><br><span class="line">[&#123;<span class="string">'name'</span>: <span class="string">'wdd'</span>, <span class="string">'age'</span>: <span class="number">343</span>&#125;, &#123;<span class="string">'name'</span>: <span class="string">'ddw'</span>, <span class="string">'age'</span>: <span class="number">43</span>&#125;, &#123;<span class="string">'name'</span>: <span class="string">'jik'</span>, <span class="string">'age'</span>: <span class="number">90</span>&#125;]</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; students.sort(key=lambda <span class="symbol">item:</span> item[<span class="string">'age'</span>])</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; students</span><br><span class="line">[&#123;<span class="string">'name'</span>: <span class="string">'ddw'</span>, <span class="string">'age'</span>: <span class="number">43</span>&#125;, &#123;<span class="string">'name'</span>: <span class="string">'jik'</span>, <span class="string">'age'</span>: <span class="number">90</span>&#125;, &#123;<span class="string">'name'</span>: <span class="string">'wdd'</span>, <span class="string">'age'</span>: <span class="number">343</span>&#125;]</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; students.sort(key=lambda <span class="symbol">item:</span> item[<span class="string">'age'</span>], reverse=True)</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; students</span><br><span class="line">[&#123;<span class="string">'name'</span>: <span class="string">'wdd'</span>, <span class="string">'age'</span>: <span class="number">343</span>&#125;, &#123;<span class="string">'name'</span>: <span class="string">'jik'</span>, <span class="string">'age'</span>: <span class="number">90</span>&#125;, &#123;<span class="string">'name'</span>: <span class="string">'ddw'</span>, <span class="string">'age'</span>: <span class="number">43</span>&#125;]</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt;</span><br></pre></td></tr></table></figure></p><h1 id="使用reverse-将列表翻转"><a href="#使用reverse-将列表翻转" class="headerlink" title="使用reverse()将列表翻转"></a>使用<code>reverse()</code>将列表翻转</h1><p>形式如：list.reverse()<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;</span>&gt; users</span><br><span class="line">[<span class="string">'wdd'</span>, <span class="string">'heihei'</span>, <span class="string">'heihei'</span>, <span class="string">'haha'</span>, <span class="string">'e'</span>, <span class="string">'ddw'</span>, <span class="string">'d'</span>, <span class="string">'b'</span>, <span class="string">'-xiaoxiao'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users.reverse()</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users</span><br><span class="line">[<span class="string">'-xiaoxiao'</span>, <span class="string">'b'</span>, <span class="string">'d'</span>, <span class="string">'ddw'</span>, <span class="string">'e'</span>, <span class="string">'haha'</span>, <span class="string">'heihei'</span>, <span class="string">'heihei'</span>, <span class="string">'wdd'</span>]</span><br></pre></td></tr></table></figure></p><h1 id="使用copy-复制列表"><a href="#使用copy-复制列表" class="headerlink" title="使用copy()复制列表"></a>使用<code>copy()</code>复制列表</h1><p>形式如：<code>list2 = list1.copy()</code><br>list2 = list1 这种并不是列表的复制，只是给列表起了别名。实际上还是指向同一个值。<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;</span>&gt; users</span><br><span class="line">[<span class="string">'-xiaoxiao'</span>, <span class="string">'b'</span>, <span class="string">'d'</span>, <span class="string">'ddw'</span>, <span class="string">'e'</span>, <span class="string">'haha'</span>, <span class="string">'heihei'</span>, <span class="string">'heihei'</span>, <span class="string">'wdd'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users2 = users.copy()</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users2</span><br><span class="line">[<span class="string">'-xiaoxiao'</span>, <span class="string">'b'</span>, <span class="string">'d'</span>, <span class="string">'ddw'</span>, <span class="string">'e'</span>, <span class="string">'haha'</span>, <span class="string">'heihei'</span>, <span class="string">'heihei'</span>, <span class="string">'wdd'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt;</span><br></pre></td></tr></table></figure></p><h1 id="使用clear-清空列表"><a href="#使用clear-清空列表" class="headerlink" title="使用clear()清空列表"></a>使用<code>clear()</code>清空列表</h1><p>形式如： <code>list.clear()</code><br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;</span>&gt; users2</span><br><span class="line">[<span class="string">'-xiaoxiao'</span>, <span class="string">'b'</span>, <span class="string">'d'</span>, <span class="string">'ddw'</span>, <span class="string">'e'</span>, <span class="string">'haha'</span>, <span class="string">'heihei'</span>, <span class="string">'heihei'</span>, <span class="string">'wdd'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users2.clear()</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users2</span><br><span class="line">[]</span><br></pre></td></tr></table></figure></p><h1 id="使用len-获取列表长度"><a href="#使用len-获取列表长度" class="headerlink" title="使用len()获取列表长度"></a>使用<code>len()</code>获取列表长度</h1><p>形式如：<code>len(list)</code><br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;</span>&gt; users</span><br><span class="line">[<span class="string">'-xiaoxiao'</span>, <span class="string">'b'</span>, <span class="string">'d'</span>, <span class="string">'ddw'</span>, <span class="string">'e'</span>, <span class="string">'haha'</span>, <span class="string">'heihei'</span>, <span class="string">'heihei'</span>, <span class="string">'wdd'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; len(users)</span><br><span class="line"><span class="number">9</span></span><br></pre></td></tr></table></figure></p><h1 id="关于列表越界的深入思考"><a href="#关于列表越界的深入思考" class="headerlink" title="关于列表越界的深入思考"></a>关于列表越界的深入思考</h1><p>写了这些方法后，我有一些疑问，为什么有些操作会提示越界，有些则不会呢？</p><p>会提示偏移量越界的操作有</p><ul><li>list[offset] 读取或者修改某个元素</li><li>del list[offset] 删除指定位置的元素</li><li>list.remove(value) 删除指定值的元素</li><li>list.pop(offset) 删除指定位置的元素</li></ul><p>如果偏移量越界，这些方法会报错的。我的个人理解是:<br><code>假如我想读取偏移量为10的元素，但是该元素并不存在，如果系统自动给你读取了列表的最后一个元素，而且不报错，这是无法容忍的bug。 如果我想删除第10个元素，但是第10个元素并不存在，而系统帮你删除了列表的最后一个元素，我觉得这也是无法容忍的。</code></p><p>所以在使用这些方法时，务必确认该偏移量的元素是否存，否则可能会报错。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;使用-或者list-创建列表&quot;&gt;&lt;a href=&quot;#使用-或者list-创建列表&quot; class=&quot;headerlink&quot; title=&quot;使用[]或者list()创建列表&quot;&gt;&lt;/a&gt;使用&lt;code&gt;[]&lt;/code&gt;或者&lt;code&gt;list()&lt;/code&gt;创建列表
      
    
    </summary>
    
    
      <category term="python3" scheme="https://wdd.js.org/tags/python3/"/>
    
  </entry>
  
  <entry>
    <title>我苦苦寻找诡异的bug原因，其实是我的无知</title>
    <link href="https://wdd.js.org/real-reason-of-my-bugs.html"/>
    <id>https://wdd.js.org/real-reason-of-my-bugs.html</id>
    <published>2018-02-09T05:13:12.000Z</published>
    <updated>2018-02-09T05:14:05.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题1：chosen插件无法显示图标"><a href="#问题1：chosen插件无法显示图标" class="headerlink" title="问题1：chosen插件无法显示图标"></a>问题1：chosen插件无法显示图标</h1><p><code>问题现象</code><br>在我本地调试的时候，我使用了一个多选下拉框的插件，就是<a href="https://harvesthq.github.io/chosen/" target="_blank" rel="noopener">chosen</a>, 不知道为什么，这个多选框上面的图标不见了。我找了半天没有找到原因，然后我把我的机器的内网地址给我同事，让他访问我机器，当它访问到这个页面时。他的电脑上居然显示出了这个下拉框的图标。</p><p><code>这是什么鬼？</code>, 为什么同样的代码，在我的电脑上显示不出图标，但是在他的电脑上可以显示。有句名言说的好：<code>没有什么bug是一遍调试解决不了的，如果有，就再仔细调试一遍</code>。于是我就再次调试一遍。</p><p>我发现了一些第一遍没有注意到的东西<code>媒体查询</code>，就是在css里有这样的语句：<br><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@media</span></span><br></pre></td></tr></table></figure></p><p>从这里作为切入口，我发现：<code>媒体查询的类会覆盖它原生的类的属性</code></p><p>由于我的电脑视网膜屏幕，分辨率比较高，触发了媒体查询，这就导致了媒体查询的类覆盖了原生的类。而覆盖后的类，使用了<code>chosen-sprite@2x.png</code>作为图标的背景图片。但是这个图片并没有被放在这个插件的目录下，有的只有<code>chosen-sprite.png</code>这个图片。在一般情况下，都是用<code>chosen-sprite.png</code>作为背景图片的。这就解释了：为什么同事的电脑上出现了图标，但是我的电脑上没有出现这个图标。</p><p>总结: <code>如果你要使用一个插件，你最好把这个插件的所有文件都放在同一个目录下。而不要只放一些你认为有用的文件。最后：媒体查询的相关知识也是必要的。</code></p><h1 id="问题2：jQuery-与-Vue之间的暧昧"><a href="#问题2：jQuery-与-Vue之间的暧昧" class="headerlink" title="问题2：jQuery 与 Vue之间的暧昧"></a>问题2：jQuery 与 Vue之间的暧昧</h1><p>jQuery流派代表着直接操纵DOM的流派，Vue流派代表着操纵数据的流派。</p><p>如果在项目里，你使用了一些jQuery插件，也使用了Vue，这就可能导致一些问题。</p><p>举个例子：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/vue/2.4.4/vue.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/jquery/3.2.1/jquery.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    姓名 <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">v-model</span>=<span class="string">"userName"</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    年龄 <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"userAge"</span> <span class="attr">v-model</span>=<span class="string">"userAge"</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="actionscript"><span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">    el: <span class="string">'#app'</span>,</span></span><br><span class="line"><span class="undefined">    data: &#123;</span></span><br><span class="line"><span class="actionscript">        userName: <span class="string">''</span>,</span></span><br><span class="line"><span class="undefined">        userAge: 12</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">&#125;);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">$(<span class="string">'#userAge'</span>).val(<span class="number">14</span>);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在页面刚打开时：姓名输入框是空的，年龄输入框是14。但是一旦你在姓名输入框输入任何字符时，年龄输入框的值就会变成12。</p><p>如果你仔细看过<a href="https://cn.vuejs.org/v2/guide/forms.html" target="_blank" rel="noopener">Vue官方文档</a>，你会很容易定位问题所在。</p><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">v</span>-model 会忽略所有表单元素的 value、checked、selected 特性的初始值。因为它会选择 <span class="type">Vue</span> 实例数据来作为具体的值。你应该通过 <span class="type">JavaScript</span> 在组件的 <span class="class"><span class="keyword">data</span> 选项中声明初始值。<span class="comment">---Vue官方文档</span></span></span><br></pre></td></tr></table></figure><p>你可以用 v-model 指令在表单控件元素上创建双向数据绑定。它会根据控件类型自动选取正确的方法来更新元素。尽管有些神奇，但 <code>v-model 本质上不过是语法糖，它负责监听用户的输入事件以更新数据</code>，并特别处理一些极端的例子。</p><p>当userAge被jQuery改成14时，Vue实例中的userAge任然是12。当你输入userName时，Vue发现数据改变，触发虚拟DOM的重新渲染，同时也将userAge渲染成了12。</p><p><img src="http://p3alsaatj.bkt.clouddn.com/20180209131356_2Lfly1_Screenshot.jpeg" alt=""></p><p>总结：<code>如果你在Vue项目中逼不得已使用jQuery, 你要知道这会导致哪些常见的问题，以及解决思路。</code></p><h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><p><code>我苦苦寻找诡异的bug原因，其实是我的无知。</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;问题1：chosen插件无法显示图标&quot;&gt;&lt;a href=&quot;#问题1：chosen插件无法显示图标&quot; class=&quot;headerlink&quot; title=&quot;问题1：chosen插件无法显示图标&quot;&gt;&lt;/a&gt;问题1：chosen插件无法显示图标&lt;/h1&gt;&lt;p&gt;&lt;code&gt;
      
    
    </summary>
    
    
      <category term="思想者" scheme="https://wdd.js.org/tags/%E6%80%9D%E6%83%B3%E8%80%85/"/>
    
  </entry>
  
  <entry>
    <title>centos7 初始化软件安装及服务管理</title>
    <link href="https://wdd.js.org/centos7-init-install-packages.html"/>
    <id>https://wdd.js.org/centos7-init-install-packages.html</id>
    <published>2018-02-09T05:10:42.000Z</published>
    <updated>2018-02-09T05:11:31.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>因为阿里云最近搞活动，所以买了一台阿里云香港的一台最低配置主机。用来搞搞开发，做静态页面，给女朋友发短信，爬爬页面，翻墙等等。</p></blockquote><h1 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h1><h2 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h2><figure class="highlight d"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">yum install git</span><br><span class="line"></span><br><span class="line"><span class="comment">//检查git是否安装成功</span></span><br><span class="line">git --<span class="keyword">version</span></span><br></pre></td></tr></table></figure><h2 id="安装oh-my-zsh"><a href="#安装oh-my-zsh" class="headerlink" title="安装oh-my-zsh"></a>安装oh-my-zsh</h2><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">/<span class="regexp">/ 检查有没有安装zsh, 没有安装的话，先安装zsh</span></span><br><span class="line"><span class="regexp">cat /etc</span><span class="regexp">/shells</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">/</span><span class="regexp">/ 没有安装zsh,先安装zsh</span></span><br><span class="line"><span class="regexp">yum install zsh</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">/</span><span class="regexp">/ 然后安装oh-my-zsh</span></span><br><span class="line"><span class="regexp">sh -c "$(curl -fsSL https:/</span><span class="regexp">/raw.github.com/robbyrussell</span><span class="regexp">/oh-my-zsh/master</span><span class="regexp">/tools/install</span>.sh)<span class="string">"</span></span><br></pre></td></tr></table></figure><h2 id="安装ss"><a href="#安装ss" class="headerlink" title="安装ss"></a>安装ss</h2><p>基于python2.7</p><p><a href="http://heroi.cn/2017/08/09/%E9%98%BF%E9%87%8C%E4%BA%91ecs%E9%A6%99%E6%B8%AF%E8%8A%82%E7%82%B9%E6%90%AD%E5%BB%BAss%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E5%85%A8%E8%BF%87%E7%A8%8B/" target="_blank" rel="noopener">参考文献</a></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">//</span> 安装setuptools pip</span><br><span class="line">yum install python-setuptools &amp;&amp; easy_install pip</span><br><span class="line"></span><br><span class="line"><span class="regexp">//</span> 安装shadowsocks</span><br><span class="line">pip install shadowsocks</span><br><span class="line"></span><br><span class="line"><span class="regexp">//</span> 新建<span class="regexp">/etc/</span>shadowsocks.json 文件</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"server"</span>:<span class="string">"0.0.0.0"</span>,</span><br><span class="line">    <span class="string">"server_port"</span>:your-server_port,</span><br><span class="line">    <span class="string">"local_address"</span>:<span class="string">"127.0.0.1"</span>,</span><br><span class="line">    <span class="string">"local_port"</span>:<span class="number">1080</span>,</span><br><span class="line">    <span class="string">"password"</span>:<span class="string">"your-password"</span>,</span><br><span class="line">    <span class="string">"timeout"</span>:<span class="number">300</span>,</span><br><span class="line">    <span class="string">"method"</span>:<span class="string">"aes-256-cfb"</span>,</span><br><span class="line">    <span class="string">"fast_open"</span>:false,</span><br><span class="line">    <span class="string">"workers"</span>:<span class="number">5</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="regexp">//</span> 服务启动</span><br><span class="line">ssserver -c <span class="regexp">/etc/</span>shadowsocks.json -d start</span><br><span class="line"></span><br><span class="line"><span class="regexp">//</span> 服务停止</span><br><span class="line">ssserver -d stop</span><br><span class="line"></span><br><span class="line"><span class="regexp">//</span> 查看服务状态</span><br><span class="line">netstat -tunlp</span><br></pre></td></tr></table></figure><h2 id="安装nodejs"><a href="#安装nodejs" class="headerlink" title="安装nodejs"></a>安装nodejs</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">yum <span class="keyword">install</span> epel-<span class="keyword">release</span></span><br><span class="line">yum <span class="keyword">install</span> nodejs</span><br><span class="line"></span><br><span class="line">// 如果出现 CentOS <span class="number">7</span> 使用 npm 失败 npm: symbol SSL_set_cert_cb</span><br><span class="line">yum -y <span class="keyword">install</span> yum-utils</span><br><span class="line">yum-config-manager <span class="comment">--enable cr &amp;&amp; yum update</span></span><br><span class="line"></span><br><span class="line">// 安装cnpm</span><br><span class="line">npm <span class="keyword">install</span> -g cnpm <span class="comment">--registry=https://registry.npm.taobao.org</span></span><br></pre></td></tr></table></figure><h2 id="安装nginx"><a href="#安装nginx" class="headerlink" title="安装nginx"></a>安装nginx</h2><p><a href="http://www.centoscn.com/nginx/2017/0119/8422.html" target="_blank" rel="noopener">参考</a><br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">//</span> 直接通过 yum install nginx 肯定是不行的,因为yum没有nginx，所以首先把 nginx 的源加入 yum 中。</span><br><span class="line"><span class="regexp">//</span> 将nginx放到yum repro库中</span><br><span class="line">rpm -ivh http:<span class="regexp">//</span>nginx.org<span class="regexp">/packages/</span>centos<span class="regexp">/7/</span>noarch<span class="regexp">/RPMS/</span>nginx-release-centos-<span class="number">7</span>-<span class="number">0</span>.el7.ngx.noarch.rpm</span><br><span class="line"></span><br><span class="line"><span class="regexp">//</span> 查看nginx信息</span><br><span class="line">yum info nginx</span><br><span class="line"></span><br><span class="line"><span class="regexp">//</span> 安装nginx</span><br><span class="line">yum install nginx</span><br></pre></td></tr></table></figure></p><h1 id="安装python3"><a href="#安装python3" class="headerlink" title="安装python3"></a>安装python3</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum <span class="keyword">install</span> epel-<span class="keyword">release</span></span><br><span class="line">yum <span class="keyword">install</span> python34</span><br><span class="line">python3 <span class="comment">--version</span></span><br></pre></td></tr></table></figure><h1 id="服务管理"><a href="#服务管理" class="headerlink" title="服务管理"></a>服务管理</h1><table><thead><tr><th>功能</th><th>命令</th></tr></thead><tbody><tr><td>使服务开启启动</td><td>systemctl enable httpd.service</td></tr><tr><td>关闭服务开机启动</td><td>systemctl disabled httpd.service</td></tr><tr><td>检查服务状态</td><td>systemctl status httpd.service</td></tr><tr><td>查看所有已启动的服务</td><td>systemctl list-units –type=service</td></tr><tr><td>启动服务</td><td>systemctl start httpd.service</td></tr><tr><td>停止服务</td><td>systemctl stop httpd.service</td></tr><tr><td>重启服务</td><td>systemctl restart httpd.service</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;因为阿里云最近搞活动，所以买了一台阿里云香港的一台最低配置主机。用来搞搞开发，做静态页面，给女朋友发短信，爬爬页面，翻墙等等。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;软件安装&quot;&gt;&lt;a href=&quot;#软件安装&quot; class=&quot;heade
      
    
    </summary>
    
    
      <category term="centos7" scheme="https://wdd.js.org/tags/centos7/"/>
    
  </entry>
  
  <entry>
    <title>一行命令搭建简易静态文件http服务器</title>
    <link href="https://wdd.js.org/one-command-create-static-file-server.html"/>
    <id>https://wdd.js.org/one-command-create-static-file-server.html</id>
    <published>2018-02-09T05:01:14.000Z</published>
    <updated>2018-02-09T05:02:53.000Z</updated>
    
    <content type="html"><![CDATA[<p>简易服务器：在命令执行的所在路径启动一个http服务器，然后你可以通过浏览器访问该路径下的所有文件。</p><p>在局域网内传文件，或者自己测试使用都是非常方便的。</p><h1 id="基于python"><a href="#基于python" class="headerlink" title="基于python"></a>基于python</h1><p><img src="http://p3alsaatj.bkt.clouddn.com/20180209130207_yzmvQO_Screenshot.jpeg" alt=""></p><h2 id="基于Python2"><a href="#基于Python2" class="headerlink" title="基于Python2"></a>基于Python2</h2><p><code>python -m SimpleHTTPServer port</code></p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; python -m SimpleHTTPServer <span class="number">8099</span></span><br><span class="line">Serving HTTP on <span class="number">0.0.0.0</span> port <span class="number">8099</span> ...</span><br><span class="line"><span class="number">127.0.0.1</span> - - <span class="string">[24/Oct/2017 11:07:56]</span> <span class="string">"<span class="keyword">GET</span> / HTTP/1.1"</span> <span class="number">200</span> -</span><br></pre></td></tr></table></figure><h2 id="基于python3"><a href="#基于python3" class="headerlink" title="基于python3"></a>基于python3</h2><p><code>python3 -m http.server port</code></p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; python3 -m http.server <span class="number">8099</span></span><br><span class="line">Serving HTTP on <span class="number">0.0.0.0</span> port <span class="number">8099</span> (http://<span class="number">0.0.0.0:8099</span>/) ...</span><br><span class="line"><span class="number">127.0.0.1</span> - - <span class="string">[24/Oct/2017 11:05:06]</span> <span class="string">"<span class="keyword">GET</span> / HTTP/1.1"</span> <span class="number">200</span> -</span><br><span class="line"><span class="number">127.0.0.1</span> - - <span class="string">[24/Oct/2017 11:05:06]</span> code <span class="number">404</span>, message File not found</span><br><span class="line"><span class="number">127.0.0.1</span> - - <span class="string">[24/Oct/2017 11:05:06]</span> <span class="string">"<span class="keyword">GET</span> /favicon.ico HTTP/1.1"</span> <span class="number">404</span> -</span><br></pre></td></tr></table></figure><h1 id="基于nodejs"><a href="#基于nodejs" class="headerlink" title="基于nodejs"></a>基于nodejs</h1><p>首先你要安装nodejs<br><img src="http://p3alsaatj.bkt.clouddn.com/20180209130231_76jUWj_Screenshot.jpeg" alt=""></p><h2 id="http-server"><a href="#http-server" class="headerlink" title="http-server"></a><a href="https://github.com/indexzero/http-server" target="_blank" rel="noopener">http-server</a></h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 安装</span><br><span class="line">npm <span class="keyword">install</span> <span class="keyword">http</span>-<span class="keyword">server</span> -g</span><br><span class="line"></span><br><span class="line">// 用法</span><br><span class="line"><span class="keyword">http</span>-<span class="keyword">server</span> [<span class="keyword">path</span>] [options]</span><br></pre></td></tr></table></figure><h2 id="serve"><a href="#serve" class="headerlink" title="serve"></a><a href="https://github.com/zeit/serve" target="_blank" rel="noopener">serve</a></h2><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 安装</span></span><br><span class="line">npm install -g serve</span><br><span class="line"></span><br><span class="line"><span class="comment">// 用法</span></span><br><span class="line">serve [options] <span class="params">&lt;path&gt;</span></span><br></pre></td></tr></table></figure><h2 id="webpack-dev-server"><a href="#webpack-dev-server" class="headerlink" title="webpack-dev-server"></a><a href="https://github.com/webpack/webpack-dev-server" target="_blank" rel="noopener">webpack-dev-server</a></h2><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 安装</span></span><br><span class="line">npm install webpack-dev-<span class="keyword">server</span> -g</span><br><span class="line"></span><br><span class="line"><span class="comment">// 用法</span></span><br><span class="line">webpack-dev-<span class="keyword">server</span></span><br></pre></td></tr></table></figure><h2 id="anywhere"><a href="#anywhere" class="headerlink" title="anywhere"></a><a href="https://github.com/JacksonTian/anywhere" target="_blank" rel="noopener">anywhere</a></h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 安装</span></span><br><span class="line">npm install -g anywhere</span><br><span class="line"></span><br><span class="line"><span class="comment">// 用法</span></span><br><span class="line">anywhere</span><br><span class="line">anywhere -<span class="selector-tag">p</span> port</span><br></pre></td></tr></table></figure><h2 id="puer"><a href="#puer" class="headerlink" title="puer"></a><a href="https://github.com/leeluolee/puer" target="_blank" rel="noopener">puer</a></h2><p><img src="http://p3alsaatj.bkt.clouddn.com/20180209130246_GqSjH6_Screenshot.jpeg" alt=""></p><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 安装</span></span><br><span class="line">npm -g install puer</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用</span></span><br><span class="line">puer</span><br><span class="line"></span><br><span class="line">-<span class="ruby"> 提供一个当前或指定路径的静态服务器</span></span><br><span class="line"><span class="ruby">- 所有浏览器的实时刷新：编辑css实时更新(update)页面样式，其它文件则重载(reload)页面</span></span><br><span class="line"><span class="ruby">- 提供简单熟悉的mock请求的配置功能，并且配置也是自动更新。</span></span><br><span class="line"><span class="ruby">- 可用作代理服务器，调试开发既有服务器的页面，可与mock功能配合使用</span></span><br><span class="line"><span class="ruby">- 集成了weinre，并提供二维码地址，方便移动端的调试</span></span><br><span class="line"><span class="ruby">- 可以作为connect中间件使用(前提是后端为nodejs，否则请使用代理模式)</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简易服务器：在命令执行的所在路径启动一个http服务器，然后你可以通过浏览器访问该路径下的所有文件。&lt;/p&gt;
&lt;p&gt;在局域网内传文件，或者自己测试使用都是非常方便的。&lt;/p&gt;
&lt;h1 id=&quot;基于python&quot;&gt;&lt;a href=&quot;#基于python&quot; class=&quot;head
      
    
    </summary>
    
    
      <category term="静态文件服务器" scheme="https://wdd.js.org/tags/%E9%9D%99%E6%80%81%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>top-javascript-tools-in-2017</title>
    <link href="https://wdd.js.org/top-javascript-tools-in-2017.html"/>
    <id>https://wdd.js.org/top-javascript-tools-in-2017.html</id>
    <published>2018-02-09T04:59:38.000Z</published>
    <updated>2018-02-09T05:00:12.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://frontendtools.com/tools/JavaScript-Tools" target="_blank" rel="noopener">原文地址</a><br><a href="https://github.com/wangduanduan/top-tools" target="_blank" rel="noopener">git地址</a></p><h1 id="基础工具"><a href="#基础工具" class="headerlink" title="基础工具"></a>基础工具</h1><ul><li><a href="http://openexchangerates.github.io/accounting.js/" target="_blank" rel="noopener">accounting.js</a></li><li><a href="http://caolan.github.io/async/" target="_blank" rel="noopener">async</a></li><li><a href="https://github.com/mzabriskie/axios" target="_blank" rel="noopener">axios</a></li><li><a href="http://chancejs.com/" target="_blank" rel="noopener">chance</a></li><li><a href="https://date-fns.org/" target="_blank" rel="noopener">date-fns</a></li><li><a href="http://formatjs.io/" target="_blank" rel="noopener">format.js</a></li><li><a href="https://facebook.github.io/immutable-js/" target="_blank" rel="noopener">immutable</a></li><li><a href="http://arasatasaygin.github.io/is.js/" target="_blank" rel="noopener">is.js</a></li><li><a href="https://lodash.com/" target="_blank" rel="noopener">lodash</a></li><li><a href="http://mathjs.org/" target="_blank" rel="noopener">Math.js</a></li><li><a href="http://momentjs.com/" target="_blank" rel="noopener">Moment.js</a></li><li><a href="http://numeraljs.com/" target="_blank" rel="noopener">Numeral.js</a></li><li><a href="http://stringjs.com/" target="_blank" rel="noopener">string.js</a></li><li><a href="http://underscorejs.org/" target="_blank" rel="noopener">underscore.js</a></li><li><a href="https://vocajs.com/" target="_blank" rel="noopener">voca</a></li><li><a href="https://github.com/elving/wait" target="_blank" rel="noopener">wait</a></li><li><a href="http://xregexp.com/" target="_blank" rel="noopener">xregexp.com</a></li></ul><h1 id="编译-类型检查"><a href="#编译-类型检查" class="headerlink" title="编译 / 类型检查"></a>编译 / 类型检查</h1><ul><li><a href="https://babeljs.io/" target="_blank" rel="noopener">Babel</a></li><li><a href="https://www.typescriptlang.org/" target="_blank" rel="noopener">TypeScript</a></li><li><a href="https://flowtype.org/" target="_blank" rel="noopener">Flow</a></li></ul><h1 id="代码分析引擎"><a href="#代码分析引擎" class="headerlink" title="代码分析引擎"></a>代码分析引擎</h1><ul><li><a href="https://ternjs.net/" target="_blank" rel="noopener">Tern</a></li></ul><h1 id="JavaScript兼容性检查器"><a href="#JavaScript兼容性检查器" class="headerlink" title="JavaScript兼容性检查器"></a>JavaScript兼容性检查器</h1><ul><li><a href="http://jscc.info/" target="_blank" rel="noopener">jscc.info/</a></li></ul><h1 id="Linting-Hinting-amp-Style-Linter"><a href="#Linting-Hinting-amp-Style-Linter" class="headerlink" title="Linting/ Hinting &amp; Style Linter"></a>Linting/ Hinting &amp; Style Linter</h1><ul><li><a href="http://eslint.org/" target="_blank" rel="noopener">eslint</a></li></ul><h1 id="单元测试"><a href="#单元测试" class="headerlink" title="单元测试"></a>单元测试</h1><ul><li><a href="https://github.com/avajs/ava" target="_blank" rel="noopener">AVA</a></li><li><a href="http://jasmine.github.io/" target="_blank" rel="noopener">Jasmine</a></li><li><a href="http://mochajs.org/" target="_blank" rel="noopener">Mocha</a></li><li><a href="https://github.com/substack/tape" target="_blank" rel="noopener">Tape</a></li></ul><h1 id="单元测试断言库"><a href="#单元测试断言库" class="headerlink" title="单元测试断言库"></a>单元测试断言库</h1><ul><li><a href="http://chaijs.com/" target="_blank" rel="noopener">Chai</a></li><li><a href="https://github.com/Automattic/expect.js" target="_blank" rel="noopener">expect.js</a></li><li><a href="http://shouldjs.github.io/" target="_blank" rel="noopener">should.js</a></li></ul><h1 id="单元测试数据模拟"><a href="#单元测试数据模拟" class="headerlink" title="单元测试数据模拟"></a>单元测试数据模拟</h1><ul><li><a href="http://sinonjs.org/" target="_blank" rel="noopener">sinon.js</a></li><li><a href="http://devlucky.github.io/kakapo-js" target="_blank" rel="noopener">Kakapo.js</a></li><li><a href="http://mockjs.com/" target="_blank" rel="noopener">mockjs</a></li></ul><h1 id="E2E测试"><a href="#E2E测试" class="headerlink" title="E2E测试"></a>E2E测试</h1><ul><li><a href="https://github.com/GoogleChrome/puppeteer" target="_blank" rel="noopener">puppeteer</a></li></ul><h1 id="代码格式化-整洁"><a href="#代码格式化-整洁" class="headerlink" title="代码格式化 / 整洁"></a>代码格式化 / 整洁</h1><ul><li><a href="https://github.com/millermedeiros/esformatter#esformatterformatstr-optsstring" target="_blank" rel="noopener">esformatter</a></li><li><a href="http://jsbeautifier.org/" target="_blank" rel="noopener">js-beautify</a></li><li><a href="http://rdio.github.io/jsfmt/" target="_blank" rel="noopener">jsfmt</a></li><li><a href="https://github.com/jlongster/prettier" target="_blank" rel="noopener">prettier</a></li></ul><h1 id="性能测试"><a href="#性能测试" class="headerlink" title="性能测试"></a>性能测试</h1><ul><li><a href="http://benchmarkjs.com/" target="_blank" rel="noopener">benchmark.js</a></li><li><a href="https://jsperf.co/" target="_blank" rel="noopener">jsperf.co</a></li></ul><h1 id="可视化，静态分析，复杂性，覆盖工具"><a href="#可视化，静态分析，复杂性，覆盖工具" class="headerlink" title="可视化，静态分析，复杂性，覆盖工具"></a>可视化，静态分析，复杂性，覆盖工具</h1><ul><li><a href="https://coveralls.io/" target="_blank" rel="noopener">Coveralls</a></li><li><a href="http://esprima.org/" target="_blank" rel="noopener">Esprima</a></li><li><a href="https://github.com/gotwarlost/istanbul" target="_blank" rel="noopener">istanbul</a></li></ul><h1 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h1><ul><li><a href="https://github.com/mishoo/UglifyJS2" target="_blank" rel="noopener">UglifyJS 2</a></li><li><a href="https://github.com/nolanlawson/optimize-js" target="_blank" rel="noopener">optimize-js</a></li></ul><h1 id="混淆"><a href="#混淆" class="headerlink" title="混淆"></a>混淆</h1><ul><li><a href="http://www.javascriptobfuscator.com/" target="_blank" rel="noopener">Javascript Obfuscator</a></li><li><a href="https://jscrambler.com/" target="_blank" rel="noopener">JScrambler</a></li></ul><h1 id="可共享-可运行的代码编辑器"><a href="#可共享-可运行的代码编辑器" class="headerlink" title="可共享/可运行的代码编辑器"></a>可共享/可运行的代码编辑器</h1><ul><li><a href="http://www.es6fiddle.net/" target="_blank" rel="noopener">es6fiddle.net</a></li><li><a href="http://jsbin.com/" target="_blank" rel="noopener">jsbin.com</a></li><li><a href="http://jsfiddle.net/" target="_blank" rel="noopener">jsfiddle.net</a></li></ul><h1 id="在线正则表达式编辑器-可视化工具"><a href="#在线正则表达式编辑器-可视化工具" class="headerlink" title="在线正则表达式编辑器/可视化工具"></a>在线正则表达式编辑器/可视化工具</h1><ul><li><a href="https://www.debuggex.com" target="_blank" rel="noopener">debuggex</a></li><li><a href="https://regex101.com/" target="_blank" rel="noopener">regex101</a></li><li><a href="http://regexper.com/" target="_blank" rel="noopener">regexper</a></li><li><a href="http://regexr.com/" target="_blank" rel="noopener">RegExr</a></li></ul><h1 id="创作公约工具"><a href="#创作公约工具" class="headerlink" title="创作公约工具"></a>创作公约工具</h1><ul><li><a href="https://www.npmjs.com/package/eslint-config-airbnb" target="_blank" rel="noopener">Airbnb’s ESLint config, following our styleguide</a></li><li><a href="https://github.com/feross/eslint-config-standard" target="_blank" rel="noopener">Standard - ESLint Shareable Config</a></li></ul><h1 id="json可视化"><a href="#json可视化" class="headerlink" title="json可视化"></a>json可视化</h1><ul><li><a href="https://www.bejson.com/jsonviewernew/" target="_blank" rel="noopener">jsonviewernew</a></li></ul><h1 id="代码可视化"><a href="#代码可视化" class="headerlink" title="代码可视化"></a>代码可视化</h1><ul><li><a href="https://github.com/Jianru-Lin/lambda-view" target="_blank" rel="noopener">lambda-view</a></li></ul><h1 id="静态文件服务器"><a href="#静态文件服务器" class="headerlink" title="静态文件服务器"></a>静态文件服务器</h1><ul><li><a href="https://github.com/indexzero/http-server" target="_blank" rel="noopener">http-server</a></li><li><a href="https://github.com/zeit/serve" target="_blank" rel="noopener">serve</a></li><li><a href="https://github.com/JacksonTian/anywhere" target="_blank" rel="noopener">anywhere</a></li><li><a href="https://github.com/leeluolee/puer" target="_blank" rel="noopener">puer</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;http://frontendtools.com/tools/JavaScript-Tools&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;原文地址&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/wangduan
      
    
    </summary>
    
    
      <category term="工具" scheme="https://wdd.js.org/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>webrtc-tutorial-simple-video-chat</title>
    <link href="https://wdd.js.org/webrtc-tutorial-simple-video-chat.html"/>
    <id>https://wdd.js.org/webrtc-tutorial-simple-video-chat.html</id>
    <published>2018-02-09T04:56:12.000Z</published>
    <updated>2018-02-09T04:58:11.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本例子是参考<a href="https://www.scaledrone.com/blog/posts/webrtc-tutorial-simple-video-chat" target="_blank" rel="noopener">webrtc-tutorial-simple-video-chat</a>做的。<br>这个教程应该主要是去宣传ScaleDrone的sdk, 他们的服务是收费的，但是免费的也可以用，就是有些次数限制。</p></blockquote><p><a href="https://github.com/wangduanduan/webrtc" target="_blank" rel="noopener">本栗子的地址</a><br><a href="https://wangduanduan.github.io/webrtc/" target="_blank" rel="noopener">本栗子的pages地址</a></p><h1 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h1><ul><li>使用最新版谷歌浏览器（62版）</li><li>视频聊天中 一个是windows, 一个是mac</li><li>stun服务器使用谷歌的，trun使用<a href="https://www.scaledrone.com/" target="_blank" rel="noopener">ScaleDrone</a>的sdk，这样我就不用管服务端了。</li></ul><h1 id="先上效果图"><a href="#先上效果图" class="headerlink" title="先上效果图"></a>先上效果图</h1><p><img src="http://p3alsaatj.bkt.clouddn.com/20180209125722_GO0Ee0_Screenshot.jpeg" alt=""></p><h1 id="再上在线例子点击此处"><a href="#再上在线例子点击此处" class="headerlink" title="再上在线例子点击此处"></a>再上在线例子<a href="https://wangduanduan.github.io/webrtc/demos/chat-with-your-friend.html" target="_blank" rel="noopener">点击此处</a></h1><h1 id="源码分析"><a href="#源码分析" class="headerlink" title="源码分析"></a>源码分析</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 产生随机数</span></span><br><span class="line"><span class="keyword">if</span> (!location.hash) &#123;</span><br><span class="line">    location.hash = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * <span class="number">0xFFFFFF</span>).toString(<span class="number">16</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 获取房间号</span></span><br><span class="line"><span class="keyword">var</span> roomHash = location.hash.substring(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 放置你自己的频道id, 这是我注册了ScaleDrone 官网后，创建的channel</span></span><br><span class="line"><span class="comment">// 你也可以自己创建</span></span><br><span class="line"><span class="keyword">var</span> drone = <span class="keyword">new</span> ScaleDrone(<span class="string">'87fYv4ncOoa0Cjne'</span>);</span><br><span class="line"><span class="comment">// 房间名必须以 'observable-'开头</span></span><br><span class="line"><span class="keyword">var</span> roomName = <span class="string">'observable-'</span> + roomHash;</span><br><span class="line"><span class="keyword">var</span> configuration = &#123;</span><br><span class="line">    iceServers: [&#123;</span><br><span class="line">        urls: <span class="string">'stun:stun.l.google.com:19302'</span> <span class="comment">// 使用谷歌的stun服务</span></span><br><span class="line">    &#125;]</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> room;</span><br><span class="line"><span class="keyword">var</span> pc;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">onSuccess</span>(<span class="params"></span>) </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">onError</span>(<span class="params">error</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.error(error);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">drone.on(<span class="string">'open'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">error</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (error) &#123; <span class="keyword">return</span> <span class="built_in">console</span>.error(error);&#125;</span><br><span class="line"></span><br><span class="line">    room = drone.subscribe(roomName);</span><br><span class="line">    room.on(<span class="string">'open'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">error</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (error) &#123;onError(error);&#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 已经链接到房间后，就会收到一个 members 数组，代表房间里的成员</span></span><br><span class="line">    <span class="comment">// 这时候信令服务已经就绪</span></span><br><span class="line">    room.on(<span class="string">'members'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">members</span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'MEMBERS'</span>, members);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 如果你是第二个链接到房间的人，就会创建offer</span></span><br><span class="line">        <span class="keyword">var</span> isOfferer = members.length === <span class="number">2</span>;</span><br><span class="line">        startWebRTC(isOfferer);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 通过Scaledrone发送信令消息</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sendMessage</span>(<span class="params">message</span>) </span>&#123;</span><br><span class="line">    drone.publish(&#123;</span><br><span class="line">        room: roomName,</span><br><span class="line">        message</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">startWebRTC</span>(<span class="params">isOfferer</span>) </span>&#123;</span><br><span class="line">    pc = <span class="keyword">new</span> RTCPeerConnection(configuration);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 当本地ICE Agent需要通过信号服务器发送信息到其他端时</span></span><br><span class="line">    <span class="comment">// 会触发icecandidate事件回调</span></span><br><span class="line">    pc.onicecandidate = <span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (event.candidate) &#123;</span><br><span class="line">            sendMessage(&#123; <span class="string">'candidate'</span>: event.candidate &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果用户是第二个进入的人，就在negotiationneeded 事件后创建sdp</span></span><br><span class="line">    <span class="keyword">if</span> (isOfferer) &#123;</span><br><span class="line">        <span class="comment">// onnegotiationneeded 在要求sesssion协商时发生</span></span><br><span class="line">        pc.onnegotiationneeded = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="comment">// 创建本地sdp描述 SDP (Session Description Protocol) session描述协议</span></span><br><span class="line">            pc.createOffer().then(localDescCreated).catch(onError);</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 当远程数据流到达时，将数据流装载到video中</span></span><br><span class="line">    pc.onaddstream = <span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line">        remoteVideo.srcObject = event.stream;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取本地媒体流</span></span><br><span class="line">    navigator.mediaDevices.getUserMedia(&#123;</span><br><span class="line">        audio: <span class="literal">true</span>,</span><br><span class="line">        video: <span class="literal">true</span>,</span><br><span class="line">    &#125;).then( <span class="function"><span class="keyword">function</span>(<span class="params">stream</span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 将本地捕获的视频流装载到本地video中</span></span><br><span class="line">        localVideo.srcObject = stream;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 将本地流加入RTCPeerConnection 实例中 发送到其他端</span></span><br><span class="line">        pc.addStream(stream);</span><br><span class="line">    &#125;, onError);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 从Scaledrone监听信令数据</span></span><br><span class="line">    room.on(<span class="string">'data'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">message, client</span>)</span>&#123;</span><br><span class="line">        <span class="comment">// 消息是我自己发送的，则不处理</span></span><br><span class="line">        <span class="keyword">if</span> (client.id === drone.clientId) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (message.sdp) &#123;</span><br><span class="line">            <span class="comment">// 设置远程sdp, 在offer 或者 answer后</span></span><br><span class="line">            pc.setRemoteDescription(<span class="keyword">new</span> RTCSessionDescription(message.sdp), <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                <span class="comment">// 当收到offer 后就接听</span></span><br><span class="line">                <span class="keyword">if</span> (pc.remoteDescription.type === <span class="string">'offer'</span>) &#123;</span><br><span class="line">                    pc.createAnswer().then(localDescCreated).catch(onError);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, onError);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (message.candidate) &#123;</span><br><span class="line">            <span class="comment">// 增加新的 ICE canidatet 到本地的链接中</span></span><br><span class="line">            pc.addIceCandidate(</span><br><span class="line">                <span class="keyword">new</span> RTCIceCandidate(message.candidate), onSuccess, onError</span><br><span class="line">            );</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">localDescCreated</span>(<span class="params">desc</span>) </span>&#123;</span><br><span class="line">    pc.setLocalDescription(desc, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        sendMessage(&#123; <span class="string">'sdp'</span>: pc.localDescription &#125;);</span><br><span class="line">    &#125;,onError);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="WebRTC简介"><a href="#WebRTC简介" class="headerlink" title="WebRTC简介"></a>WebRTC简介</h1><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>WebRTC 是一个开源项目，用于Web浏览器之间进行实时音频视频通讯，数据传递。<br>WebRTC有几个JavaScript APIS。 点击链接去查看demo。</p><ul><li><a href="">getUserMedia(): 捕获音频视频</a></li><li><a href="">MediaRecorder: 记录音频视频</a></li><li><a href="">RTCPeerConnection: 在用户之间传递音频流和视频流</a></li><li><a href="">RTCDataChannel: 在用户之间传递文件流</a></li></ul><h2 id="在哪里使用WebRTC"><a href="#在哪里使用WebRTC" class="headerlink" title="在哪里使用WebRTC?"></a>在哪里使用WebRTC?</h2><ul><li>Chrome</li><li>FireFox</li><li>Opera</li><li>Android</li><li>iOS</li></ul><h2 id="什么是信令"><a href="#什么是信令" class="headerlink" title="什么是信令"></a>什么是信令</h2><p>WebRTC使用<code>RTCPeerConnection</code>在浏览器之间传递流数据, 但是也需要一种机制去协调收发控制信息，这就是信令。信令的方法和协议并不是在WebRTC中明文规定的。 在codelad中用的是Node，也有许多其他的方法。</p><h2 id="什么是STUN和TURN和ICE"><a href="#什么是STUN和TURN和ICE" class="headerlink" title="什么是STUN和TURN和ICE?"></a>什么是STUN和TURN和ICE?</h2><blockquote><p>STUN（Session Traversal Utilities for NAT，NAT会话穿越应用程序）是一种网络协议，它允许位于NAT（或多重NAT）后的客户端找出自己的公网地址，查出自己位于哪种类型的NAT之后以及NAT为某一个本地端口所绑定的Internet端端口。这些信息被用来在两个同时处于NAT路由器之后的主机之间创建UDP通信。该协议由RFC 5389定义。 <a href="https://zh.wikipedia.org/wiki/STUN" target="_blank" rel="noopener">wikipedia STUN</a></p><p>TURN（全名Traversal Using Relay NAT, NAT中继穿透），是一种资料传输协议（data-transfer protocol）。允许在TCP或UDP的连线上跨越NAT或防火墙。<br>TURN是一个client-server协议。TURN的NAT穿透方法与STUN类似，都是通过取得应用层中的公有地址达到NAT穿透。但实现TURN client的终端必须在通讯开始前与TURN server进行交互，并要求TURN server产生”relay port”，也就是relayed-transport-address。这时TURN server会建立peer，即远端端点（remote endpoints），开始进行中继（relay）的动作，TURN client利用relay port将资料传送至peer，再由peer转传到另一方的TURN client。<a href="https://zh.wikipedia.org/wiki/TURN" target="_blank" rel="noopener">wikipedia TURN</a></p><p>ICE （Interactive Connectivity Establishment，互动式连接建立 ），一种综合性的NAT穿越的技术。<br>互动式连接建立是由IETF的MMUSIC工作组开发出来的一种framework，可整合各种NAT穿透技术，如STUN、TURN（Traversal Using Relay NAT，中继NAT实现的穿透）、RSIP（Realm Specific IP，特定域IP）等。该framework可以让SIP的客户端利用各种NAT穿透方式打穿远程的防火墙。[wikipedia ICE]</p></blockquote><p><img src="http://p3alsaatj.bkt.clouddn.com/20180209125753_F5e9Xf_Screenshot.jpeg" alt=""></p><p><img src="http://p3alsaatj.bkt.clouddn.com/20180209125803_bcjg2P_Screenshot.jpeg" alt=""></p><p>WebRTC被设计用于点对点之间工作，因此用户可以通过最直接的途径连接。然而，WebRTC的构建是为了应付现实中的网络: <code>客户端应用程序需要穿越NAT网关和防火墙，并且对等网络需要在直接连接失败的情况下进行回调。</code> 作为这个过程的一部分，WebRTC api使用STUN服务器来获取计算机的IP地址，并将服务器作为中继服务器运行，以防止对等通信失败。(现实世界中的WebRTC更详细地解释了这一点。)</p><h2 id="WebRTC是否安全"><a href="#WebRTC是否安全" class="headerlink" title="WebRTC是否安全?"></a>WebRTC是否安全?</h2><p>WebRTC组件是强制要求加密的，并且它的JavaScript APIS只能在安全的域下使用(HTTPS 或者 localhost)。信令机制并没有被WebRTC标准定义，所以是否使用安全的协议就取决于你自己了。</p><h1 id="WebRTC-参考资料"><a href="#WebRTC-参考资料" class="headerlink" title="WebRTC 参考资料"></a>WebRTC 参考资料</h1><ul><li><a href="https://webrtc.org/" target="_blank" rel="noopener">官网教程</a></li><li><a href="https://www.scaledrone.com/blog/posts/webrtc-tutorial-simple-video-chat" target="_blank" rel="noopener">WebRTC 简单的视频聊天</a> <a href="https://github.com/ScaleDrone/webrtc" target="_blank" rel="noopener">repo</a></li><li><a href="https://www.tutorialspoint.com/webrtc/index.html" target="_blank" rel="noopener">WebRTC 教程</a></li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/WebRTC_API" target="_blank" rel="noopener">MDN WebRTC API</a></li><li><a href="https://codelabs.developers.google.com/codelabs/webrtc-web/#0" target="_blank" rel="noopener">谷歌codelab WebRT教程</a></li><li><a href="https://github.com/webrtc/samples" target="_blank" rel="noopener">github上WebRTC各种例子</a></li><li><a href="https://segmentfault.com/bookmark/1230000011819985" target="_blank" rel="noopener">segemntfault上关于WebRTC的教程</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;本例子是参考&lt;a href=&quot;https://www.scaledrone.com/blog/posts/webrtc-tutorial-simple-video-chat&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;webrt
      
    
    </summary>
    
    
      <category term="webrtc" scheme="https://wdd.js.org/tags/webrtc/"/>
    
  </entry>
  
  <entry>
    <title>如何写好技术文档?</title>
    <link href="https://wdd.js.org/how-to-write-a-technical-document.html"/>
    <id>https://wdd.js.org/how-to-write-a-technical-document.html</id>
    <published>2018-02-09T04:52:57.000Z</published>
    <updated>2018-02-09T04:54:55.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文来自于公司内部的一个分享。<br>在文档方面，对内的一些接口文档主要是用swagger来写的。虽然可以在线测试，比较方便。但是也存在着一些更新不及时，swgger文档无法导出成文件的问题。<br>在对外提供的文档方面：我主要负责做一个浏览器端的一个js sdk。文档还算可以<a href="https://github.com/wangduanduan/wellclient" target="_blank" rel="noopener">github地址</a>，所以想把一些写文档的心得分享给大家。</p></blockquote><h1 id="衡量好文档的唯一标准是什么？"><a href="#衡量好文档的唯一标准是什么？" class="headerlink" title="衡量好文档的唯一标准是什么？"></a>衡量好文档的唯一标准是什么？</h1><p><img src="http://p3alsaatj.bkt.clouddn.com/20180209125351_QEkv8l_Screenshot.jpeg" alt=""></p><p>Martin(Bob大叔)曾在《代码整洁之道》一书打趣地说：当你的代码在做 Code Review 时，审查者要是愤怒地吼道：</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">“What the fuck <span class="keyword">is</span> <span class="keyword">this</span> shit?”</span><br><span class="line">“Dude, What the fuck！”</span><br></pre></td></tr></table></figure><p>等言辞激烈的词语时，那说明你写的代码是 Bad Code，如果审查者只是漫不经心的吐出几个</p><p><code>“What the fuck?”，</code></p><p><img src="http://p3alsaatj.bkt.clouddn.com/20180209125409_sQvHfi_Screenshot.jpeg" alt=""></p><p>那说明你写的是 Good Code。衡量代码质量的唯一标准就<code>是每分钟骂出“WTF” 的频率</code>。</p><p>衡量文档的标准也是如此。</p><h1 id="好文档的特点"><a href="#好文档的特点" class="headerlink" title="好文档的特点"></a>好文档的特点</h1><ul><li><code>简洁</code>：一句话可以说完的事情，就不要分两句话来说。并不是文档越厚越好，太厚的文档大多没人看。</li><li><code>准确</code>: 字段类型，默认值，备注，是否必填等属性说明。</li><li><code>逻辑性</code>: 文档如何划分？ 利于查看。</li><li><code>demo胜千言</code>: 好的demo胜过各种字段说明，可以复制下来直接使用。</li><li><code>读者心</code>: 从读者的角度考虑, 方法尽量简洁。可以传递一个参数搞定的事情，绝对不要让用户去传两个参数。</li><li><code>及时更新</code>: 不更新的文档比bug更严重。</li><li><code>向后兼容</code>: 不要随意废弃已有的接口或者某个字段，除非你考虑到这样做的后果。</li><li><code>建立文档词汇表</code>：每个概念只有一个名字，不要随意起名字，名不正则言不顺。</li><li><code>格式统一</code>：例如时间格式。我曾见过2017-09-12 09:32:23, 或2017.09.12 09:32:23或2017.09.12 09:32:23。变量名user_name, userName。</li><li><code>使用专业词语</code>：不要过于口语化</li></ul><h1 id="总结-写出好文档要有以下四点"><a href="#总结-写出好文档要有以下四点" class="headerlink" title="总结: 写出好文档要有以下四点"></a>总结: 写出好文档要有以下四点</h1><ol><li><code>逻辑性</code>：便于查找</li><li><code>专业性</code>: 值得信赖，质量保证</li><li><code>责任心</code>：及时更新，准确性，向后兼容</li><li><code>读者心</code>：你了解的东西，别人可能并不清楚。从读者的角度去考虑，他们需要什么，而不是一味去强调你能提供什么。</li></ol><h1 id="写文档的工具"><a href="#写文档的工具" class="headerlink" title="写文档的工具"></a>写文档的工具</h1><ul><li>markdown: 方便快捷，可以导出各种格式的文件</li><li>swagger: 功能强大，需要部署，不方便传递文件</li></ul><h1 id="markdown-工具推荐"><a href="#markdown-工具推荐" class="headerlink" title="markdown 工具推荐"></a>markdown 工具推荐</h1><ul><li><a href="https://leanote.com/" target="_blank" rel="noopener">蚂蚁笔记</a> 这是我正使用的。<ul><li>全平台（mac windows ios）有客户端，和浏览器端</li><li>笔记可以直接公布为博客</li><li>支持独立域名</li><li>标签很好用</li><li>支持思维导图</li><li>支持历史记录</li></ul></li><li><a href="https://www.zybuluo.com/mdeditor#411452" target="_blank" rel="noopener">cmd-markdown</a></li><li>有道云笔记</li></ul><h1 id="文档之外"><a href="#文档之外" class="headerlink" title="文档之外"></a>文档之外</h1><p>公司有个同事，我曾问他使用什么搜索一些技术文档，他说用百度。作为一个翻墙老司机，我惊诧的问他：你为什么不用谷歌去搜索。他说他不会翻墙。我只能呵呵一笑。</p><p>自从有一次搜索：<code>graph for x^8 + y^8</code>，我就决定不再使用百度了。你可以看一下两者的返回结果有什么不同。</p><p><strong>总之：<code>有些鸟儿是关不住的 他们的羽毛太鲜亮了</code>。</strong></p><p><img src="http://p3alsaatj.bkt.clouddn.com/20180209125425_frCDAB_Screenshot.jpeg" alt=""><br><img src="http://p3alsaatj.bkt.clouddn.com/20180209125433_KKkTLQ_Screenshot.jpeg" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;本文来自于公司内部的一个分享。&lt;br&gt;在文档方面，对内的一些接口文档主要是用swagger来写的。虽然可以在线测试，比较方便。但是也存在着一些更新不及时，swgger文档无法导出成文件的问题。&lt;br&gt;在对外提供的文档方面：我主要负责做一个浏览器端的
      
    
    </summary>
    
    
      <category term="文档" scheme="https://wdd.js.org/tags/%E6%96%87%E6%A1%A3/"/>
    
  </entry>
  
  <entry>
    <title>Vue + Vue-router + Element-ui 搭建一个非常简单的dashboard demo</title>
    <link href="https://wdd.js.org/vue-vue-router-elementui-stupid-simple-dashboard.html"/>
    <id>https://wdd.js.org/vue-vue-router-elementui-stupid-simple-dashboard.html</id>
    <published>2018-02-09T04:02:05.000Z</published>
    <updated>2018-02-09T04:07:38.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>之前我很少做过组件化的相关demo, 虽然学习了webpack, 但是还是很少使用。工作中用到最多的是jQuery, 还有Vue。但是我只是把Vue看成一个小工具来用，并没有使用组件化或者单文件组件的东西。<br>闲暇时间看看《行尸走肉 第六季》，瑞克一伙人在亚历山大社区中感悟：<code>把自己围在围墙中，虽然舒适，但是并不安全</code>。保持在舒适区只有悲惨的命运。就像前端，外面的世界蓬勃发展，各种技术霸占山头。其实并不需要畏惧新技术，就像WEKING DEAD是很可怕，但是只要你拿起斧头，砍中他们的头颅，一样可以掌控他们。</p><p>做完这个demo后，我体会到，Vue组件化，webpack, Vue-router等，并不是很难学习，<code>你需要的只是拿起斧头的勇气</code></p><p>在做demo的过程中，我遇到一个问题，就是vue-router懒加载一直实现不了，纠结了半天。<code>后来回到原点，去vue-route官网看文档，发现是因为syntax-dynamic-import插件没有安装</code>。</p><p>所以说：<code>你以为的bug, 实际上是你没看透文档</code></p></blockquote><p><code>初次学习这个教程，你不需要有任何担忧某些东西不会，你也不需要写任何代码。因为基本上所有代码都是从element官网上拷贝的，你所做的只是把他们组装在一起罢了。</code></p><p><a href="https://wangduanduan.github.io/vue-el-dashboard/#/" target="_blank" rel="noopener">在线预览</a><br>仓库地址：<a href="https://github.com/wangduanduan/vue-el-dashboard" target="_blank" rel="noopener">https://github.com/wangduanduan/vue-el-dashboard</a></p><p>效果图：<br><img src="http://p3alsaatj.bkt.clouddn.com/20180209120336_WDGC7Q_Screenshot.jpeg" alt=""><br>使用到的技术：</p><ul><li>Vue</li><li>Vue-router</li><li>Element-ui</li><li>webpack</li><li>Normalize.css</li><li>vue-awesome</li><li>babel</li></ul><h1 id="vue-cli-安装模板"><a href="#vue-cli-安装模板" class="headerlink" title="vue-cli 安装模板"></a>vue-cli 安装模板</h1><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">➜</span>  <span class="string">vue-el-dashboard</span> <span class="attr">git:(master)</span> <span class="string">vue</span> <span class="string">init</span> <span class="string">webpack</span></span><br><span class="line"></span><br><span class="line"><span class="string">?</span> <span class="string">Generate</span> <span class="string">project</span> <span class="string">in</span> <span class="string">current</span> <span class="string">directory?</span> <span class="literal">Yes</span></span><br><span class="line"><span class="string">?</span> <span class="string">Project</span> <span class="string">name</span> <span class="string">vue-el-dashboard</span></span><br><span class="line"><span class="string">?</span> <span class="string">Project</span> <span class="string">description</span> <span class="string">A</span> <span class="string">Vue.js</span> <span class="string">project</span></span><br><span class="line"><span class="string">?</span> <span class="string">Author</span> <span class="string">wangdd</span> <span class="string">&lt;wangdd@welljoint.com&gt;</span></span><br><span class="line"><span class="string">?</span> <span class="string">Vue</span> <span class="string">build</span> <span class="string">standalone</span></span><br><span class="line"><span class="string">?</span> <span class="string">Install</span> <span class="string">vue-router?</span> <span class="literal">Yes</span></span><br><span class="line"><span class="string">?</span> <span class="string">Use</span> <span class="string">ESLint</span> <span class="string">to</span> <span class="string">lint</span> <span class="string">your</span> <span class="string">code?</span> <span class="literal">Yes</span></span><br><span class="line"><span class="string">?</span> <span class="string">Pick</span> <span class="string">an</span> <span class="string">ESLint</span> <span class="string">preset</span> <span class="string">Standard</span></span><br><span class="line"><span class="string">?</span> <span class="string">Setup</span> <span class="string">unit</span> <span class="string">tests</span> <span class="literal">No</span></span><br><span class="line"><span class="string">?</span> <span class="string">Setup</span> <span class="string">e2e</span> <span class="string">tests</span> <span class="string">with</span> <span class="string">Nightwatch?</span> <span class="literal">No</span></span><br><span class="line"></span><br><span class="line">   <span class="string">vue-cli</span> <span class="string">·</span> <span class="string">Generated</span> <span class="string">"vue-el-dashboard"</span><span class="string">.</span></span><br><span class="line"></span><br><span class="line">   <span class="string">To</span> <span class="string">get</span> <span class="attr">started:</span></span><br><span class="line"></span><br><span class="line">     <span class="string">npm</span> <span class="string">install</span></span><br><span class="line">     <span class="string">npm</span> <span class="string">run</span> <span class="string">dev</span></span><br><span class="line"></span><br><span class="line">   <span class="string">Documentation</span> <span class="string">can</span> <span class="string">be</span> <span class="string">found</span> <span class="string">at</span> <span class="attr">https://vuejs-templates.github.io/webpack</span></span><br></pre></td></tr></table></figure><h1 id="安装依赖并运行"><a href="#安装依赖并运行" class="headerlink" title="安装依赖并运行"></a>安装依赖并运行</h1><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">➜  vue-el-dashboard git:(master) ✗ cnpm i</span><br><span class="line">✔ Installed <span class="number">44</span> packages</span><br><span class="line">✔ Linked <span class="number">680</span> latest versions</span><br><span class="line">➜ npm <span class="keyword">run</span><span class="bash"> dev</span></span><br></pre></td></tr></table></figure><p><code>浏览器打开如下页面</code>:</p><p><img src="http://p3alsaatj.bkt.clouddn.com/20180209120349_hZ5aL8_Screenshot.jpeg" alt=""></p><h1 id="安装初始化页面布局"><a href="#安装初始化页面布局" class="headerlink" title="安装初始化页面布局"></a>安装初始化页面布局</h1><p>安装并使用Element UI</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm <span class="selector-tag">i</span> element-ui -S</span><br></pre></td></tr></table></figure><p>修改 /src/main.js 为：<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> ElementUI <span class="keyword">from</span> <span class="string">'element-ui'</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">'element-ui/lib/theme-chalk/index.css'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">'./App'</span></span><br><span class="line"></span><br><span class="line">Vue.config.productionTip = <span class="keyword">false</span></span><br><span class="line"></span><br><span class="line">Vue.use(ElementUI)</span><br><span class="line"></span><br><span class="line"><span class="comment">/* eslint-disable no-new */</span></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">'#app'</span>,</span><br><span class="line">  template: <span class="string">'&lt;App/&gt;'</span>,</span><br><span class="line">  components: &#123; App &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><p>我需要的布局是这种：<br><img src="http://p3alsaatj.bkt.clouddn.com/20180209120401_Bz1hp8_Screenshot.jpeg" alt=""></p><p>在 <a href="http://element-cn.eleme.io/#/zh-CN/component/container" target="_blank" rel="noopener">Element</a> 上复制对应的代码,<br>并粘贴到 /src/App.vue文件中：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-container</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-header</span>&gt;</span>Header<span class="tag">&lt;/<span class="name">el-header</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-container</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-aside</span> <span class="attr">width</span>=<span class="string">"200px"</span>&gt;</span>Aside<span class="tag">&lt;/<span class="name">el-aside</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-main</span>&gt;</span>Main<span class="tag">&lt;/<span class="name">el-main</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-container</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-container</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="actionscript">  name: <span class="string">'app'</span></span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>不出意外的话，你可以在浏览器上看到如下布局：<br><img src="http://p3alsaatj.bkt.clouddn.com/20180209120415_IXpxss_Screenshot.jpeg" alt=""></p><p><code>现在，布局就这么成了。</code></p><h1 id="安装侧边菜单栏"><a href="#安装侧边菜单栏" class="headerlink" title="安装侧边菜单栏"></a>安装侧边菜单栏</h1><p>我需要侧边栏是下图右边的自定义颜色的那种菜单<br><img src="http://p3alsaatj.bkt.clouddn.com/20180209120427_5XI3wx_Screenshot.jpeg" alt=""></p><p>在components文件夹下新建NavMenu.vue<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-row</span> <span class="attr">class</span>=<span class="string">"tac"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">"12"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h5</span>&gt;</span>默认颜色<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-menu</span> <span class="attr">default-active</span>=<span class="string">"2"</span> <span class="attr">class</span>=<span class="string">"el-menu-vertical-demo"</span> @<span class="attr">open</span>=<span class="string">"handleOpen"</span> @<span class="attr">close</span>=<span class="string">"handleClose"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-submenu</span> <span class="attr">index</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">template</span> <span class="attr">slot</span>=<span class="string">"title"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"el-icon-location"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>导航一<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-menu-item-group</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">template</span> <span class="attr">slot</span>=<span class="string">"title"</span>&gt;</span>分组一<span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">"1-1"</span>&gt;</span>选项1<span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">"1-2"</span>&gt;</span>选项2<span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">el-menu-item-group</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-menu-item-group</span> <span class="attr">title</span>=<span class="string">"分组2"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">"1-3"</span>&gt;</span>选项3<span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">el-menu-item-group</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-submenu</span> <span class="attr">index</span>=<span class="string">"1-4"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">template</span> <span class="attr">slot</span>=<span class="string">"title"</span>&gt;</span>选项4<span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">"1-4-1"</span>&gt;</span>选项1<span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">el-submenu</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-submenu</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">"2"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"el-icon-menu"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">span</span> <span class="attr">slot</span>=<span class="string">"title"</span>&gt;</span>导航二<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">"3"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"el-icon-setting"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">span</span> <span class="attr">slot</span>=<span class="string">"title"</span>&gt;</span>导航三<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-menu</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">"12"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h5</span>&gt;</span>自定义颜色<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-menu</span> <span class="attr">default-active</span>=<span class="string">"2"</span> <span class="attr">class</span>=<span class="string">"el-menu-vertical-demo"</span> @<span class="attr">open</span>=<span class="string">"handleOpen"</span> @<span class="attr">close</span>=<span class="string">"handleClose"</span> <span class="attr">background-color</span>=<span class="string">"#545c64"</span> <span class="attr">text-color</span>=<span class="string">"#fff"</span> <span class="attr">active-text-color</span>=<span class="string">"#ffd04b"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-submenu</span> <span class="attr">index</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">template</span> <span class="attr">slot</span>=<span class="string">"title"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"el-icon-location"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>导航一<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-menu-item-group</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">template</span> <span class="attr">slot</span>=<span class="string">"title"</span>&gt;</span>分组一<span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">"1-1"</span>&gt;</span>选项1<span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">"1-2"</span>&gt;</span>选项2<span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">el-menu-item-group</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-menu-item-group</span> <span class="attr">title</span>=<span class="string">"分组2"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">"1-3"</span>&gt;</span>选项3<span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">el-menu-item-group</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-submenu</span> <span class="attr">index</span>=<span class="string">"1-4"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">template</span> <span class="attr">slot</span>=<span class="string">"title"</span>&gt;</span>选项4<span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">"1-4-1"</span>&gt;</span>选项1<span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">el-submenu</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-submenu</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">"2"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"el-icon-menu"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">span</span> <span class="attr">slot</span>=<span class="string">"title"</span>&gt;</span>导航二<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">"3"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"el-icon-setting"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">span</span> <span class="attr">slot</span>=<span class="string">"title"</span>&gt;</span>导航三<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-menu</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">  <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="undefined">    methods: &#123;</span></span><br><span class="line"><span class="undefined">      handleOpen(key, keyPath) &#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(key, keyPath);</span></span><br><span class="line"><span class="undefined">      &#125;,</span></span><br><span class="line"><span class="undefined">      handleClose(key, keyPath) &#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(key, keyPath);</span></span><br><span class="line"><span class="undefined">      &#125;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>然后将NavMenu组件导入到App.vue中, 修改App.vue：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-container</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-header</span>&gt;</span>Header<span class="tag">&lt;/<span class="name">el-header</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-container</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-aside</span> <span class="attr">width</span>=<span class="string">"200px"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">navmenu</span>&gt;</span><span class="tag">&lt;/<span class="name">navmenu</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-aside</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-main</span>&gt;</span>Main<span class="tag">&lt;/<span class="name">el-main</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-container</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-container</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> NavMenu <span class="keyword">from</span> <span class="string">'@/components/NavMenu'</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="actionscript">  name: <span class="string">'app'</span>,</span></span><br><span class="line"><span class="undefined">  components: &#123;</span></span><br><span class="line"><span class="actionscript">    <span class="string">'navmenu'</span>: NavMenu</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>这里要解释一下这条语句, 该语句中的<code>@</code>, 符号是什么意思？<br><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> NavMenu <span class="keyword">from</span> <span class="string">'@/components/NavMenu'</span></span><br></pre></td></tr></table></figure></p><p>在build/webpack.base.conf.js中有如下代码, alias就是起别名，<code>@符号就是代表src路径， 所以@/components/NavMenu就是src/components/NavMenu</code>。 这样webpack就知道如何引入文件了。这样做的好处是不必到处去写<code>src</code>了。<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">resolve</span>: &#123;</span><br><span class="line">  <span class="attribute">extensions</span>: [<span class="string">'.js'</span>, <span class="string">'.vue'</span>, <span class="string">'.json'</span>],</span><br><span class="line">  alias: &#123;</span><br><span class="line">    <span class="string">'vue$'</span>: <span class="string">'vue/dist/vue.esm.js'</span>,</span><br><span class="line">    <span class="string">'@'</span>: <span class="built_in">resolve</span>(<span class="string">'src'</span>),</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure></p><p>现在打开浏览器，应该可以看到如下界面：<br><img src="http://p3alsaatj.bkt.clouddn.com/20180209120449_4adtnd_Screenshot.jpeg" alt=""></p><p>可以看到菜单已经引入进来了，但是是两个菜单，下面我们需要修改一下，只要右边的菜单，并删除一些多余的元素。<br>修改NavMenu.vue文件。<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">&lt;template&gt;</span></span><br><span class="line">  &lt;<span class="keyword">el</span>-row class=<span class="string">"tac"</span>&gt;</span><br><span class="line">    &lt;<span class="keyword">el</span>-<span class="keyword">col</span> :span=<span class="string">"24"</span>&gt;</span><br><span class="line">      &lt;<span class="keyword">el</span>-<span class="keyword">menu</span> default-active=<span class="string">"2"</span> class=<span class="string">"el-menu-vertical-demo"</span> @open=<span class="string">"handleOpen"</span> @close=<span class="string">"handleClose"</span></span><br><span class="line">      unique-opened</span><br><span class="line">      router</span><br><span class="line">      background-color=<span class="string">"#545c64"</span> text-color=<span class="string">"#fff"</span> active-text-color=<span class="string">"#ffd04b"</span>&gt;</span><br><span class="line">        &lt;<span class="keyword">el</span>-submenu <span class="built_in">index</span>=<span class="string">"1"</span>&gt;</span><br><span class="line">          &lt;template slot=<span class="string">"title"</span>&gt;</span><br><span class="line">            &lt;i class=<span class="string">"el-icon-location"</span>&gt;&lt;/i&gt;</span><br><span class="line">            <span class="symbol">&lt;span&gt;</span>导航一&lt;/span&gt;</span><br><span class="line">          &lt;/template&gt;</span><br><span class="line">          <span class="symbol">&lt;el-menu-item-group&gt;</span></span><br><span class="line">            &lt;<span class="keyword">el</span>-<span class="keyword">menu</span>-item <span class="built_in">index</span>=<span class="string">"1-1"</span>&gt;选项<span class="number">1</span>&lt;/<span class="keyword">el</span>-<span class="keyword">menu</span>-item&gt;</span><br><span class="line">            &lt;<span class="keyword">el</span>-<span class="keyword">menu</span>-item <span class="built_in">index</span>=<span class="string">"1-2"</span>&gt;选项<span class="number">2</span>&lt;/<span class="keyword">el</span>-<span class="keyword">menu</span>-item&gt;</span><br><span class="line">            &lt;<span class="keyword">el</span>-<span class="keyword">menu</span>-item <span class="built_in">index</span>=<span class="string">"1-3"</span>&gt;选项<span class="number">3</span>&lt;/<span class="keyword">el</span>-<span class="keyword">menu</span>-item&gt;</span><br><span class="line">            &lt;<span class="keyword">el</span>-<span class="keyword">menu</span>-item <span class="built_in">index</span>=<span class="string">"1-4"</span>&gt;选项<span class="number">4</span>&lt;/<span class="keyword">el</span>-<span class="keyword">menu</span>-item&gt;</span><br><span class="line">          &lt;/<span class="keyword">el</span>-<span class="keyword">menu</span>-item-group&gt;</span><br><span class="line">        &lt;/<span class="keyword">el</span>-submenu&gt;</span><br><span class="line"></span><br><span class="line">        &lt;<span class="keyword">el</span>-submenu <span class="built_in">index</span>=<span class="string">"2"</span>&gt;</span><br><span class="line">          &lt;template slot=<span class="string">"title"</span>&gt;</span><br><span class="line">            &lt;i class=<span class="string">"el-icon-location"</span>&gt;&lt;/i&gt;</span><br><span class="line">            <span class="symbol">&lt;span&gt;</span>导航二&lt;/span&gt;</span><br><span class="line">          &lt;/template&gt;</span><br><span class="line">          <span class="symbol">&lt;el-menu-item-group&gt;</span></span><br><span class="line">            &lt;<span class="keyword">el</span>-<span class="keyword">menu</span>-item <span class="built_in">index</span>=<span class="string">"2-1"</span>&gt;选项<span class="number">1</span>&lt;/<span class="keyword">el</span>-<span class="keyword">menu</span>-item&gt;</span><br><span class="line">            &lt;<span class="keyword">el</span>-<span class="keyword">menu</span>-item <span class="built_in">index</span>=<span class="string">"2-2"</span>&gt;选项<span class="number">2</span>&lt;/<span class="keyword">el</span>-<span class="keyword">menu</span>-item&gt;</span><br><span class="line">            &lt;<span class="keyword">el</span>-<span class="keyword">menu</span>-item <span class="built_in">index</span>=<span class="string">"2-3"</span>&gt;选项<span class="number">3</span>&lt;/<span class="keyword">el</span>-<span class="keyword">menu</span>-item&gt;</span><br><span class="line">            &lt;<span class="keyword">el</span>-<span class="keyword">menu</span>-item <span class="built_in">index</span>=<span class="string">"2-4"</span>&gt;选项<span class="number">4</span>&lt;/<span class="keyword">el</span>-<span class="keyword">menu</span>-item&gt;</span><br><span class="line">          &lt;/<span class="keyword">el</span>-<span class="keyword">menu</span>-item-group&gt;</span><br><span class="line">        &lt;/<span class="keyword">el</span>-submenu&gt;</span><br><span class="line"></span><br><span class="line">      &lt;/<span class="keyword">el</span>-<span class="keyword">menu</span>&gt;</span><br><span class="line">    &lt;/<span class="keyword">el</span>-<span class="keyword">col</span>&gt;</span><br><span class="line">  &lt;/<span class="keyword">el</span>-row&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="symbol">&lt;script&gt;</span></span><br><span class="line">  export default &#123;</span><br><span class="line">    method<span class="variable">s:</span> &#123;</span><br><span class="line">      handleOpen(key, keyPath) &#123;</span><br><span class="line">        console.<span class="built_in">log</span>(key, keyPath)</span><br><span class="line">      &#125;,</span><br><span class="line">      handleClose(key, keyPath) &#123;</span><br><span class="line">        console.<span class="built_in">log</span>(key, keyPath)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p><p>现在打开浏览器看看：<br><img src="http://p3alsaatj.bkt.clouddn.com/20180209120504_fBzacz_Screenshot.jpeg" alt=""></p><p>点击展开菜单看看：<br><img src="http://p3alsaatj.bkt.clouddn.com/20180209120513_YyPnIb_Screenshot.jpeg" alt=""></p><h1 id="侧边菜单栏进阶"><a href="#侧边菜单栏进阶" class="headerlink" title="侧边菜单栏进阶"></a>侧边菜单栏进阶</h1><p>我们需要的功能：</p><ol><li>每次只能展开一个一级菜单</li><li>每次点击一个二级菜单可以自动改变路由，跳转到对应的组件</li><li>由于菜单在路由中也会使用，所以最好抽象出来，做成一个配置文件</li></ol><p>第1点和第二点比较好搞，Element上已经有配置文档:</p><ul><li>unique-opened: 是否只保持一个子菜单的展开</li><li>router: 是否使用 vue-router 的模式，启用该模式会在激活导航时以 index 作为 path 进行路由跳转</li></ul><p><img src="http://p3alsaatj.bkt.clouddn.com/20180209120526_BrJl3d_Screenshot.jpeg" alt=""></p><p>修改NavMenu.vue<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">&lt;template&gt;</span></span><br><span class="line">  &lt;<span class="keyword">el</span>-row class=<span class="string">"tac"</span>&gt;</span><br><span class="line">    &lt;<span class="keyword">el</span>-<span class="keyword">col</span> :span=<span class="string">"24"</span>&gt;</span><br><span class="line">      &lt;<span class="keyword">el</span>-<span class="keyword">menu</span> default-active=<span class="string">"2"</span> class=<span class="string">"el-menu-vertical-demo"</span> @open=<span class="string">"handleOpen"</span> @close=<span class="string">"handleClose"</span></span><br><span class="line">      unique-opened</span><br><span class="line">      router</span><br><span class="line">      background-color=<span class="string">"#545c64"</span> text-color=<span class="string">"#fff"</span> active-text-color=<span class="string">"#ffd04b"</span>&gt;</span><br><span class="line">        &lt;<span class="keyword">el</span>-submenu <span class="built_in">index</span>=<span class="string">"1"</span>&gt;</span><br><span class="line">          &lt;template slot=<span class="string">"title"</span>&gt;</span><br><span class="line">            &lt;i class=<span class="string">"el-icon-location"</span>&gt;&lt;/i&gt;</span><br><span class="line">            <span class="symbol">&lt;span&gt;</span>导航一&lt;/span&gt;</span><br><span class="line">          &lt;/template&gt;</span><br><span class="line">          <span class="symbol">&lt;el-menu-item-group&gt;</span></span><br><span class="line">            &lt;<span class="keyword">el</span>-<span class="keyword">menu</span>-item <span class="built_in">index</span>=<span class="string">"1-1"</span>&gt;选项<span class="number">1</span>&lt;/<span class="keyword">el</span>-<span class="keyword">menu</span>-item&gt;</span><br><span class="line">            &lt;<span class="keyword">el</span>-<span class="keyword">menu</span>-item <span class="built_in">index</span>=<span class="string">"1-2"</span>&gt;选项<span class="number">2</span>&lt;/<span class="keyword">el</span>-<span class="keyword">menu</span>-item&gt;</span><br><span class="line">            &lt;<span class="keyword">el</span>-<span class="keyword">menu</span>-item <span class="built_in">index</span>=<span class="string">"1-3"</span>&gt;选项<span class="number">3</span>&lt;/<span class="keyword">el</span>-<span class="keyword">menu</span>-item&gt;</span><br><span class="line">            &lt;<span class="keyword">el</span>-<span class="keyword">menu</span>-item <span class="built_in">index</span>=<span class="string">"1-4"</span>&gt;选项<span class="number">4</span>&lt;/<span class="keyword">el</span>-<span class="keyword">menu</span>-item&gt;</span><br><span class="line">          &lt;/<span class="keyword">el</span>-<span class="keyword">menu</span>-item-group&gt;</span><br><span class="line">        &lt;/<span class="keyword">el</span>-submenu&gt;</span><br><span class="line"></span><br><span class="line">        &lt;<span class="keyword">el</span>-submenu <span class="built_in">index</span>=<span class="string">"2"</span>&gt;</span><br><span class="line">          &lt;template slot=<span class="string">"title"</span>&gt;</span><br><span class="line">            &lt;i class=<span class="string">"el-icon-location"</span>&gt;&lt;/i&gt;</span><br><span class="line">            <span class="symbol">&lt;span&gt;</span>导航二&lt;/span&gt;</span><br><span class="line">          &lt;/template&gt;</span><br><span class="line">          <span class="symbol">&lt;el-menu-item-group&gt;</span></span><br><span class="line">            &lt;<span class="keyword">el</span>-<span class="keyword">menu</span>-item <span class="built_in">index</span>=<span class="string">"2-1"</span>&gt;选项<span class="number">1</span>&lt;/<span class="keyword">el</span>-<span class="keyword">menu</span>-item&gt;</span><br><span class="line">            &lt;<span class="keyword">el</span>-<span class="keyword">menu</span>-item <span class="built_in">index</span>=<span class="string">"2-2"</span>&gt;选项<span class="number">2</span>&lt;/<span class="keyword">el</span>-<span class="keyword">menu</span>-item&gt;</span><br><span class="line">            &lt;<span class="keyword">el</span>-<span class="keyword">menu</span>-item <span class="built_in">index</span>=<span class="string">"2-3"</span>&gt;选项<span class="number">3</span>&lt;/<span class="keyword">el</span>-<span class="keyword">menu</span>-item&gt;</span><br><span class="line">            &lt;<span class="keyword">el</span>-<span class="keyword">menu</span>-item <span class="built_in">index</span>=<span class="string">"2-4"</span>&gt;选项<span class="number">4</span>&lt;/<span class="keyword">el</span>-<span class="keyword">menu</span>-item&gt;</span><br><span class="line">          &lt;/<span class="keyword">el</span>-<span class="keyword">menu</span>-item-group&gt;</span><br><span class="line">        &lt;/<span class="keyword">el</span>-submenu&gt;</span><br><span class="line"></span><br><span class="line">      &lt;/<span class="keyword">el</span>-<span class="keyword">menu</span>&gt;</span><br><span class="line">    &lt;/<span class="keyword">el</span>-<span class="keyword">col</span>&gt;</span><br><span class="line">  &lt;/<span class="keyword">el</span>-row&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="symbol">&lt;script&gt;</span></span><br><span class="line">  export default &#123;</span><br><span class="line">    method<span class="variable">s:</span> &#123;</span><br><span class="line">      handleOpen (key, keyPath) &#123;</span><br><span class="line">        console.<span class="built_in">log</span>(key, keyPath)</span><br><span class="line">      &#125;,</span><br><span class="line">      handleClose (key, keyPath) &#123;</span><br><span class="line">        console.<span class="built_in">log</span>(key, keyPath)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p><p>打开浏览器，点击一个二级菜单看看，你会发现，效果并不像预期那样，而且控制台还向你扔出一个bug：<br><img src="http://p3alsaatj.bkt.clouddn.com/20180209120546_OMkIrB_Screenshot.jpeg" alt=""></p><p>添加一个暂时的路由: 修改main.js<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> ElementUI <span class="keyword">from</span> <span class="string">'element-ui'</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">'element-ui/lib/theme-chalk/index.css'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">'./App'</span></span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">'./router'</span></span><br><span class="line"></span><br><span class="line">Vue.config.productionTip = <span class="keyword">false</span></span><br><span class="line"></span><br><span class="line">Vue.use(ElementUI)</span><br><span class="line"></span><br><span class="line"><span class="comment">/* eslint-disable no-new */</span></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">'#app'</span>,</span><br><span class="line">  router,</span><br><span class="line">  template: <span class="string">'&lt;App/&gt;'</span>,</span><br><span class="line">  components: &#123; App &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><p>打开浏览器，点击一个二级菜单，这时候没有报错，浏览器的路径也变了, 变成<code>http://localhost:8080/#/1-3</code><br><img src="http://p3alsaatj.bkt.clouddn.com/20180209120605_R7ixHF_Screenshot.jpeg" alt=""></p><p><code>每次增加一个菜单都要写点html是不能忍的，能用js的，就别用html</code>。</p><p>在src目录下创建一个config目录，目录下创建一个menu-config.js 文件：<br>外层的数组代表一级菜单，内层sub数组代表二级菜单。</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">module.exports = [&#123;</span><br><span class="line">  name: <span class="string">'基础'</span>,</span><br><span class="line">  id: <span class="string">'basic'</span>,</span><br><span class="line">  <span class="function"><span class="keyword">sub</span>: [</span>&#123;</span><br><span class="line">    name: <span class="string">'Layout 布局'</span>,</span><br><span class="line">    componentName: <span class="string">'BasicLayout'</span></span><br><span class="line">  &#125;, &#123;</span><br><span class="line">    name: <span class="string">'Container 布局容器'</span>,</span><br><span class="line">    componentName: <span class="string">'BasicContainer'</span></span><br><span class="line">  &#125;]</span><br><span class="line">&#125;, &#123;</span><br><span class="line">  name: <span class="string">'Form'</span>,</span><br><span class="line">  id: <span class="string">'form'</span>,</span><br><span class="line">  <span class="function"><span class="keyword">sub</span>: [</span>&#123;</span><br><span class="line">    name: <span class="string">'Radio 单选框'</span>,</span><br><span class="line">    componentName: <span class="string">'FormRadio'</span></span><br><span class="line">  &#125;, &#123;</span><br><span class="line">    name: <span class="string">'Checkbox 多选框'</span>,</span><br><span class="line">    componentName: <span class="string">'FormCheckbox'</span></span><br><span class="line">  &#125;]</span><br><span class="line">&#125;]</span><br></pre></td></tr></table></figure><p>在NavMenu.vue中引入这个文件，并使用<code>v-for</code>循环去渲染这个菜单：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-row</span> <span class="attr">class</span>=<span class="string">"tac"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">"24"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-menu</span></span></span><br><span class="line"><span class="tag">      <span class="attr">class</span>=<span class="string">"el-menu-vertical-demo"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">router</span></span></span><br><span class="line"><span class="tag">      <span class="attr">unique-opened</span></span></span><br><span class="line"><span class="tag">      @<span class="attr">open</span>=<span class="string">"handleOpen"</span></span></span><br><span class="line"><span class="tag">      @<span class="attr">close</span>=<span class="string">"handleClose"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">background-color</span>=<span class="string">"#545c64"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">text-color</span>=<span class="string">"#fff"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">active-text-color</span>=<span class="string">"#ffd04b"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-submenu</span> <span class="attr">v-for</span>=<span class="string">"item in menu"</span> <span class="attr">:index</span>=<span class="string">"item.id"</span> <span class="attr">:key</span>=<span class="string">"item.id"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">template</span> <span class="attr">slot</span>=<span class="string">"title"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-text</span>=<span class="string">"item.name"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-menu-item-group</span> <span class="attr">class</span>=<span class="string">"over-hide"</span> <span class="attr">v-for</span>=<span class="string">"sub in item.sub"</span> <span class="attr">:key</span>=<span class="string">"sub.componentName"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">:index</span>=<span class="string">"sub.componentName"</span> <span class="attr">v-text</span>=<span class="string">"sub.name"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-menu-item-group</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-submenu</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-menu</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css">  <span class="selector-class">.over-hide</span>&#123;</span></span><br><span class="line"><span class="undefined">    overflow: hidden;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">  <span class="keyword">import</span> menu <span class="keyword">from</span> <span class="string">'@/config/menu-config'</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">  <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="undefined">    data () &#123;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="undefined">        menu: menu</span></span><br><span class="line"><span class="undefined">      &#125;</span></span><br><span class="line"><span class="undefined">    &#125;,</span></span><br><span class="line"><span class="undefined">    methods: &#123;</span></span><br><span class="line"><span class="undefined">      handleOpen (key, keyPath) &#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(key, keyPath)</span></span><br><span class="line"><span class="undefined">      &#125;,</span></span><br><span class="line"><span class="undefined">      handleClose (key, keyPath) &#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(key, keyPath)</span></span><br><span class="line"><span class="undefined">      &#125;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>这里要说明一下，我给二级菜单加上了<code>over-hide</code>类，二级菜单在展开时，有点溢出父元素了。<br>打开浏览器看看, 这时候菜单已经是根据配置文件渲染的了。</p><p><img src="http://p3alsaatj.bkt.clouddn.com/20180209120622_xWsb3F_Screenshot.jpeg" alt=""></p><h1 id="先加个头部吧，秃顶太丑了"><a href="#先加个头部吧，秃顶太丑了" class="headerlink" title="先加个头部吧，秃顶太丑了"></a>先加个头部吧，秃顶太丑了</h1><p>在componets文件夹下创建一个Header.vue, 并在App.vue中引入，</p><p>Header.vue<br><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">"24"</span></span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"head-wrap"</span>&gt;</span>Element<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span><span class="undefined"></span></span></span><br><span class="line"><span class="xml">.head-wrap&#123;</span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">&#125;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p><p>App.vue<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-container</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-header</span> <span class="attr">class</span>=<span class="string">"header"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">vheader</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-header</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-container</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-aside</span> <span class="attr">width</span>=<span class="string">"200px"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">navmenu</span>&gt;</span><span class="tag">&lt;/<span class="name">navmenu</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-aside</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-main</span>&gt;</span>Main</span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-main</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-container</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-container</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> NavMenu <span class="keyword">from</span> <span class="string">'@/components/NavMenu'</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> Header <span class="keyword">from</span> <span class="string">'@/components/Header'</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="actionscript">  name: <span class="string">'app'</span>,</span></span><br><span class="line"><span class="undefined">  components: &#123;</span></span><br><span class="line"><span class="actionscript">    <span class="string">'navmenu'</span>: NavMenu,</span></span><br><span class="line"><span class="actionscript">    <span class="string">'vheader'</span>: Header</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css"><span class="selector-class">.header</span> &#123;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">background-color</span>: <span class="selector-id">#409EFF</span>;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">color</span>: <span class="selector-id">#fff</span>;</span></span><br><span class="line"><span class="undefined">  line-height: 60px;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>这时候打开浏览器看看, 是不是已经好看一点了。但是body有边框，不好看啊！<br><img src="http://p3alsaatj.bkt.clouddn.com/20180209120643_htqsRT_Screenshot.jpeg" alt=""></p><p><code>再次美化</code></p><ul><li>使用css reset <a href="http://necolas.github.io/normalize.css/" target="_blank" rel="noopener">Normalize.css</a></li><li>使用font-awesome <a href="https://github.com/Justineo/vue-awesome" target="_blank" rel="noopener">vue-awesome图标库</a></li></ul><p><code>安装Normalize.css, vue-awesome</code></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cnpm <span class="selector-tag">i</span> normalize<span class="selector-class">.css</span> -D</span><br><span class="line">cnpm <span class="selector-tag">i</span> vue-awesome -D</span><br></pre></td></tr></table></figure><p>这里主要贴一下main.js的改动，其他的代码就不贴了：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> ElementUI <span class="keyword">from</span> <span class="string">'element-ui'</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">'element-ui/lib/theme-chalk/index.css'</span></span><br><span class="line"><span class="keyword">import</span> NormailizeCss <span class="keyword">from</span> <span class="string">'normalize.css'</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">'vue-awesome/icons'</span></span><br><span class="line"><span class="keyword">import</span> Icon <span class="keyword">from</span> <span class="string">'vue-awesome/components/Icon'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">'./App'</span></span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">'./router'</span></span><br><span class="line"></span><br><span class="line">Vue.config.productionTip = <span class="keyword">false</span></span><br><span class="line"></span><br><span class="line">Vue.use(ElementUI)</span><br><span class="line">Vue.component(<span class="string">'icon'</span>, Icon)</span><br><span class="line"></span><br><span class="line"><span class="comment">/* eslint-disable no-new */</span></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">'#app'</span>,</span><br><span class="line">  router,</span><br><span class="line">  template: <span class="string">'&lt;App/&gt;'</span>,</span><br><span class="line">  components: &#123; App &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>看下效果, 图标什么的都有了。<br><img src="http://p3alsaatj.bkt.clouddn.com/20180209120656_Hk4igw_Screenshot.jpeg" alt=""></p><h1 id="组件路由与懒加载"><a href="#组件路由与懒加载" class="headerlink" title="组件路由与懒加载"></a>组件路由与懒加载</h1><p>在components新增四个文件：</p><p>BasicContainer.vue<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    这是：Container 布局容器</span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>BasicLayout.vue<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    这是：Layout 布局</span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>FormCheckbox.vue<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    这是：Checkbox 多选框</span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>FormRadio.vue<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    这是：Radio 单选框</span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>修改route/index.js文件, 关于路由和懒加载就不在此赘述，任何文档都没有官方文档说的好。</p><p><code>注意：如果您使用的是 Babel，你将需要添加 syntax-dynamic-import 插件，才能使 Babel 可以正确地解析语法。</code><br>也就是说，你要先安装<code>syntax-dynamic-import</code>, 不然懒加载根本不行。<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install --<span class="keyword">save</span>-dev babel-<span class="keyword">plugin</span>-<span class="keyword">syntax</span>-dynamic-import</span><br></pre></td></tr></table></figure></p><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> Router <span class="keyword">from</span> <span class="string">'vue-router'</span></span><br><span class="line"><span class="keyword">import</span> menus <span class="keyword">from</span> <span class="string">'@/config/menu-config'</span></span><br><span class="line"></span><br><span class="line">Vue.use(Router)</span><br><span class="line"></span><br><span class="line">var routes = []</span><br><span class="line"></span><br><span class="line">menus.forEach(<span class="function"><span class="params">(item)</span> =&gt;</span> &#123;</span><br><span class="line">  item.sub.forEach(<span class="function"><span class="params">(sub)</span> =&gt;</span> &#123;</span><br><span class="line">    routes.push(&#123;</span><br><span class="line">      path: `<span class="javascript">/$&#123;sub.componentName&#125;</span>`,</span><br><span class="line">      name: sub.componentName,</span><br><span class="line">      component: <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(`<span class="javascript">@/components/$&#123;sub.componentName&#125;</span>`)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> Router(&#123; routes &#125;)</span><br></pre></td></tr></table></figure><p>另外App.vue文件需要加上 router-view<br><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">&lt;el-main&gt;</span></span><br><span class="line">  <span class="section">&lt;router-view&gt;</span><span class="section">&lt;/router-view&gt;</span></span><br><span class="line"><span class="section">&lt;/el-main&gt;</span></span><br></pre></td></tr></table></figure></p><p>看看效果：点击菜单，路径跳转，并且每次都是单独去加载路由的文件。</p><p><img src="http://p3alsaatj.bkt.clouddn.com/20180209120713_ZEW6BF_Screenshot.jpeg" alt=""></p><h1 id="github-部署"><a href="#github-部署" class="headerlink" title="github 部署"></a>github 部署</h1><p>如果你想在github上部署，那么你要修改config/index.js的以下代码, 不然有些文件因为路径问题可能会找不到。</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">build</span>: &#123;</span><br><span class="line">   <span class="comment">// Template for index.html</span></span><br><span class="line">   <span class="attribute">index</span>: path.resolve(__dirname, <span class="string">'../docs/index.html'</span>),</span><br><span class="line"></span><br><span class="line">   <span class="comment">// Paths</span></span><br><span class="line">   <span class="attribute">assetsRoot</span>: path.resolve(__dirname, <span class="string">'../docs'</span>),</span><br><span class="line">   <span class="attribute">assetsSubDirectory</span>: <span class="string">'static'</span>,</span><br><span class="line">   <span class="attribute">assetsPublicPath</span>: <span class="string">'/vue-el-dashboard/'</span>,</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;之前我很少做过组件化的相关demo, 虽然学习了webpack, 但是还是很少使用。工作中用到最多的是jQuery, 还有Vue。但是我只是把Vue看成一个小工具来用，并没有使用组件化或者单文件组件的东西。&lt;br&gt;闲暇时间看看《行尸走肉 第六季》，
      
    
    </summary>
    
    
      <category term="Vue" scheme="https://wdd.js.org/tags/Vue/"/>
    
      <category term="Vue-router" scheme="https://wdd.js.org/tags/Vue-router/"/>
    
      <category term="ElementUI" scheme="https://wdd.js.org/tags/ElementUI/"/>
    
  </entry>
  
  <entry>
    <title>axios进阶：用最优雅的方式写ajax请求</title>
    <link href="https://wdd.js.org/axios-best-practices.html"/>
    <id>https://wdd.js.org/axios-best-practices.html</id>
    <published>2018-02-09T03:59:25.000Z</published>
    <updated>2018-02-09T04:00:30.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><code>可以用配置解决的问题，请勿硬编码</code><br>姊妹篇 <a href="https://segmentfault.com/a/1190000008678653" target="_blank" rel="noopener">jQuery进阶：用最优雅的方式写ajax请求</a><br>或许你也可以试试：<a href="https://segmentfault.com/a/1190000012830130" target="_blank" rel="noopener">xfire: 简单优雅、高度可配置的fetch接口批量生成工具</a></p></blockquote><p><a href="https://github.com/axios/axios" target="_blank" rel="noopener">axios</a>是Vue官方推荐的ajax库, 用来取代vue-resource。</p><p><code>优点：</code></p><ul><li><code>增加一个ajax接口，只需要在配置文件里多写几行就可以</code></li><li><code>不需要在组件中写axios调用，直接调用api方法，很方便</code></li><li><code>如果接口有调整，只需要修改一下接口配置文件就可以</code></li><li><code>统一管理接口配置</code></li></ul><h1 id="content-type配置"><a href="#content-type配置" class="headerlink" title="content-type配置"></a>content-type配置</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// filename: content-type.js</span></span><br><span class="line"><span class="keyword">module</span>.<span class="keyword">exports</span> = &#123;</span><br><span class="line">  formData: <span class="string">'application/x-www-form-urlencoded; charset=UTF-8'</span>,</span><br><span class="line">  json: <span class="string">'application/json; charset=UTF-8'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="api-配置"><a href="#api-配置" class="headerlink" title="api 配置"></a>api 配置</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// filename: api-sdk-conf.js</span></span><br><span class="line"><span class="keyword">import</span> contentType <span class="keyword">from</span> <span class="string">'./content-type'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  baseURL: <span class="string">'http://192.168.40.231:30412'</span>,</span><br><span class="line">  apis: [</span><br><span class="line">    &#123;</span><br><span class="line">      name: <span class="string">'login'</span>,</span><br><span class="line">      path: <span class="string">'/api/security/login?&#123;&#123;id&#125;&#125;'</span>,</span><br><span class="line">      method: <span class="string">'post'</span>,</span><br><span class="line">      contentType: contentType.formData,</span><br><span class="line">      status: &#123;</span><br><span class="line">        <span class="number">401</span>: <span class="string">'用户名或者密码错误'</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="request-js-方法"><a href="#request-js-方法" class="headerlink" title="request.js 方法"></a>request.js 方法</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// request.js</span></span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">'axios'</span></span><br><span class="line"><span class="keyword">import</span> qs <span class="keyword">from</span> <span class="string">'qs'</span></span><br><span class="line"><span class="keyword">import</span> contentType <span class="keyword">from</span> <span class="string">'@/config/content-type'</span></span><br><span class="line"><span class="keyword">import</span> apiConf <span class="keyword">from</span> <span class="string">'@/config/api-sdk-conf'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> api = &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// render 函数用来渲染路径上的变量, 算是一个微型的模板渲染工具</span></span><br><span class="line"><span class="comment">// 例如render('/&#123;&#123;userId&#125;&#125;/&#123;&#123;type&#125;&#125;/&#123;&#123;query&#125;&#125;', &#123;userId:1,type:2, query:3&#125;)</span></span><br><span class="line"><span class="comment">// 会被渲染成 /1/2/3</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">render</span> (<span class="params">tpl, data</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> re = <span class="regexp">/&#123;&#123;([^&#125;]+)?&#125;&#125;/</span></span><br><span class="line">  <span class="keyword">var</span> match = <span class="string">''</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">while</span> ((match = re.exec(tpl))) &#123;</span><br><span class="line">    tpl = tpl.replace(match[<span class="number">0</span>], data[match[<span class="number">1</span>]])</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> tpl</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// fire中的this, 会动态绑定到每个接口上</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fire</span> (<span class="params">query = &#123;&#125;, payload = <span class="string">''</span></span>) </span>&#123;</span><br><span class="line">  <span class="comment">// qs 特别处理 formData类型的数据</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">this</span>.contentType === contentType.formData) &#123;</span><br><span class="line">    payload = qs.stringify(payload)</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 直接返回axios实例，方便调用then,或者catch方法</span></span><br><span class="line">  <span class="keyword">return</span> axios(&#123;</span><br><span class="line">    method: <span class="keyword">this</span>.method,</span><br><span class="line">    url: render(<span class="keyword">this</span>.url, query),</span><br><span class="line">    data: payload,</span><br><span class="line">    headers: &#123;</span><br><span class="line">      contentType: <span class="keyword">this</span>.contentType</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">apiConf.apis.forEach(<span class="function">(<span class="params">item</span>) =&gt;</span> &#123;</span><br><span class="line">  api[item.name] = &#123;</span><br><span class="line">    url: apiConf.baseURL + item.path,</span><br><span class="line">    method: item.method,</span><br><span class="line">    status: item.status,</span><br><span class="line">    contentType: item.contentType,</span><br><span class="line">    fire: fire</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> api</span><br></pre></td></tr></table></figure><h1 id="在组件中使用"><a href="#在组件中使用" class="headerlink" title="在组件中使用"></a>在组件中使用</h1><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> api <span class="keyword">from</span> <span class="string">'@/apis/request'</span></span><br><span class="line">...</span><br><span class="line">      api.login.fire(&#123;id: <span class="string">'?heiheihei'</span>&#125;, &#123;</span><br><span class="line">        username: <span class="string">'admin'</span>,</span><br><span class="line">        password: <span class="string">'admin'</span>,</span><br><span class="line">        namespace: <span class="string">'_system'</span></span><br><span class="line">      &#125;)</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>浏览器结果：<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">Request</span> <span class="attr">URL:http://192.168.40.231:30412/api/security/login??heiheihei</span></span><br><span class="line"><span class="string">Request</span> <span class="attr">Method:POST</span></span><br><span class="line"><span class="string">Status</span> <span class="attr">Code:200</span> <span class="string">OK</span></span><br><span class="line"><span class="string">Remote</span> <span class="attr">Address:192.168.40.231:30412</span></span><br><span class="line"><span class="string">Referrer</span> <span class="attr">Policy:no-referrer-when-downgrade</span></span><br><span class="line"></span><br><span class="line"><span class="string">POST</span> <span class="string">/api/security/login??heiheihei</span> <span class="string">HTTP/1.1</span></span><br><span class="line"><span class="attr">Host:</span> <span class="number">192.168</span><span class="number">.40</span><span class="number">.231</span><span class="string">:30412</span></span><br><span class="line"><span class="attr">Connection:</span> <span class="string">keep-alive</span></span><br><span class="line"><span class="attr">Content-Length:</span> <span class="number">47</span></span><br><span class="line"><span class="attr">Accept:</span> <span class="string">application/json,</span> <span class="string">text/plain,</span> <span class="string">*/*</span></span><br><span class="line"><span class="attr">Origin:</span> <span class="attr">http://localhost:8080</span></span><br><span class="line"><span class="attr">contentType:</span> <span class="string">application/x-www-form-urlencoded;</span> <span class="string">charset=UTF-8</span></span><br><span class="line"><span class="attr">User-Agent:</span> <span class="string">Mozilla/5.0</span> <span class="string">(Macintosh;</span> <span class="string">Intel</span> <span class="string">Mac</span> <span class="string">OS</span> <span class="string">X</span> <span class="number">10</span><span class="string">_12_5)</span> <span class="string">AppleWebKit/537.36</span> <span class="string">(KHTML,</span> <span class="string">like</span> <span class="string">Gecko)</span> <span class="string">Chrome/62.0.3202.94</span> <span class="string">Safari/537.36</span></span><br><span class="line"><span class="attr">Content-Type:</span> <span class="string">application/x-www-form-urlencoded</span></span><br><span class="line"><span class="attr">Referer:</span> <span class="attr">http://localhost:8080/</span></span><br><span class="line"><span class="attr">Accept-Encoding:</span> <span class="string">gzip,</span> <span class="string">deflate</span></span><br><span class="line"><span class="attr">Accept-Language:</span> <span class="string">zh-CN,zh;q=0.9,en;q=0.8</span></span><br><span class="line"></span><br><span class="line"><span class="string">username=admin&amp;password=admin&amp;namespace=_system</span></span><br></pre></td></tr></table></figure></p><h1 id="更多"><a href="#更多" class="headerlink" title="更多"></a>更多</h1><p><code>有个地方我不是很明白，希望懂的人可以给我解答一下</code></p><p>如果某个组件中只需要<code>login</code>方法，但是我这样写会报错。<br><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;login&#125; <span class="keyword">from</span> <span class="string">'@/apis/request'</span></span><br></pre></td></tr></table></figure></p><p>这样写的前提是要在request.js最后写上<br><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">var</span> login = api.login</span><br></pre></td></tr></table></figure></p><p>但是这是我不想要的，因为每次增加一个接口，这里都要export一次， 这不符合<code>开放闭合原则</code>，请问有什么更好的方法吗？</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;可以用配置解决的问题，请勿硬编码&lt;/code&gt;&lt;br&gt;姊妹篇 &lt;a href=&quot;https://segmentfault.com/a/1190000008678653&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;jQ
      
    
    </summary>
    
    
      <category term="axios" scheme="https://wdd.js.org/tags/axios/"/>
    
  </entry>
  
  <entry>
    <title>笔记 node最佳实践1 项目工程最佳实践</title>
    <link href="https://wdd.js.org/nodejs-project-best-struct.html"/>
    <id>https://wdd.js.org/nodejs-project-best-struct.html</id>
    <published>2018-02-09T03:56:11.000Z</published>
    <updated>2018-02-09T03:59:58.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://p3alsaatj.bkt.clouddn.com/20180209115715_YvgYOb_Screenshot.jpeg" alt=""></p><p>原文阅读: <a href="https://github.com/i0natan/nodebestpractices" target="_blank" rel="noopener">nodebestpractices</a></p><h1 id="工程结构最佳实践"><a href="#工程结构最佳实践" class="headerlink" title="工程结构最佳实践"></a>工程结构最佳实践</h1><h2 id="组件化"><a href="#组件化" class="headerlink" title="组件化"></a>组件化</h2><p><img src="http://p3alsaatj.bkt.clouddn.com/20180209115729_iJfUGU_Screenshot.jpeg" alt=""></p><p><code>bad: 按照功能划分</code> </p><ul><li>controllers<ul><li>api.js</li><li>home.js</li><li>order.js</li><li>product.js</li><li>user.js</li></ul></li><li>models<ul><li>order.js</li><li>product.js</li><li>user.js</li></ul></li><li>test<ul><li>testOrder.js</li><li>testProduct.js</li><li>testUser.js</li></ul></li></ul><p><code>good：按照组件划分</code></p><ul><li>order</li><li>product</li><li>user<ul><li>index.js</li><li>user.js</li><li>userApi.js</li><li>userError.js</li><li>userTesting.js</li><li>userAction.js</li></ul></li></ul><h2 id="层次化"><a href="#层次化" class="headerlink" title="层次化"></a>层次化</h2><p><img src="http://p3alsaatj.bkt.clouddn.com/20180209115743_ugkfVb_Screenshot.jpeg" alt=""></p><ul><li>不要在express中写太多业务逻辑，express专注web层</li><li>业务层要单独抽出</li><li>数据库层单独抽出</li></ul><h2 id="NPM化"><a href="#NPM化" class="headerlink" title="NPM化"></a>NPM化</h2><p><img src="http://p3alsaatj.bkt.clouddn.com/20180209115755_WLygCk_Screenshot.jpeg" alt=""></p><p><code>把常用组件做成NPM包</code></p><h2 id="分离Express的-app-和-server"><a href="#分离Express的-app-和-server" class="headerlink" title="分离Express的 app 和 server"></a>分离<code>Express</code>的 <code>app</code> 和 <code>server</code></h2><p><img src="http://p3alsaatj.bkt.clouddn.com/20180209115806_dtcV4n_Screenshot.jpeg" alt=""></p><h2 id="配置化"><a href="#配置化" class="headerlink" title="配置化"></a>配置化</h2><p><img src="http://p3alsaatj.bkt.clouddn.com/20180209115815_7O9oS6_Screenshot.jpeg" alt=""></p><ul><li><code>环境感知： 根据不同环境使用不同配置</code></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;http://p3alsaatj.bkt.clouddn.com/20180209115715_YvgYOb_Screenshot.jpeg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;原文阅读: &lt;a href=&quot;https://github.com/i0nata
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>grep awk 搜索日志常用命令</title>
    <link href="https://wdd.js.org/grep-awk-search-log.html"/>
    <id>https://wdd.js.org/grep-awk-search-log.html</id>
    <published>2018-02-09T02:45:31.000Z</published>
    <updated>2018-02-09T02:46:12.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="grep-常用参数"><a href="#grep-常用参数" class="headerlink" title="grep 常用参数"></a>grep 常用参数</h1><p>参考： <a href="https://www.gnu.org/software/grep/manual/grep.html" target="_blank" rel="noopener">GNU Grep 3.0</a><br><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">-<span class="ruby">-<span class="symbol">color:</span>高亮显示匹配到的字符串</span></span><br><span class="line"><span class="ruby">-v：显示不能被pattern匹配到的</span></span><br><span class="line"><span class="ruby">-i：忽略字符大小写</span></span><br><span class="line"><span class="ruby">-o：仅显示匹配到的字符串</span></span><br><span class="line"><span class="ruby">-q：静默模式，不输出任何信息</span></span><br><span class="line"><span class="ruby">-A<span class="comment">#：after，匹配到的后#行</span></span></span><br><span class="line"><span class="ruby">-B<span class="comment">#：before，匹配到的前#行</span></span></span><br><span class="line"><span class="ruby">-C<span class="comment">#：context，匹配到的前后各#行</span></span></span><br><span class="line"><span class="ruby">-E：使用ERE，支持使用扩展的正则表达式</span></span><br><span class="line"><span class="ruby"></span></span><br><span class="line"><span class="ruby">－c：只输出匹配行的计数。</span></span><br><span class="line"><span class="ruby">－I：不区分大 小写(只适用于单字符)。</span></span><br><span class="line"><span class="ruby">－h：查询多文件时不显示文件名。</span></span><br><span class="line"><span class="ruby">－l：查询多文件时只输出包含匹配字符的文件名。</span></span><br><span class="line"><span class="ruby">－n：显示匹配行及 行号。</span></span><br><span class="line"><span class="ruby">- <span class="symbol">m:</span> 匹配多少个关键词之后就停止搜索</span></span><br><span class="line"><span class="ruby">－s：不显示不存在或无匹配文本的错误信息。</span></span><br><span class="line"><span class="ruby">－v：显示不包含匹配文本的所有行。</span></span><br></pre></td></tr></table></figure></p><h1 id="普通：搜索trace-log-中含有ERROR字段的日志"><a href="#普通：搜索trace-log-中含有ERROR字段的日志" class="headerlink" title="普通：搜索trace.log 中含有ERROR字段的日志"></a>普通：搜索trace.log 中含有ERROR字段的日志</h1><p><code>grep ERROR trace.log</code></p><h1 id="输出文件：可以将日志输出文件中"><a href="#输出文件：可以将日志输出文件中" class="headerlink" title="输出文件：可以将日志输出文件中"></a>输出文件：可以将日志输出文件中</h1><p><code>grep ERROR trace.log &gt; error.log</code></p><h1 id="反向：搜索不包含ERROR字段的日志"><a href="#反向：搜索不包含ERROR字段的日志" class="headerlink" title="反向：搜索不包含ERROR字段的日志"></a>反向：搜索不包含ERROR字段的日志</h1><p><code>grep -v ERROR trace.log</code></p><h1 id="向前：搜索包含ERROR-并且显示ERROR前10行的日志"><a href="#向前：搜索包含ERROR-并且显示ERROR前10行的日志" class="headerlink" title="向前：搜索包含ERROR,并且显示ERROR前10行的日志"></a>向前：搜索包含ERROR,并且显示ERROR前10行的日志</h1><p><code>grep -B 10 ERROR trace.log</code></p><h1 id="向后：搜索包含ERROR字段，并且显示ERROR后10行的日志"><a href="#向后：搜索包含ERROR字段，并且显示ERROR后10行的日志" class="headerlink" title="向后：搜索包含ERROR字段，并且显示ERROR后10行的日志"></a>向后：搜索包含ERROR字段，并且显示ERROR后10行的日志</h1><p><code>grep -A 10 ERROR trace.log</code></p><h1 id="上下文：搜索包含ERROR字段，并且显示ERROR字段前后10行的日志"><a href="#上下文：搜索包含ERROR字段，并且显示ERROR字段前后10行的日志" class="headerlink" title="上下文：搜索包含ERROR字段，并且显示ERROR字段前后10行的日志"></a>上下文：搜索包含ERROR字段，并且显示ERROR字段前后10行的日志</h1><p><code>grep -C 10 ERROR trace.log</code></p><h1 id="多字段：搜索包含ERROR和DEBUG字段的日志"><a href="#多字段：搜索包含ERROR和DEBUG字段的日志" class="headerlink" title="多字段：搜索包含ERROR和DEBUG字段的日志"></a>多字段：搜索包含ERROR和DEBUG字段的日志</h1><p><code>gerp -E &#39;ERROR|DEBUG&#39; trace.log</code></p><h1 id="多文件：从多个-log文件中搜索含有ERROR的日志"><a href="#多文件：从多个-log文件中搜索含有ERROR的日志" class="headerlink" title="多文件：从多个.log文件中搜索含有ERROR的日志"></a>多文件：从多个.log文件中搜索含有ERROR的日志</h1><p><code>grep ERROR *.log</code></p><h1 id="省略文件名：从多个-log文件中搜索ERROR字段日志，并不显示日志文件名"><a href="#省略文件名：从多个-log文件中搜索ERROR字段日志，并不显示日志文件名" class="headerlink" title="省略文件名：从多个.log文件中搜索ERROR字段日志，并不显示日志文件名"></a>省略文件名：从多个.log文件中搜索ERROR字段日志，并不显示日志文件名</h1><p>从多个文件中搜索的日志默认每行会带有日志文件名</p><p><code>grep -h ERROR *.log</code></p><h1 id="时间范围：-按照时间范围搜索日志"><a href="#时间范围：-按照时间范围搜索日志" class="headerlink" title="时间范围： 按照时间范围搜索日志"></a>时间范围： 按照时间范围搜索日志</h1><p><code>awk &#39;$2&gt;&quot;17:30:00&quot; &amp;&amp; $2&lt;&quot;18:00:00&quot;&#39; trace.log</code><br>日志形式如下, $2代表第二列即11:44:58, awk需要指定列<br><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">11-21</span> <span class="selector-tag">16</span><span class="selector-pseudo">:44</span><span class="selector-pseudo">:58</span> /<span class="selector-tag">user</span>/<span class="selector-tag">info</span>/</span><br></pre></td></tr></table></figure></p><h1 id="有没有：搜索到第一个匹配行后就停止搜索"><a href="#有没有：搜索到第一个匹配行后就停止搜索" class="headerlink" title="有没有：搜索到第一个匹配行后就停止搜索"></a>有没有：搜索到第一个匹配行后就停止搜索</h1><p><code>grep -m 1 ERROR trace.log</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;grep-常用参数&quot;&gt;&lt;a href=&quot;#grep-常用参数&quot; class=&quot;headerlink&quot; title=&quot;grep 常用参数&quot;&gt;&lt;/a&gt;grep 常用参数&lt;/h1&gt;&lt;p&gt;参考： &lt;a href=&quot;https://www.gnu.org/software/
      
    
    </summary>
    
    
      <category term="grep" scheme="https://wdd.js.org/tags/grep/"/>
    
      <category term="awk" scheme="https://wdd.js.org/tags/awk/"/>
    
  </entry>
  
  <entry>
    <title>我的谷歌浏览器插件集（15个）</title>
    <link href="https://wdd.js.org/my-chrome-extensions-collection.html"/>
    <id>https://wdd.js.org/my-chrome-extensions-collection.html</id>
    <published>2018-02-09T02:27:34.000Z</published>
    <updated>2018-02-09T05:20:25.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="广告拦截：AdBlock"><a href="#广告拦截：AdBlock" class="headerlink" title="广告拦截：AdBlock"></a>广告拦截：<a href="https://chrome.google.com/webstore/detail/adblock/gighmmpiobklfepjocnamgkkbiglidom" target="_blank" rel="noopener">AdBlock</a></h1><p><img src="http://p3alsaatj.bkt.clouddn.com/20180209102823_9knbE2_Screenshot.jpeg" alt=""></p><h1 id="获取网页样式：CSS-Peeper"><a href="#获取网页样式：CSS-Peeper" class="headerlink" title="获取网页样式：CSS Peeper"></a>获取网页样式：<a href="https://chrome.google.com/webstore/detail/css-peeper/mbnbehikldjhnfehhnaidhjhoofhpehk" target="_blank" rel="noopener">CSS Peeper</a></h1><p><img src="http://p3alsaatj.bkt.clouddn.com/20180209102836_jsm5C6_Screenshot.jpeg" alt=""></p><h1 id="扩展管理：扩展管理器（Extension-Manager）"><a href="#扩展管理：扩展管理器（Extension-Manager）" class="headerlink" title="扩展管理：扩展管理器（Extension Manager）"></a>扩展管理：<a href="https://chrome.google.com/webstore/detail/extension-manager/gjldcdngmdknpinoemndlidpcabkggco" target="_blank" rel="noopener">扩展管理器（Extension Manager）</a></h1><p><img src="http://p3alsaatj.bkt.clouddn.com/20180209102849_eOYK73_Screenshot.jpeg" alt=""></p><h1 id="json格式化：JSON-handle"><a href="#json格式化：JSON-handle" class="headerlink" title="json格式化：JSON-handle"></a>json格式化：<a href="https://chrome.google.com/webstore/detail/json-handle/iahnhfdhidomcpggpaimmmahffihkfnj" target="_blank" rel="noopener">JSON-handle</a></h1><p><img src="http://p3alsaatj.bkt.clouddn.com/20180209102859_yFF7sW_Screenshot.jpeg" alt=""></p><h1 id="多点高亮查找：Multi-highlight"><a href="#多点高亮查找：Multi-highlight" class="headerlink" title="多点高亮查找：Multi-highlight"></a>多点高亮查找：<a href="https://chrome.google.com/webstore/detail/multi-highlight/pfgfgjlejbbpfmcfjhdmikihihddeeji" target="_blank" rel="noopener">Multi-highlight</a></h1><p><img src="http://p3alsaatj.bkt.clouddn.com/20180209102911_P6M1am_Screenshot.jpeg" alt=""></p><h1 id="github源码阅读：Octotree"><a href="#github源码阅读：Octotree" class="headerlink" title="github源码阅读：Octotree"></a>github源码阅读：<a href="https://chrome.google.com/webstore/detail/octotree/bkhaagjahfmjljalopjnoealnfndnagc?hl=en-US" target="_blank" rel="noopener">Octotree</a></h1><p><img src="http://p3alsaatj.bkt.clouddn.com/20180209102923_Hcc51U_Screenshot.jpeg" alt=""></p><h1 id="http接口调试：Postman"><a href="#http接口调试：Postman" class="headerlink" title="http接口调试：Postman"></a>http接口调试：<a href="https://chrome.google.com/webstore/detail/postman/fhbjgbiflinjbdggehcddcbncdddomop" target="_blank" rel="noopener">Postman</a></h1><p><img src="http://p3alsaatj.bkt.clouddn.com/20180209102936_jv4owo_Screenshot.jpeg" alt=""></p><h1 id="脚本增强：Tampermonkey"><a href="#脚本增强：Tampermonkey" class="headerlink" title="脚本增强：Tampermonkey"></a>脚本增强：<a href="https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo" target="_blank" rel="noopener">Tampermonkey</a></h1><p><img src="http://p3alsaatj.bkt.clouddn.com/20180209102945_MAOC9H_Screenshot.jpeg" alt=""></p><h1 id="脚本注入：Script-Injector"><a href="#脚本注入：Script-Injector" class="headerlink" title="脚本注入：Script Injector"></a>脚本注入：<a href="https://chrome.google.com/webstore/detail/script-injector/fddnddnolonllcgfbenaloajnbhebmob" target="_blank" rel="noopener">Script Injector</a></h1><p><img src="http://p3alsaatj.bkt.clouddn.com/20180209102956_mL46rn_Screenshot.jpeg" alt=""></p><h1 id="键步如飞：Vimium"><a href="#键步如飞：Vimium" class="headerlink" title="键步如飞：Vimium"></a><code>键</code>步如飞：<a href="https://chrome.google.com/webstore/detail/vimium/dbepggeogbaibhgnhhndojpepiihcmeb" target="_blank" rel="noopener">Vimium</a></h1><p><img src="http://p3alsaatj.bkt.clouddn.com/20180209103007_0v2dJn_Screenshot.jpeg" alt=""></p><h1 id="Vue开发利器：Vue-js-devtools"><a href="#Vue开发利器：Vue-js-devtools" class="headerlink" title="Vue开发利器：Vue.js devtools"></a>Vue开发利器：<a href="https://chrome.google.com/webstore/detail/vuejs-devtools/nhdogjmejiglipccpnnnanhbledajbpd" target="_blank" rel="noopener">Vue.js devtools</a></h1><p><img src="http://p3alsaatj.bkt.clouddn.com/20180209103018_luGAzT_Screenshot.jpeg" alt=""></p><h1 id="前端资讯：掘金"><a href="#前端资讯：掘金" class="headerlink" title="前端资讯：掘金"></a>前端资讯：<a href="https://chrome.google.com/webstore/detail/%E6%8E%98%E9%87%91/lecdifefmmfjnjjinhaennhdlmcaeeeb" target="_blank" rel="noopener">掘金</a></h1><p><img src="http://p3alsaatj.bkt.clouddn.com/20180209103029_AnNeZb_Screenshot.jpeg" alt=""></p><h1 id="让不支持markdown的富文本编辑器支持markdown-Markdown-Here"><a href="#让不支持markdown的富文本编辑器支持markdown-Markdown-Here" class="headerlink" title="让不支持markdown的富文本编辑器支持markdown: Markdown Here"></a>让不支持markdown的富文本编辑器支持markdown: <a href="https://chrome.google.com/webstore/detail/markdown-here/elifhakcjgalahccnjkneoccemfahfoa?hl=zh-CN" target="_blank" rel="noopener">Markdown Here</a></h1><p><img src="http://p3alsaatj.bkt.clouddn.com/20180209103039_VyOf1S_Screenshot.jpeg" alt=""></p><h1 id="多标签页时，自动释放内存，开100个标签页也毫无压力：The-Great-Suspender"><a href="#多标签页时，自动释放内存，开100个标签页也毫无压力：The-Great-Suspender" class="headerlink" title="多标签页时，自动释放内存，开100个标签页也毫无压力：The Great Suspender"></a>多标签页时，自动释放内存，开100个标签页也毫无压力：<a href="https://chrome.google.com/webstore/detail/the-great-suspender/klbibkeccnjlkjkiokjodocebajanakg?hl=zh-CN" target="_blank" rel="noopener">The Great Suspender</a></h1><p><img src="http://p3alsaatj.bkt.clouddn.com/20180209103052_gRlB6Y_Screenshot.jpeg" alt=""></p><h1 id="接口测试：Restlet-Client-REST-API-Testing"><a href="#接口测试：Restlet-Client-REST-API-Testing" class="headerlink" title="接口测试：Restlet Client - REST API Testing"></a>接口测试：<a href="https://chrome.google.com/webstore/detail/restlet-client-rest-api-t/aejoelaoggembcahagimdiliamlcdmfm?hl=en-US" target="_blank" rel="noopener">Restlet Client - REST API Testing</a></h1><p>restlet Client和post man功能差不多，restlet更轻量，只在新开一个标签页。postman 需要打开一个app。</p><p><img src="http://p3alsaatj.bkt.clouddn.com/20180209103104_yP6yN2_Screenshot.jpeg" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;广告拦截：AdBlock&quot;&gt;&lt;a href=&quot;#广告拦截：AdBlock&quot; class=&quot;headerlink&quot; title=&quot;广告拦截：AdBlock&quot;&gt;&lt;/a&gt;广告拦截：&lt;a href=&quot;https://chrome.google.com/webstore/d
      
    
    </summary>
    
    
      <category term="浏览器插件" scheme="https://wdd.js.org/tags/%E6%B5%8F%E8%A7%88%E5%99%A8%E6%8F%92%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>tcp-high-recv-q-or-send-q-reasons</title>
    <link href="https://wdd.js.org/tcp-high-recv-q-or-send-q-reasons.html"/>
    <id>https://wdd.js.org/tcp-high-recv-q-or-send-q-reasons.html</id>
    <published>2018-02-08T13:58:31.000Z</published>
    <updated>2018-02-09T01:20:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><ul><li><a href="https://stackoverflow.com/questions/34108513/what-is-the-reason-for-a-high-recv-q-of-a-tcp-connection" target="_blank" rel="noopener">What is the reason for a high Recv-Q of a TCP connection?</a></li><li><a href="https://unix.stackexchange.com/questions/100913/tcp-buffers-keep-filling-up-recv-q-full-named-unresponsive" target="_blank" rel="noopener">TCP buffers keep filling up (Recv-Q full): named unresponsive</a></li><li><a href="http://blog.51cto.com/191274/1592101" target="_blank" rel="noopener">linux探秘:netstat中Recv-Q 深究</a></li><li><a href="http://blog.51cto.com/191274/1592101" target="_blank" rel="noopener">深入剖析 Socket——TCP 通信中由于底层队列填满而造成的死锁问题</a></li><li><a href="http://blog.csdn.net/sjin_1314/article/details/9853163" target="_blank" rel="noopener">netstat Recv-Q和Send-Q</a></li><li><a href="http://wiki.jikexueyuan.com/project/java-socket/socket-advanced.html" target="_blank" rel="noopener">深入剖析 Socket——数据传输的底层实现</a></li><li><a href="https://stackoverflow.com/questions/36466744/use-of-recv-q-and-send-q" target="_blank" rel="noopener">Use of Recv-Q and Send-Q</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;参考文献&quot;&gt;&lt;a href=&quot;#参考文献&quot; class=&quot;headerlink&quot; title=&quot;参考文献&quot;&gt;&lt;/a&gt;参考文献&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/34108513/wh
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>一些关于Hexo的疑问</title>
    <link href="https://wdd.js.org/something-you-may-dont-konw-about-hexo.html"/>
    <id>https://wdd.js.org/something-you-may-dont-konw-about-hexo.html</id>
    <published>2018-02-08T13:29:18.000Z</published>
    <updated>2018-02-08T13:38:08.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://p3alsaatj.bkt.clouddn.com/20180208213207_ah8hTV_Jietu20180208-213152.jpeg" alt=""></p><a id="more"></a><h1 id="文件名重复了怎么办？"><a href="#文件名重复了怎么办？" class="headerlink" title="文件名重复了怎么办？"></a>文件名重复了怎么办？</h1><p>使用<code>hexo new filename</code>命令用来新建一个文章，但是如果你创建文章时，已经存在了同样的一个文件名，那么Hexo会怎样处理？</p><ol><li>报错</li><li>覆盖之前的文章</li><li>在文件名后面加个序号</li></ol><p>实际上Hexo使用第三个方式来处理，例如</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 执行下面命令两次，会产生两个文件 filename.md, filename-1.md</span></span><br><span class="line">hexo <span class="keyword">new</span> <span class="type">filename</span></span><br><span class="line"><span class="type">hexo</span> <span class="keyword">new</span> <span class="type">filename</span></span><br></pre></td></tr></table></figure><p>所以，在创建文章时，你根本不需要考虑文章重名的事情，Hexo会自动帮你加上序号后处理。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://p3alsaatj.bkt.clouddn.com/20180208213207_ah8hTV_Jietu20180208-213152.jpeg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="hexo" scheme="https://wdd.js.org/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo NexT主题设置封面的方法</title>
    <link href="https://wdd.js.org/hexo-next-theme-set-cover.html"/>
    <id>https://wdd.js.org/hexo-next-theme-set-cover.html</id>
    <published>2018-02-08T13:09:50.000Z</published>
    <updated>2018-02-08T13:26:22.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://p3alsaatj.bkt.clouddn.com/20180208212257_BZZjA5_1200px-The_Great_Wave_off_Kanagawa.jpeg" alt=""></p><p>默认情况下NexT主题的首页，每篇文章几乎都会全部渲染出来。这是这样来看，首页就会变得非常长，不利于快速浏览。</p><p>而我希望首页可以尽量缩短，每个文章只需要稍微一点介绍，如果有图片，就设置一张封面就好了。</p><p>下面是具体的设置步骤</p><a id="more"></a><h1 id="Next主题设置摘要"><a href="#Next主题设置摘要" class="headerlink" title="Next主题设置摘要"></a>Next主题设置摘要</h1><p>filename: themes/next/_config.yml，将auto_excerpt.enable设置成true，length属性表示摘要的字数限制。<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">auto_excerpt:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  length:</span> <span class="number">150</span></span><br></pre></td></tr></table></figure></p><h1 id="文章具体设置"><a href="#文章具体设置" class="headerlink" title="文章具体设置"></a>文章具体设置</h1><p>在 <code>&lt;!-- more --&gt;</code>上面放一张图片就可以了</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Hexo</span> <span class="string">NexT主题设置封面的方法</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2018</span><span class="bullet">-02</span><span class="bullet">-08</span> <span class="number">21</span><span class="string">:09:50</span></span><br><span class="line"><span class="attr">tags:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">hexo</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"></span><br><span class="line"><span class="string">![](http://p3alsaatj.bkt.clouddn.com/20180208212257_BZZjA5_1200px-The_Great_Wave_off_Kanagawa.jpeg)</span></span><br><span class="line"></span><br><span class="line"><span class="string">文章摘要</span></span><br><span class="line"></span><br><span class="line"><span class="string">&lt;!--</span> <span class="string">more</span> <span class="bullet">--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="string">文章正文</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://p3alsaatj.bkt.clouddn.com/20180208212257_BZZjA5_1200px-The_Great_Wave_off_Kanagawa.jpeg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;默认情况下NexT主题的首页，每篇文章几乎都会全部渲染出来。这是这样来看，首页就会变得非常长，不利于快速浏览。&lt;/p&gt;
&lt;p&gt;而我希望首页可以尽量缩短，每个文章只需要稍微一点介绍，如果有图片，就设置一张封面就好了。&lt;/p&gt;
&lt;p&gt;下面是具体的设置步骤&lt;/p&gt;
    
    </summary>
    
    
      <category term="hexo" scheme="https://wdd.js.org/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>寻一片净土 书写我自己的芳华</title>
    <link href="https://wdd.js.org/write-blog-belong-myself.html"/>
    <id>https://wdd.js.org/write-blog-belong-myself.html</id>
    <published>2018-02-08T12:18:42.000Z</published>
    <updated>2018-02-08T13:07:58.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://p3alsaatj.bkt.clouddn.com/20180208202159_i9HYlT_1-1G024112343148.jpeg" alt=""></p><a id="more"></a><p>我曾经在csdn上写过博客</p><p>后来因为csdn的广告太多，我就不再csdn上写了</p><p>我也曾在博客园上写过博客</p><p>后来因为博客园上对markdown支持不够好，所以我也放弃了</p><p>我也曾在segmentfault上写过博客</p><p>它上面的markdown编辑器也还好用</p><p>但是有时候不知道是什么原因</p><p>它的markdown编辑器有时候太卡了，而且经常会出现上传图片失败</p><p>最让我不能容忍的是</p><p>你在SegmentFault删除自己的博客，那其实是逻辑删除</p><p>别人还是可以通过连接去访问的</p><p>而且SegmentFault上的广告也开始慢慢变多了</p><p>而且SegmentFault上对文章的限制也是比较多的</p><p>大树底下好乘凉，但是你的流量也是需要给大树的</p><p>互联网时代，看似任何服务都是免费的</p><p>其实免费的才是最贵的</p><p>你用了别人的服务，无论如何，你总要提供给别人价值</p><p>无论怎样，你总要做出你的回报</p><p>但是，无论如何，我总是需要一个更加独立的领地</p><p>她可以完全属于我</p><p>无论是野草还是野花</p><p>无论是杨柳依依还是雨雪霏霏</p><p>我都可以放肆潇洒</p><p>我需要一片净土</p><p>来书写我自己的芳华</p><p><img src="http://p3alsaatj.bkt.clouddn.com/20180208203548_bMcwuP_平凡之路.jpeg" alt=""></p><blockquote><p>所以，最近一直在把SegmentFault上的文章搬迁到github pages上</p><p>另外图片全部存在七牛云上</p><p>使用hexo next主题，做一个完全自主的静态博客</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://p3alsaatj.bkt.clouddn.com/20180208202159_i9HYlT_1-1G024112343148.jpeg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="思想者" scheme="https://wdd.js.org/tags/%E6%80%9D%E6%83%B3%E8%80%85/"/>
    
  </entry>
  
</feed>

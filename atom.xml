<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>洞香春</title>
  
  <subtitle>洞香春以名士荟萃、谈论国事、交流思想而著称于当时列国 --《大秦帝国》</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://wdd.js.org/"/>
  <updated>2018-02-11T06:20:42.000Z</updated>
  <id>https://wdd.js.org/</id>
  
  <author>
    <name>王端端</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>mac vscode 更新失败 Permission denied解决办法</title>
    <link href="https://wdd.js.org/mac-vscode-update-permission-denied.html"/>
    <id>https://wdd.js.org/mac-vscode-update-permission-denied.html</id>
    <published>2018-02-11T06:20:01.000Z</published>
    <updated>2018-02-11T06:20:42.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0-现象"><a href="#0-现象" class="headerlink" title="0. 现象"></a>0. 现象</h1><p><code>Could not create temporary directory: Permission denied</code></p><h1 id="1-问题起因"><a href="#1-问题起因" class="headerlink" title="1. 问题起因"></a>1. 问题起因</h1><p>在 <code>/Users/username/Library/Caches/</code>目录下，有以下两个文件， 可以看到，他们两个的用户是不一样的，一个是<code>root</code>一个<code>username</code>, 一般来说，我是以<code>username</code>来使用我的mac的。就是因为这两个文件的用户不一样，导致了更新失败。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">drwxr-xr-x</span>   6 <span class="selector-tag">username</span>  <span class="selector-tag">staff</span>   204<span class="selector-tag">B</span> <span class="selector-tag">Jan</span> 17 20<span class="selector-pseudo">:33</span> <span class="selector-tag">com</span><span class="selector-class">.microsoft</span><span class="selector-class">.VSCode</span></span><br><span class="line"><span class="selector-tag">drwxr--r--</span>   2 <span class="selector-tag">root</span>    <span class="selector-tag">staff</span>    68<span class="selector-tag">B</span> <span class="selector-tag">Dec</span> 17 13<span class="selector-pseudo">:51</span> <span class="selector-tag">com</span><span class="selector-class">.microsoft</span><span class="selector-class">.VSCode</span><span class="selector-class">.ShipIt</span></span><br></pre></td></tr></table></figure><h1 id="2-解决方法"><a href="#2-解决方法" class="headerlink" title="2. 解决方法"></a>2. 解决方法</h1><p><code>注意</code>： 先把vscode 完全关闭</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. 这一步是需要输入密码的</span></span><br><span class="line">sudo chown <span class="variable">$USER</span> ~/Library/Caches/com<span class="selector-class">.microsoft</span><span class="selector-class">.VSCode</span><span class="selector-class">.ShipIt</span>/</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 这一步是不需要输入密码的, 如果不进行第一步，第二步会报错</span></span><br><span class="line">sudo chown <span class="variable">$USER</span> ~/Library/Caches/com<span class="selector-class">.microsoft</span><span class="selector-class">.VSCode</span><span class="selector-class">.ShipIt</span><span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">// 3. 更新xattr</span></span><br><span class="line"><span class="comment">xattr -dr com.apple.quarantine /Applications/Visual\ Studio\ Code.app</span></span><br></pre></td></tr></table></figure><h1 id="3-打开vscode"><a href="#3-打开vscode" class="headerlink" title="3. 打开vscode"></a>3. 打开vscode</h1><p>Code &gt; Check for Updates, 点击之后，你会发现<code>Check for Updates</code>已经变成灰色了，那么你需要稍等片刻，马上就可以更新，之后会跳出提示，让你重启vscode, 然后重启一下vscode, 就ok了。</p><h1 id="4-参考"><a href="#4-参考" class="headerlink" title="4. 参考"></a>4. 参考</h1><ul><li><a href="https://github.com/Microsoft/vscode/issues/7426" target="_blank" rel="noopener">joaomoreno commented on Feb 7, 2017 •  edited</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;0-现象&quot;&gt;&lt;a href=&quot;#0-现象&quot; class=&quot;headerlink&quot; title=&quot;0. 现象&quot;&gt;&lt;/a&gt;0. 现象&lt;/h1&gt;&lt;p&gt;&lt;code&gt;Could not create temporary directory: Permission denie
      
    
    </summary>
    
    
      <category term="mac" scheme="https://wdd.js.org/tags/mac/"/>
    
      <category term="vscode" scheme="https://wdd.js.org/tags/vscode/"/>
    
  </entry>
  
  <entry>
    <title>搭建一个舒心高效的windows + shell 工作环境</title>
    <link href="https://wdd.js.org/confortable-windows-shell-env.html"/>
    <id>https://wdd.js.org/confortable-windows-shell-env.html</id>
    <published>2018-02-11T06:16:54.000Z</published>
    <updated>2018-02-11T06:18:59.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-ConEmu命令行：-漂亮的不像实力派"><a href="#1-ConEmu命令行：-漂亮的不像实力派" class="headerlink" title="1 ConEmu命令行： 漂亮的不像实力派"></a>1 ConEmu命令行： 漂亮的不像实力派</h2><p>我曾这篇文章中<a href="https://wdd.js.org/windows-powerful-tools.html">《自从装了windows神器，再也不用羡慕mac了》</a>，介绍过好几个命令行神器。</p><p>里面几个命令行我都有用过，但是最让我喜欢的是<a href="https://github.com/Maximus5/ConEmu" target="_blank" rel="noopener">ConEmu</a>，先说说它的特点。</p><ul><li>平滑的窗口大小调整</li><li>标签和分裂（窗格）</li><li>窗口字体消除锯齿：标准，清除类型，禁用</li><li>快速的复制粘贴</li><li>可切换使用shell或者dos, 过着git bash等</li></ul><p><code>你可以看看它完美的侧颜。</code></p><p><img src="https://github.com/Maximus5/ConEmu/wiki/ConEmuSplits.png" alt=""></p><h2 id="2-gow-shell工具箱-身材苗条却又肌肉发达"><a href="#2-gow-shell工具箱-身材苗条却又肌肉发达" class="headerlink" title="2 gow shell工具箱: 身材苗条却又肌肉发达"></a>2 gow shell工具箱: 身材苗条却又肌肉发达</h2><p>我曾经想过，如果能在直接windows上用linux的<code>grep</code>,  <code>curl</code>等命令，那该多好啊！<br>我也曾试过<a href="https://zh.wikipedia.org/zh-cn/Cygwin" target="_blank" rel="noopener">Cygwin</a>, 但是那<code>哥斯拉</code>般大小的体积让我只能望洋兴叹。</p><p>曾几何时，我遇到了Gow，她10MB版苗条的身材，却又能满足你80%的日常工作的需要。</p><p>当别人还有notepad++，慢慢吞吞加载一个30MB的日志的时候，你用<code>grep</code>命令，已经搜索到了想要的结果。所谓：<code>天下武功，无坚不摧，唯快不破</code>， 就是这个感觉。</p><p><a href="https://github.com/bmatzelle/gow" target="_blank" rel="noopener">Gow（Gnu On Windows）</a>是Cygwin的轻量级替代品。 它使用了一个方便的Windows安装程序，安装了大约130个非常有用的开源UNIX应用程序，编译为本机win32二进制文件。 它被设计成尽可能小，大约10 MB，而Cygwin可以运行在100 MB以上，具体取决于选项。</p><p>这里有一些来自Gow用户的引用：</p><blockquote><p>“Gow是使Windows可以使用/可用的少数几件事之一”</p><p>“我不断地使用Gow，太棒了。”</p><p>“我只是想让你知道，GOW Suite非常棒 - 它比Cygwin工具轻得多，而且非常有用。</p></blockquote><h2 id="3-f-lux：我轻轻看一眼，这暖暖的感觉，她都有"><a href="#3-f-lux：我轻轻看一眼，这暖暖的感觉，她都有" class="headerlink" title="3 f.lux：我轻轻看一眼，这暖暖的感觉，她都有"></a>3 f.lux：我轻轻看一眼，这暖暖的感觉，她都有</h2><p>作为一个程序员，免不了长时间的面对电脑屏幕。结果经常会眼睛难受。然后我尝试了一下<a href="https://justgetflux.com/" target="_blank" rel="noopener">f.lux</a>,  装上之后，配置了一下时区， 电脑屏幕马上变成屎黄色。抱着试试看的心态，我用了几天，几天过后，我实在受不了这颜色了。 然后就卸载了，没过多上时间，我觉得有点不对劲，不舒服。总是感觉缺点什么。 </p><p>就放佛 张韶涵的歌《遗失的美好》：<code>有些人说不清哪里好 但就是谁都替代不了</code>,  然后我就又装上了f.lux。在我的影响下，我附近的几个小伙伴，也都装上了<code>f.lux</code>。 后来我换了mac, 但是我也装了f.lux。</p><p><img src="https://justgetflux.com/images/flux-windows.jpg" alt=""></p><blockquote><p>f.lux让你的电脑屏幕看起来就像你所在的房间一样。 当日落时，它使您的电脑看起来像你的室内灯。 在早上，它使事情看起来像阳光。</p><p>告诉f.lux你有什么样的照明，以及你住的地方。 然后忘了它。 f.lux会自动完成剩下的工作。</p></blockquote><h2 id="4-visual-studio-code-最好用的轻量编辑器"><a href="#4-visual-studio-code-最好用的轻量编辑器" class="headerlink" title="4 visual studio code: 最好用的轻量编辑器"></a>4 visual studio code: 最好用的轻量编辑器</h2><ul><li>颜值很高</li><li>微软开源的产品，质量保证</li><li>集成git</li><li>插件很多，下载很快</li><li>免费</li><li>体积很小，占用内存很小，启动很快</li></ul><p><img src="http://p3alsaatj.bkt.clouddn.com/20180201172157_gz0qsT_Jietu20180201-172150.jpeg" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-ConEmu命令行：-漂亮的不像实力派&quot;&gt;&lt;a href=&quot;#1-ConEmu命令行：-漂亮的不像实力派&quot; class=&quot;headerlink&quot; title=&quot;1 ConEmu命令行： 漂亮的不像实力派&quot;&gt;&lt;/a&gt;1 ConEmu命令行： 漂亮的不像实力派&lt;/
      
    
    </summary>
    
    
      <category term="windows" scheme="https://wdd.js.org/tags/windows/"/>
    
      <category term="shell" scheme="https://wdd.js.org/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>IE11 0x2ee4 bug 以及类似问题解决方法</title>
    <link href="https://wdd.js.org/ie11-0X2ee4-bug.html"/>
    <id>https://wdd.js.org/ie11-0X2ee4-bug.html</id>
    <published>2018-02-11T06:12:19.000Z</published>
    <updated>2018-02-11T06:15:29.000Z</updated>
    
    <content type="html"><![CDATA[<p><code>一千个IE浏览器访问同一个页面，可能报一千种错误</code>。前端激进派对IE恨得牙痒痒，但是无论你爱，或者不爱，IE就在那里，不来不去。</p><p>一些银行，以及政府部门，往往都是指定必须使用IE浏览器。所以，一些仅在IE浏览器上出现的问题。总结起来问题的原因很简单：<code>IE的配置不正确</code></p><p>下面就将一个我曾经遇到的问题: <code>IE11 0x2ee4</code>， 以及其他的问题的解决方案</p><h1 id="1-IE11-SCRIPT7002-XMLHttpRequest-网络错误-0x2ee4"><a href="#1-IE11-SCRIPT7002-XMLHttpRequest-网络错误-0x2ee4" class="headerlink" title="1. IE11 SCRIPT7002: XMLHttpRequest: 网络错误 0x2ee4"></a>1. IE11 SCRIPT7002: XMLHttpRequest: 网络错误 0x2ee4</h1><blockquote><p>背景介绍：在一个HTTPS域向另外一个HTTPS域发送跨域POTST请求时</p></blockquote><p>这个问题在浏览器的输出内容如下，怪异的是，并不是所有IE11都会报这个错误。</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">SCRIPT7002:</span> <span class="string">XMLHttpRequest:</span> 网络错误 <span class="number">0x2ee4</span>, 由于出现错误 <span class="number">00002</span>ee4 而导致此项操作无法完成</span><br></pre></td></tr></table></figure><p>stackoverflow上有个答案，它的思路是：<code>在post请求发送之前，先进行一次get操作</code> 这个方式我试过，是可行的。但是深层次的原因我不是很明白。</p><p><img src="http://p3alsaatj.bkt.clouddn.com/20180211141321_kcU1Mh_Screenshot.jpeg" alt=""></p><p>然而真相总有大白的一天，其实深层次的原因是，IE11的配置。</p><p>去掉检查证书吊销的的检查，解决0x2ee4的问题</p><p><code>解决方法</code></p><ul><li>去掉check for server certificate revocation*， 也有可能你那边是中文翻译的：叫检查服务器证书是否已吊销</li><li>去掉检查发型商证书是否已吊销</li><li>点击确定</li><li>重启计算机</li></ul><p><img src="http://p3alsaatj.bkt.clouddn.com/20180211141332_EzU6Hs_Screenshot.jpeg" alt=""></p><h1 id="2-其他常规设置"><a href="#2-其他常规设置" class="headerlink" title="2 其他常规设置"></a>2 其他常规设置</h1><h2 id="2-1-去掉兼容模式，-使用Edge文档模式"><a href="#2-1-去掉兼容模式，-使用Edge文档模式" class="headerlink" title="2.1 去掉兼容模式， 使用Edge文档模式"></a>2.1 去掉兼容模式， 使用Edge文档模式</h2><p><img src="http://p3alsaatj.bkt.clouddn.com/20180211141344_ctLchE_Screenshot.jpeg" alt=""></p><p>下图中红色框里的按钮也要取消勾选<br><img src="http://p3alsaatj.bkt.clouddn.com/20180211141353_182pMj_Screenshot.jpeg" alt=""></p><h2 id="2-2-有些使用activeX，还是需要检查是否启用的"><a href="#2-2-有些使用activeX，还是需要检查是否启用的" class="headerlink" title="2.2 有些使用activeX，还是需要检查是否启用的"></a>2.2 有些使用activeX，还是需要检查是否启用的</h2><p><img src="http://p3alsaatj.bkt.clouddn.com/20180211141403_eM2ajd_Screenshot.jpeg" alt=""><br><img src="http://p3alsaatj.bkt.clouddn.com/20180211141414_8gyYUu_Screenshot.jpeg" alt=""><br><img src="http://p3alsaatj.bkt.clouddn.com/20180211141427_CeMrwH_Screenshot.jpeg" alt=""></p><h2 id="2-3-允许跨域"><a href="#2-3-允许跨域" class="headerlink" title="2.3 允许跨域"></a>2.3 允许跨域</h2><p>如果你的接口跨域了，还要检查浏览器是否允许跨域，否则浏览器可能默认就禁止跨域的</p><p>设置方法 </p><ol><li>internet选项 </li><li>安全 </li><li>自定义级别 </li><li>启用通过跨域访问数据源 </li><li>确定 </li><li>然后重启电脑</li></ol><p><img src="http://p3alsaatj.bkt.clouddn.com/20180211141443_fV3amH_Screenshot.jpeg" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;code&gt;一千个IE浏览器访问同一个页面，可能报一千种错误&lt;/code&gt;。前端激进派对IE恨得牙痒痒，但是无论你爱，或者不爱，IE就在那里，不来不去。&lt;/p&gt;
&lt;p&gt;一些银行，以及政府部门，往往都是指定必须使用IE浏览器。所以，一些仅在IE浏览器上出现的问题。总结起来问题
      
    
    </summary>
    
    
      <category term="IE11" scheme="https://wdd.js.org/tags/IE11/"/>
    
      <category term="12004" scheme="https://wdd.js.org/tags/12004/"/>
    
      <category term="ajax" scheme="https://wdd.js.org/tags/ajax/"/>
    
  </entry>
  
  <entry>
    <title>Mac版：上传图片到远程图床哪家强？</title>
    <link href="https://wdd.js.org/tool-upload-img-to-cloud.html"/>
    <id>https://wdd.js.org/tool-upload-img-to-cloud.html</id>
    <published>2018-02-11T06:09:09.000Z</published>
    <updated>2018-02-11T06:11:17.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>markdown写文档虽然如行云流水，但是一旦需要引入图片了。往往需要四五步操作，如果图片仅仅保存在本地，那么复制markdown时，图片路径往往都不对了，还要重新上传一遍图片，很是麻烦。</p></blockquote><p>因此，<code>最好把图片直接上传到图床上</code>，然后通过公网链接来引入图片。图床选择上，我选择七牛云。</p><p>我在网上找到了3个不错的工具，在此记录一下。</p><h1 id="1-三个工具分析一览"><a href="#1-三个工具分析一览" class="headerlink" title="1. 三个工具分析一览"></a>1. 三个工具分析一览</h1><p>这些工具在上传图片成功后，会把链接保存在剪贴板中，在markdown文件中只需要粘贴一下就可以了。</p><table><thead><tr><th>名称</th><th>收费标准</th><th>优点</th><th>缺点</th><th>推荐指数</th><th>说明</th><th>下载地址</th></tr></thead><tbody><tr><td>ipic</td><td>50元/年</td><td>支持很多的云服务，压缩，拖拽上传</td><td>死贵, 免费版只能用新浪图床，图片很可能会丢失</td><td><code>A</code></td><td>功能很多，价钱死贵</td><td>可通过mac app store 下载</td></tr><tr><td>UCQCloud</td><td>免费</td><td>免费，支持压缩，拖拽上传，截图上传</td><td>仅支持七牛，服务器仅支持华东和华北</td><td><code>AAA</code></td><td>免费，功能够用</td><td><a href="https://link.jianshu.com/?t=http://7xr7vj.com1.z0.glb.clouddn.com/UCQCloud1.3.3.dmg" target="_blank" rel="noopener">UCQCloud1.3.3.dmg</a></td></tr><tr><td>cuImage</td><td>终身1元</td><td>剪贴板上传，压缩上传，拖拽上传，快捷键上传，自动把链接转成markdown的形式</td><td>仅支持七牛</td><td><code>AAAA</code></td><td>cuImage的压缩率要比UCQCloud高很多</td><td>可通过mac app store 下载</td></tr></tbody></table><p>总体来说：<code>如果你用七牛图床，cuImage是性价比最高, 用户体验最好的</code></p><h1 id="2-三个工具操作截图与简介"><a href="#2-三个工具操作截图与简介" class="headerlink" title="2. 三个工具操作截图与简介"></a>2. 三个工具操作截图与简介</h1><h1 id="3-cuImage"><a href="#3-cuImage" class="headerlink" title="3. cuImage"></a>3. cuImage</h1><ul><li>图片上传完成后自动复制URL。</li><li>在“上传历史”中查看已上传图片。</li><li>批量上传图片。</li><li>通过截图或复制上传图片。</li><li>通过拖拽上传图片。</li><li>通过”服务“菜单上传图片。</li><li>通过全局快捷键上传图片。</li><li>上传之前压缩图片。</li><li>支持BMP/JPEG/PNG/GIF/TIFF等多种文件格式。</li><li>只支持七牛云，已兼容七牛云华东、华北、华南及北美的存储区域。</li></ul><p><img src="https://camo.githubusercontent.com/16d25db3e16f70c864c6794d565bd46535d91944/687474703a2f2f6f68636f71626638652e626b742e636c6f7564646e2e636f6d2f32303137303231303136303432325f30724f3472385f6375496d61676544656d6f2e676966" alt=""></p><h1 id="4-UCQCloud"><a href="#4-UCQCloud" class="headerlink" title="4. UCQCloud"></a>4. UCQCloud</h1><p>1、文件上传(带上传进度)</p><ul><li>支持软件面板拖放、选择文件(任意二进制文件)上传</li><li>支持状态栏粘贴板图片上传</li><li><p>支持状态栏拖放文件上传<br>2、图片高质量压缩</p></li><li><p>本地图片上传使用Tinypng在线高质量无损压缩</p></li><li>粘贴板图片上传使用开源库pngquant压缩</li><li>正常情况压缩节省50%以上空间,大幅提高博客图片加载速度，节约网盘存储空间。<br>3、上传历史记录管理</li><li>文件预览查看，删除，拷贝上传外链地址等</li></ul><p>4、支持文件夹批量处理</p><ul><li>直接拖入文件夹，或文件批量处理</li></ul><p>作者：huluo666<br>链接：<a href="https://www.jianshu.com/p/694dad59f20c" target="_blank" rel="noopener">https://www.jianshu.com/p/694dad59f20c</a><br>來源：简书<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p><p><img src="http://7xr7vj.com1.z0.glb.clouddn.com/%E7%B2%98%E8%B4%B4%E6%9D%BF%E4%B8%8A%E4%BC%A0.gif" alt=""><br><img src="https://upload-images.jianshu.io/upload_images/328273-2ff220978053e895.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/700" alt=""></p><h1 id="5-ipic"><a href="#5-ipic" class="headerlink" title="5. ipic"></a>5. ipic</h1><p>图床神器 iPic 可自动上传图片、保存 Markdown 链接，给你前所未有的插图体验。</p><ul><li>上传前压缩图片</li><li>通过拖拽上传图片</li><li>通过服务上传图片 [Command + U…</li></ul><p><img src="http://p394yuy0c.bkt.clouddn.com/20180128190724_D3rHNM_Screen%20Shot%202018-01-28%20at%207.06.56%20PM.jpeg" alt=""></p><h1 id="6-参考文献"><a href="#6-参考文献" class="headerlink" title="6. 参考文献"></a>6. 参考文献</h1><ul><li><a href="https://toolinbox.net/iPic/" target="_blank" rel="noopener">iPic - 图床神器</a></li><li><a href="https://www.jianshu.com/p/694dad59f20c" target="_blank" rel="noopener">Mac七牛图床与文件批量上传工具: UCQCloud1.3.3</a></li><li><a href="https://github.com/hulizhen/cuImage" target="_blank" rel="noopener">cuImage - 图床利器</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;markdown写文档虽然如行云流水，但是一旦需要引入图片了。往往需要四五步操作，如果图片仅仅保存在本地，那么复制markdown时，图片路径往往都不对了，还要重新上传一遍图片，很是麻烦。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;因此，&lt;code
      
    
    </summary>
    
    
      <category term="工具" scheme="https://wdd.js.org/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>读书笔记 凯文 凯利 《失控》</title>
    <link href="https://wdd.js.org/booknote-out-of-control.html"/>
    <id>https://wdd.js.org/booknote-out-of-control.html</id>
    <published>2018-02-09T14:45:17.000Z</published>
    <updated>2018-02-09T15:21:11.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://p3alsaatj.bkt.clouddn.com/20180209225401_xDhao1_IMG_2666.jpeg" alt=""><br><a id="more"></a></p><p>失控这本书在刚开始看时，立马让我联想到黑客帝国里人被种植在营养液中的情形，我不太清楚，这本书和这个电影之间有什么联系。</p><p>这本书真实能让人脑洞大开。</p><blockquote><p>人造与天生的联姻正是本书的主题</p></blockquote><p>读到这里，我立马有一个预想：多年以后，会有一家公司，把人的思想从肉体从抽取出来。让人的思想，脱离肉体而存在。</p><blockquote><p>蜂群思维 分布式管理</p></blockquote><p>有点像SVN之与GIT</p><blockquote><p>蜂群思维的神奇之处，看似没有一只蜜蜂在控制它。但是有一只看不见的手，在控制着整个群体</p><p>低层级的存在无法推断出高层级的复杂性</p></blockquote><p>就像，tcp无法推断出HTTP协议</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://p3alsaatj.bkt.clouddn.com/20180209225401_xDhao1_IMG_2666.jpeg&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="读书笔记" scheme="https://wdd.js.org/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
      <category term="未完成" scheme="https://wdd.js.org/tags/%E6%9C%AA%E5%AE%8C%E6%88%90/"/>
    
      <category term="失控" scheme="https://wdd.js.org/tags/%E5%A4%B1%E6%8E%A7/"/>
    
  </entry>
  
  <entry>
    <title>读书笔记-大前研一 专业主义</title>
    <link href="https://wdd.js.org/booknote-professionalism.html"/>
    <id>https://wdd.js.org/booknote-professionalism.html</id>
    <published>2018-02-09T14:33:54.000Z</published>
    <updated>2018-02-10T14:45:14.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://p3alsaatj.bkt.clouddn.com/20180209223906_Nh00QV_Csad9HyVUAABc1P.jpeg" alt=""></p><a id="more"></a><h1 id="1-你够专业吗？"><a href="#1-你够专业吗？" class="headerlink" title="1. 你够专业吗？"></a>1. 你够专业吗？</h1><blockquote><p>p20</p></blockquote><ol><li>控制情绪，理性行动</li><li>专业知识，专业技能</li><li>客户第一</li><li>好奇心</li><li>进取心</li><li>严格遵守记录</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://p3alsaatj.bkt.clouddn.com/20180209223906_Nh00QV_Csad9HyVUAABc1P.jpeg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="读书笔记" scheme="https://wdd.js.org/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
      <category term="主页主义" scheme="https://wdd.js.org/tags/%E4%B8%BB%E9%A1%B5%E4%B8%BB%E4%B9%89/"/>
    
      <category term="未完成" scheme="https://wdd.js.org/tags/%E6%9C%AA%E5%AE%8C%E6%88%90/"/>
    
  </entry>
  
  <entry>
    <title>Vue+ElementUI 手把手教你做一个audio组件</title>
    <link href="https://wdd.js.org/vue-elementui-audio-component.html"/>
    <id>https://wdd.js.org/vue-elementui-audio-component.html</id>
    <published>2018-02-09T05:44:13.000Z</published>
    <updated>2018-02-09T05:55:43.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-简介"><a href="#1-简介" class="headerlink" title="1. 简介"></a>1. 简介</h1><h2 id="1-1-相关技术"><a href="#1-1-相关技术" class="headerlink" title="1.1. 相关技术"></a>1.1. 相关技术</h2><ul><li><a href="https://cn.vuejs.org/" target="_blank" rel="noopener">Vue</a></li><li><a href="https://github.com/vuejs/vue-cli" target="_blank" rel="noopener">Vue-cli</a></li><li><a href="http://element-cn.eleme.io/#/zh-CN" target="_blank" rel="noopener">ElementUI</a></li><li><a href="https://yarnpkg.com/lang/zh-hans/" target="_blank" rel="noopener">yarn</a> (之前我用npm, 并使用cnpm的源，但是用了yarn之后，我发现它比cnpm的速度还快，功能更好，我就毫不犹豫选择yarn了)</li><li><a href="https://segmentfault.com/a/1190000009769804" target="_blank" rel="noopener">Audio相关API和事件</a></li></ul><h2 id="1-2-从本教程你会学到什么？"><a href="#1-2-从本教程你会学到什么？" class="headerlink" title="1.2. 从本教程你会学到什么？"></a>1.2. 从本教程你会学到什么？</h2><ul><li><code>Vue单文件组件开发知识</code></li><li><code>Element UI基本用法</code></li><li><code>Audio原生API及Audio相关事件</code></li><li><code>音频播放器的基本原理</code></li><li><code>音频的播放暂停控制</code></li><li><code>更新音频显示时间</code></li><li><code>音频进度条控制与跳转</code></li><li><code>音频音量控制</code></li><li><code>音频播放速度控制</code></li><li><code>音频静音控制</code></li><li><code>音频下载控制</code></li><li><code>个性化配置与排他性播放</code></li><li><code>一点点ES6语法</code></li></ul><h1 id="2-学前准备"><a href="#2-学前准备" class="headerlink" title="2. 学前准备"></a>2. 学前准备</h1><p>基本上不需要什么准备，但是如果你能先看一下Aduio相关API和事件将会更好</p><ul><li><a href="https://wdd.js.org/audio-heart-detail.html">Audio: 如果你愿意一层一层剥开我的心</a></li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/Guide/HTML/Using_HTML5_audio_and_video" target="_blank" rel="noopener">使用 HTML5 音频和视频</a></li></ul><h1 id="3-在线demon"><a href="#3-在线demon" class="headerlink" title="3. 在线demon"></a>3. <a href="https://wangduanduan.github.io/element-audio/" target="_blank" rel="noopener">在线demon</a></h1><p><code>没有在线demo的教程都是耍流氓</code></p><ul><li><a href="https://wangduanduan.github.io/element-audio/" target="_blank" rel="noopener">查看在线demon</a></li><li><a href="https://github.com/wangduanduan/element-audio" target="_blank" rel="noopener">项目地址</a></li></ul><p><img src="http://p3alsaatj.bkt.clouddn.com/20180209134536_j9HvMg_Screenshot.jpeg" alt=""></p><h1 id="4-开始编码"><a href="#4-开始编码" class="headerlink" title="4. 开始编码"></a>4. 开始编码</h1><h1 id="5-项目初始化"><a href="#5-项目初始化" class="headerlink" title="5. 项目初始化"></a>5. 项目初始化</h1><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">➜  <span class="keyword">test</span> vue init webpack element-audio</span><br><span class="line"></span><br><span class="line">  A newer <span class="keyword">version</span> of vue-<span class="keyword">cli</span> is available.</span><br><span class="line"></span><br><span class="line">  latest:    2.9.2</span><br><span class="line">  installed: 2.9.1</span><br><span class="line"></span><br><span class="line">? Project name element-audio</span><br><span class="line">? Project description A Vue.js project</span><br><span class="line">? Author wangdd &lt;wangdd@xxxxxx.com&gt;</span><br><span class="line">? Vue build standalone</span><br><span class="line">? Install vue-router? <span class="keyword">No</span></span><br><span class="line">? <span class="keyword">Use</span> ESLint to lint your code? <span class="keyword">No</span></span><br><span class="line">? <span class="keyword">Set</span> up unit tests <span class="keyword">No</span></span><br><span class="line">? Setup e2e tests with Nightwatch? <span class="keyword">No</span></span><br><span class="line">? Should we <span class="keyword">run</span> `npm install` <span class="keyword">for</span> you after the project has been created? (recommended) npm</span><br><span class="line"></span><br><span class="line">➜  <span class="keyword">test</span> <span class="keyword">cd</span> element-audio </span><br><span class="line">➜  element-audio npm <span class="keyword">run</span> dev</span><br></pre></td></tr></table></figure><p>浏览器打开 <code>http://localhost:8080/</code>, 看到如下界面，说明项目初始化成功</p><p><img src="http://p3alsaatj.bkt.clouddn.com/20180209134627_t78Jqf_Screenshot.jpeg" alt=""></p><h2 id="5-1-安装ElementUI并插入audio标签"><a href="#5-1-安装ElementUI并插入audio标签" class="headerlink" title="5.1. 安装ElementUI并插入audio标签"></a>5.1. 安装ElementUI并插入audio标签</h2><h3 id="5-1-1-安装ElementUI"><a href="#5-1-1-安装ElementUI" class="headerlink" title="5.1.1. 安装ElementUI"></a>5.1.1. <code>安装ElementUI</code></h3><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn <span class="built_in">add</span> <span class="keyword">element</span>-ui<span class="comment"> // or npm i element-ui -S</span></span><br></pre></td></tr></table></figure><h3 id="5-1-2-在src-main-js中引入Element-UI"><a href="#5-1-2-在src-main-js中引入Element-UI" class="headerlink" title="5.1.2. 在src/main.js中引入Element UI"></a>5.1.2. 在<code>src/main.js</code>中引入Element UI</h3><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// filename: src/main.js</span></span><br><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> ElementUI <span class="keyword">from</span> <span class="string">'element-ui'</span></span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">'./App'</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">'element-ui/lib/theme-chalk/index.css'</span></span><br><span class="line"></span><br><span class="line">Vue.config.productionTip = <span class="keyword">false</span></span><br><span class="line"></span><br><span class="line">Vue.use(ElementUI)</span><br><span class="line"></span><br><span class="line"><span class="comment">/* eslint-disable no-new */</span></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">'#app'</span>,</span><br><span class="line">  template: <span class="string">'&lt;App/&gt;'</span>,</span><br><span class="line">  components: &#123; App &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="5-1-3-创建src-components-VueAudio-vue"><a href="#5-1-3-创建src-components-VueAudio-vue" class="headerlink" title="5.1.3. 创建src/components/VueAudio.vue"></a>5.1.3. 创建<code>src/components/VueAudio.vue</code></h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">// filename: src/components/VueAudio.vue</span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">audio</span> <span class="attr">src</span>=<span class="string">"http://devtest.qiniudn.com/secret base~.mp3"</span> <span class="attr">controls</span>=<span class="string">"controls"</span>&gt;</span><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="undefined">  data () &#123;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">return</span> &#123;&#125;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="5-1-4-修改src-App-vue-并引入VueAudio-vue组件"><a href="#5-1-4-修改src-App-vue-并引入VueAudio-vue组件" class="headerlink" title="5.1.4. 修改src/App.vue, 并引入VueAudio.vue组件"></a>5.1.4. 修改<code>src/App.vue</code>, 并引入<code>VueAudio.vue</code>组件</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">// filename: src/App.vue</span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">VueAudio</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> VueAudio <span class="keyword">from</span> <span class="string">'./components/VueAudio'</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="actionscript">  name: <span class="string">'app'</span>,</span></span><br><span class="line"><span class="undefined">  components: &#123;</span></span><br><span class="line"><span class="undefined">    VueAudio</span></span><br><span class="line"><span class="undefined">  &#125;,</span></span><br><span class="line"><span class="undefined">  data () &#123;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">return</span> &#123;&#125;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p>打开：<a href="http://localhost:8080/，你应该能看到如下效果，说明引入成功，你可以点击播放按钮看看，音频是否能够播放" target="_blank" rel="noopener">http://localhost:8080/，你应该能看到如下效果，说明引入成功，你可以点击播放按钮看看，音频是否能够播放</a><br><img src="http://p3alsaatj.bkt.clouddn.com/20180209134643_6gU9xo_Screenshot.jpeg" alt=""></p><h2 id="5-2-音频的播放暂停控制"><a href="#5-2-音频的播放暂停控制" class="headerlink" title="5.2. 音频的播放暂停控制"></a>5.2. 音频的播放暂停控制</h2><p>我们需要用一个按钮去控制音频的播放与暂停，这里调用了audio的两个api,以及两个事件</p><ul><li>audio.play()</li><li>audio.pause()</li><li>play事件</li><li>pause事件</li></ul><p>修改<code>src/components/VueAudio.vue</code><br><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml">// filename: src/components/VueAudio.vue</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!-- 此处的ref属性，可以很方便的在vue组件中通过 this.$refs.audio获取该dom元素 --&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">audio</span> <span class="attr">ref</span>=<span class="string">"audio"</span> </span></span></span><br><span class="line"><span class="xml">    @pause="onPause"</span></span><br><span class="line"><span class="xml">    @play="onPlay"</span></span><br><span class="line"><span class="xml">    src="http://devtest.qiniudn.com/secret base~.mp3" controls="controls"&gt;<span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!-- 音频播放控件 --&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">"text"</span> @<span class="attr">click</span>=<span class="string">"startPlayOrPause"</span>&gt;</span></span><span class="template-variable">&#123;&#123;audio.playing | transPlayPause&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span></span><br><span class="line"><span class="xml">export default &#123;</span></span><br><span class="line"><span class="xml">  data () &#123;</span></span><br><span class="line"><span class="xml">    return &#123;</span></span><br><span class="line"><span class="xml">      audio: &#123;</span></span><br><span class="line"><span class="xml">        // 该字段是音频是否处于播放状态的属性</span></span><br><span class="line"><span class="xml">        playing: false</span></span><br><span class="line"><span class="xml">      &#125;</span></span><br><span class="line"><span class="xml">    &#125;</span></span><br><span class="line"><span class="xml">  &#125;,</span></span><br><span class="line"><span class="xml">  methods: &#123;</span></span><br><span class="line"><span class="xml">    // 控制音频的播放与暂停</span></span><br><span class="line"><span class="xml">    startPlayOrPause () &#123;</span></span><br><span class="line"><span class="xml">      return this.audio.playing ? this.pause() : this.play()</span></span><br><span class="line"><span class="xml">    &#125;,</span></span><br><span class="line"><span class="xml">    // 播放音频</span></span><br><span class="line"><span class="xml">    play () &#123;</span></span><br><span class="line"><span class="xml">      this.$refs.audio.play()</span></span><br><span class="line"><span class="xml">    &#125;,</span></span><br><span class="line"><span class="xml">    // 暂停音频</span></span><br><span class="line"><span class="xml">    pause () &#123;</span></span><br><span class="line"><span class="xml">      this.$refs.audio.pause()</span></span><br><span class="line"><span class="xml">    &#125;,</span></span><br><span class="line"><span class="xml">    // 当音频播放</span></span><br><span class="line"><span class="xml">    onPlay () &#123;</span></span><br><span class="line"><span class="xml">      this.audio.playing = true</span></span><br><span class="line"><span class="xml">    &#125;,</span></span><br><span class="line"><span class="xml">    // 当音频暂停</span></span><br><span class="line"><span class="xml">    onPause () &#123;</span></span><br><span class="line"><span class="xml">      this.audio.playing = false</span></span><br><span class="line"><span class="xml">    &#125;</span></span><br><span class="line"><span class="xml">  &#125;,</span></span><br><span class="line"><span class="xml">  filters: &#123;</span></span><br><span class="line"><span class="xml">    // 使用组件过滤器来动态改变按钮的显示</span></span><br><span class="line"><span class="xml">    transPlayPause(value) &#123;</span></span><br><span class="line"><span class="xml">      return value ? '暂停' : '播放'</span></span><br><span class="line"><span class="xml">    &#125;</span></span><br><span class="line"><span class="xml">  &#125;</span></span><br><span class="line"><span class="xml">&#125;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p><p><img src="http://p3alsaatj.bkt.clouddn.com/20180209134700_DTqSCu_Screenshot.jpeg" alt=""></p><h2 id="5-3-音频显示时间"><a href="#5-3-音频显示时间" class="headerlink" title="5.3. 音频显示时间"></a>5.3. 音频显示时间</h2><p>音频的时间显示主要有两部分，音频的总时长和当前播放时间。可以从两个事件中获取</p><ul><li><code>loadedmetadata</code>:代表音频的元数据已经被加载完成，可以从中获取音频总时长</li><li><code>timeupdate</code>: 当前播放位置作为正常播放的一部分而改变，或者以特别有趣的方式，例如不连续地改变，可以从该事件中获取音频的当前播放时间，<code>该事件在播放过程中会不断被触发</code></li></ul><p><code>要点代码</code>：整数格式化成时:分:秒<br><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">function realFormatSecond(<span class="built_in">second</span>) &#123;</span><br><span class="line">  var secondType = typeof <span class="built_in">second</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (secondType === <span class="string">'number'</span> || secondType === <span class="string">'string'</span>) &#123;</span><br><span class="line">    <span class="built_in">second</span> = parseInt(<span class="built_in">second</span>)</span><br><span class="line"></span><br><span class="line">    var hours = Math.<span class="built_in">floor</span>(<span class="built_in">second</span> / <span class="number">3600</span>)</span><br><span class="line">    <span class="built_in">second</span> = <span class="built_in">second</span> - hours * <span class="number">3600</span></span><br><span class="line">    var mimute = Math.<span class="built_in">floor</span>(<span class="built_in">second</span> / <span class="number">60</span>)</span><br><span class="line">    <span class="built_in">second</span> = <span class="built_in">second</span> - mimute * <span class="number">60</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> hours + <span class="string">':'</span> + (<span class="string">'0'</span> + mimute).slice(<span class="number">-2</span>) + <span class="string">':'</span> + (<span class="string">'0'</span> + <span class="built_in">second</span>).slice(<span class="number">-2</span>)</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">'0:00:00'</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><code>要点代码</code>： 两个事件的处理<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 当timeupdate事件大概每秒一次，用来更新音频流的当前播放时间</span></span><br><span class="line"><span class="function"><span class="title">onTimeupdate</span><span class="params">(res)</span></span> &#123;</span><br><span class="line">      console.log(<span class="string">'timeupdate'</span>)</span><br><span class="line">      console.log(res)</span><br><span class="line">      this<span class="selector-class">.audio</span><span class="selector-class">.currentTime</span> = res<span class="selector-class">.target</span><span class="selector-class">.currentTime</span></span><br><span class="line">    &#125;,</span><br><span class="line"><span class="comment">// 当加载语音流元数据完成后，会触发该事件的回调函数</span></span><br><span class="line"><span class="comment">// 语音元数据主要是语音的长度之类的数据</span></span><br><span class="line"><span class="function"><span class="title">onLoadedmetadata</span><span class="params">(res)</span></span> &#123;</span><br><span class="line">  console.log(<span class="string">'loadedmetadata'</span>)</span><br><span class="line">  console.log(res)</span><br><span class="line">  this<span class="selector-class">.audio</span><span class="selector-class">.maxTime</span> = parseInt(res<span class="selector-class">.target</span><span class="selector-class">.duration</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><code>完整代码</code><br><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!-- 此处的ref属性，可以很方便的在vue组件中通过 this.$refs.audio获取该dom元素 --&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">audio</span> <span class="attr">ref</span>=<span class="string">"audio"</span> </span></span></span><br><span class="line"><span class="xml">    @pause="onPause"</span></span><br><span class="line"><span class="xml">    @play="onPlay"</span></span><br><span class="line"><span class="xml">    @timeupdate="onTimeupdate" </span></span><br><span class="line"><span class="xml">    @loadedmetadata="onLoadedmetadata"</span></span><br><span class="line"><span class="xml">    src="http://devtest.qiniudn.com/secret base~.mp3" controls="controls"&gt;<span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!-- 音频播放控件 --&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">"text"</span> @<span class="attr">click</span>=<span class="string">"startPlayOrPause"</span>&gt;</span></span><span class="template-variable">&#123;&#123;audio.playing | transPlayPause&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">el-tag</span> <span class="attr">type</span>=<span class="string">"info"</span>&gt;</span></span><span class="template-variable">&#123;&#123; audio.currentTime | formatSecond&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">el-tag</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">el-tag</span> <span class="attr">type</span>=<span class="string">"info"</span>&gt;</span></span><span class="template-variable">&#123;&#123; audio.maxTime | formatSecond&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">el-tag</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">// 将整数转换成 时：分：秒的格式</span></span><br><span class="line"><span class="xml">function realFormatSecond(second) &#123;</span></span><br><span class="line"><span class="xml">  var secondType = typeof second</span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">  if (secondType === 'number' || secondType === 'string') &#123;</span></span><br><span class="line"><span class="xml">    second = parseInt(second)</span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">    var hours = Math.floor(second / 3600)</span></span><br><span class="line"><span class="xml">    second = second - hours * 3600</span></span><br><span class="line"><span class="xml">    var mimute = Math.floor(second / 60)</span></span><br><span class="line"><span class="xml">    second = second - mimute * 60</span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">    return hours + ':' + ('0' + mimute).slice(-2) + ':' + ('0' + second).slice(-2)</span></span><br><span class="line"><span class="xml">  &#125; else &#123;</span></span><br><span class="line"><span class="xml">    return '0:00:00'</span></span><br><span class="line"><span class="xml">  &#125;</span></span><br><span class="line"><span class="xml">&#125;</span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">export default &#123;</span></span><br><span class="line"><span class="xml">  data () &#123;</span></span><br><span class="line"><span class="xml">    return &#123;</span></span><br><span class="line"><span class="xml">      audio: &#123;</span></span><br><span class="line"><span class="xml">        // 该字段是音频是否处于播放状态的属性</span></span><br><span class="line"><span class="xml">        playing: false,</span></span><br><span class="line"><span class="xml">        // 音频当前播放时长</span></span><br><span class="line"><span class="xml">        currentTime: 0,</span></span><br><span class="line"><span class="xml">        // 音频最大播放时长</span></span><br><span class="line"><span class="xml">        maxTime: 0</span></span><br><span class="line"><span class="xml">      &#125;</span></span><br><span class="line"><span class="xml">    &#125;</span></span><br><span class="line"><span class="xml">  &#125;,</span></span><br><span class="line"><span class="xml">  methods: &#123;</span></span><br><span class="line"><span class="xml">    // 控制音频的播放与暂停</span></span><br><span class="line"><span class="xml">    startPlayOrPause () &#123;</span></span><br><span class="line"><span class="xml">      return this.audio.playing ? this.pause() : this.play()</span></span><br><span class="line"><span class="xml">    &#125;,</span></span><br><span class="line"><span class="xml">    // 播放音频</span></span><br><span class="line"><span class="xml">    play () &#123;</span></span><br><span class="line"><span class="xml">      this.$refs.audio.play()</span></span><br><span class="line"><span class="xml">    &#125;,</span></span><br><span class="line"><span class="xml">    // 暂停音频</span></span><br><span class="line"><span class="xml">    pause () &#123;</span></span><br><span class="line"><span class="xml">      this.$refs.audio.pause()</span></span><br><span class="line"><span class="xml">    &#125;,</span></span><br><span class="line"><span class="xml">    // 当音频播放</span></span><br><span class="line"><span class="xml">    onPlay () &#123;</span></span><br><span class="line"><span class="xml">      this.audio.playing = true</span></span><br><span class="line"><span class="xml">    &#125;,</span></span><br><span class="line"><span class="xml">    // 当音频暂停</span></span><br><span class="line"><span class="xml">    onPause () &#123;</span></span><br><span class="line"><span class="xml">      this.audio.playing = false</span></span><br><span class="line"><span class="xml">    &#125;,</span></span><br><span class="line"><span class="xml">    // 当timeupdate事件大概每秒一次，用来更新音频流的当前播放时间</span></span><br><span class="line"><span class="xml">    onTimeupdate(res) &#123;</span></span><br><span class="line"><span class="xml">      console.log('timeupdate')</span></span><br><span class="line"><span class="xml">      console.log(res)</span></span><br><span class="line"><span class="xml">      this.audio.currentTime = res.target.currentTime</span></span><br><span class="line"><span class="xml">    &#125;,</span></span><br><span class="line"><span class="xml">    // 当加载语音流元数据完成后，会触发该事件的回调函数</span></span><br><span class="line"><span class="xml">    // 语音元数据主要是语音的长度之类的数据</span></span><br><span class="line"><span class="xml">    onLoadedmetadata(res) &#123;</span></span><br><span class="line"><span class="xml">      console.log('loadedmetadata')</span></span><br><span class="line"><span class="xml">      console.log(res)</span></span><br><span class="line"><span class="xml">      this.audio.maxTime = parseInt(res.target.duration)</span></span><br><span class="line"><span class="xml">    &#125;</span></span><br><span class="line"><span class="xml">  &#125;,</span></span><br><span class="line"><span class="xml">  filters: &#123;</span></span><br><span class="line"><span class="xml">    // 使用组件过滤器来动态改变按钮的显示</span></span><br><span class="line"><span class="xml">    transPlayPause(value) &#123;</span></span><br><span class="line"><span class="xml">      return value ? '暂停' : '播放'</span></span><br><span class="line"><span class="xml">    &#125;,</span></span><br><span class="line"><span class="xml">    // 将整数转化成时分秒</span></span><br><span class="line"><span class="xml">    formatSecond(second = 0) &#123;</span></span><br><span class="line"><span class="xml">      return realFormatSecond(second)</span></span><br><span class="line"><span class="xml">    &#125;</span></span><br><span class="line"><span class="xml">  &#125;</span></span><br><span class="line"><span class="xml">&#125;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p><p>打开浏览器可以看到，当音频播放时，当前时间也在改变。<br><img src="http://p3alsaatj.bkt.clouddn.com/20180209134724_Po5w9m_Screenshot.jpeg" alt=""></p><h2 id="5-4-音频进度条控制"><a href="#5-4-音频进度条控制" class="headerlink" title="5.4. 音频进度条控制"></a>5.4. 音频进度条控制</h2><p>进度条主要有两个控制，改变进度的原理是：改变<code>audio.currentTime</code>属性值</p><ul><li>音频播放后，当前时间改变，进度条就要随之改变</li><li>拖动进度条，可以改变音频的当前时间</li></ul><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 进度条ui</span></span><br><span class="line">&lt;el-slider v-model=<span class="string">"sliderTime"</span> :format-tooltip=<span class="string">"formatProcessToolTip"</span> <span class="meta">@change</span>=<span class="string">"changeCurrentTime"</span> <span class="class"><span class="keyword">class</span>="<span class="title">slider</span>"&gt;&lt;<span class="type">/el-slider</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 拖动进度条，改变当前时间，index是进度条改变时的回调函数的参数0-100之间，需要换算成实际时间</span></span><br><span class="line">changeCurrentTime(index) &#123;</span><br><span class="line">  <span class="keyword">this</span>.$refs.audio.currentTime = parseInt(index / <span class="number">100</span> * <span class="keyword">this</span>.audio.maxTime)</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">// 当音频当前时间改变后，进度条也要改变</span></span><br><span class="line">onTimeupdate(res) &#123;</span><br><span class="line">  console.log(<span class="string">'timeupdate'</span>)</span><br><span class="line">  console.log(res)</span><br><span class="line">  <span class="keyword">this</span>.audio.currentTime = res.target.currentTime</span><br><span class="line">  <span class="keyword">this</span>.sliderTime = parseInt(<span class="keyword">this</span>.audio.currentTime / <span class="keyword">this</span>.audio.maxTime * <span class="number">100</span>)</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line"><span class="comment">// 进度条格式化toolTip</span></span><br><span class="line">formatProcessToolTip(index = <span class="number">0</span>) &#123;</span><br><span class="line">  index = parseInt(<span class="keyword">this</span>.audio.maxTime / <span class="number">100</span> * index)</span><br><span class="line">  <span class="keyword">return</span> <span class="string">'进度条: '</span> + realFormatSecond(index)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h2 id="5-5-音频音量控制"><a href="#5-5-音频音量控制" class="headerlink" title="5.5. 音频音量控制"></a>5.5. 音频音量控制</h2><p>音频的音量控制和进度控制差不多，也是通过拖动滑动条，去修改<code>aduio.volume</code>属性值，此处不再啰嗦</p><h2 id="5-6-音频播放速度控制"><a href="#5-6-音频播放速度控制" class="headerlink" title="5.6. 音频播放速度控制"></a>5.6. 音频播放速度控制</h2><p>音频播放速度控制和进度控制差不多，也是点击按钮，去修改<code>aduio.playbackRate</code>属性值，该属性代表音量的大小，取值范围是0 - 1，用滑动条的时候，也是需要换算一下值，此处不再啰嗦</p><h2 id="5-7-音频静音控制"><a href="#5-7-音频静音控制" class="headerlink" title="5.7. 音频静音控制"></a>5.7. 音频静音控制</h2><p>静音的控制是点击按钮，去修改<code>aduio.muted</code>属性，该属性有两个值: true(静音)，false(不静音)。 注意，静音的时候，音频的进度条还是会继续往前走的。</p><h2 id="5-8-音频下载控制"><a href="#5-8-音频下载控制" class="headerlink" title="5.8. 音频下载控制"></a>5.8. 音频下载控制</h2><p>音频下载是一个a链接，记得加上<code>download</code>属性，不然浏览器会在新标签打开音频，而不是下载音频<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">:href</span>=<span class="string">"url"</span> <span class="attr">v-show</span>=<span class="string">"!controlList.noDownload"</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">class</span>=<span class="string">"download"</span> <span class="attr">download</span>&gt;</span>下载<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h2 id="5-9-个性化配置"><a href="#5-9-个性化配置" class="headerlink" title="5.9. 个性化配置"></a>5.9. 个性化配置</h2><p>音频的个性化配置有很多，大家可以自己扩展，通过父组件传递响应的值，可以做到个性化设置。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"> controlList: &#123;</span><br><span class="line">  <span class="comment">// 不显示下载</span></span><br><span class="line">  noDownload: <span class="literal">false</span>,</span><br><span class="line">  <span class="comment">// 不显示静音</span></span><br><span class="line">  noMuted: <span class="literal">false</span>,</span><br><span class="line">  <span class="comment">// 不显示音量条</span></span><br><span class="line">  noVolume: <span class="literal">false</span>,</span><br><span class="line">  <span class="comment">// 不显示进度条</span></span><br><span class="line">  noProcess: <span class="literal">false</span>,</span><br><span class="line">  <span class="comment">// 只能播放一个</span></span><br><span class="line">  onlyOnePlaying: <span class="literal">false</span>,</span><br><span class="line">  <span class="comment">// 不要快进按钮</span></span><br><span class="line">  noSpeed: <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">setControlList () &#123;</span><br><span class="line">    <span class="keyword">let</span> controlList = <span class="keyword">this</span>.theControlList.split(<span class="string">' '</span>)</span><br><span class="line">    controlList.forEach(<span class="function">(<span class="params">item</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span>(<span class="keyword">this</span>.controlList[item] !== <span class="literal">undefined</span>)&#123;</span><br><span class="line">        <span class="keyword">this</span>.controlList[item] = <span class="literal">true</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>例如父组件这样<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-for</span>=<span class="string">"item in audios"</span> <span class="attr">:key</span>=<span class="string">"item.url"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">VueAudio</span> <span class="attr">:theUrl</span>=<span class="string">"item.url"</span> <span class="attr">:theControlList</span>=<span class="string">"item.controlList"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> VueAudio <span class="keyword">from</span> <span class="string">'./components/VueAudio'</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="actionscript">  name: <span class="string">'app'</span>,</span></span><br><span class="line"><span class="undefined">  components: &#123;</span></span><br><span class="line"><span class="undefined">    VueAudio</span></span><br><span class="line"><span class="undefined">  &#125;,</span></span><br><span class="line"><span class="undefined">  data () &#123;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="undefined">      audios: [</span></span><br><span class="line"><span class="undefined">        &#123;</span></span><br><span class="line"><span class="actionscript">          url: <span class="string">'http://devtest.qiniudn.com/secret base~.mp3'</span>,</span></span><br><span class="line"><span class="actionscript">          controlList: <span class="string">'onlyOnePlaying'</span></span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="undefined">        &#123;</span></span><br><span class="line"><span class="actionscript">          url: <span class="string">'http://devtest.qiniudn.com/回レ！雪月花.mp3'</span>,</span></span><br><span class="line"><span class="actionscript">          controlList: <span class="string">'noDownload noMuted onlyOnePlaying'</span></span></span><br><span class="line"><span class="undefined">        &#125;,&#123;</span></span><br><span class="line"><span class="actionscript">          url: <span class="string">'http://devtest.qiniudn.com/あっちゅ～ま青春!.mp3'</span>,</span></span><br><span class="line"><span class="actionscript">          controlList: <span class="string">'noDownload noVolume noMuted onlyOnePlaying'</span></span></span><br><span class="line"><span class="undefined">        &#125;,&#123;</span></span><br><span class="line"><span class="actionscript">          url: <span class="string">'http://devtest.qiniudn.com/Preparation.mp3'</span>,</span></span><br><span class="line"><span class="actionscript">          controlList: <span class="string">'noDownload noSpeed onlyOnePlaying'</span></span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">      ]</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h2 id="5-10-一点点ES6语法"><a href="#5-10-一点点ES6语法" class="headerlink" title="5.10. 一点点ES6语法"></a>5.10. 一点点ES6语法</h2><p>大多数时候，我们希望页面上播放一个音频时，其他音频可以暂停。<br><code>[...audios]</code>可以把一个类数组转化成数组，这个是我常用的。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">onPlay (res) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(res)</span><br><span class="line">    <span class="keyword">this</span>.audio.playing = <span class="literal">true</span></span><br><span class="line">    <span class="keyword">this</span>.audio.loading = <span class="literal">false</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">this</span>.controlList.onlyOnePlaying)&#123;</span><br><span class="line">      <span class="keyword">return</span> </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">let</span> target = res.target</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">let</span> audios = <span class="built_in">document</span>.getElementsByTagName(<span class="string">'audio'</span>);</span><br><span class="line">    <span class="comment">// 如果设置了排他性，当前音频播放是，其他音频都要暂停</span></span><br><span class="line">    [...audios].forEach(<span class="function">(<span class="params">item</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span>(item !== target)&#123;</span><br><span class="line">        item.pause()</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h2 id="5-11-完成后的文件"><a href="#5-11-完成后的文件" class="headerlink" title="5.11. 完成后的文件"></a>5.11. 完成后的文件</h2><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml">//filename: VueAudio.vue</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"di main-wrap"</span> <span class="attr">v-loading</span>=<span class="string">"audio.waiting"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!-- 这里设置了ref属性后，在vue组件中，就可以用this.$refs.audio来访问该dom元素 --&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">audio</span> <span class="attr">ref</span>=<span class="string">"audio"</span> <span class="attr">class</span>=<span class="string">"dn"</span> </span></span></span><br><span class="line"><span class="xml">    :src="url" :preload="audio.preload"</span></span><br><span class="line"><span class="xml">    @play="onPlay" </span></span><br><span class="line"><span class="xml">    @error="onError"</span></span><br><span class="line"><span class="xml">    @waiting="onWaiting"</span></span><br><span class="line"><span class="xml">    @pause="onPause" </span></span><br><span class="line"><span class="xml">    @timeupdate="onTimeupdate" </span></span><br><span class="line"><span class="xml">    @loadedmetadata="onLoadedmetadata"</span></span><br><span class="line"><span class="xml">    &gt;<span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">"text"</span> @<span class="attr">click</span>=<span class="string">"startPlayOrPause"</span>&gt;</span></span><span class="template-variable">&#123;&#123;audio.playing | transPlayPause&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">v-show</span>=<span class="string">"!controlList.noSpeed"</span> <span class="attr">type</span>=<span class="string">"text"</span> @<span class="attr">click</span>=<span class="string">"changeSpeed"</span>&gt;</span></span><span class="template-variable">&#123;&#123;audio.speed | transSpeed&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">el-tag</span> <span class="attr">type</span>=<span class="string">"info"</span>&gt;</span></span><span class="template-variable">&#123;&#123; audio.currentTime | formatSecond&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">el-tag</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">el-slider</span> <span class="attr">v-show</span>=<span class="string">"!controlList.noProcess"</span> <span class="attr">v-model</span>=<span class="string">"sliderTime"</span> <span class="attr">:format-tooltip</span>=<span class="string">"formatProcessToolTip"</span> @<span class="attr">change</span>=<span class="string">"changeCurrentTime"</span> <span class="attr">class</span>=<span class="string">"slider"</span>&gt;</span><span class="tag">&lt;/<span class="name">el-slider</span>&gt;</span></span></span><br><span class="line"><span class="xml">      </span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">el-tag</span> <span class="attr">type</span>=<span class="string">"info"</span>&gt;</span></span><span class="template-variable">&#123;&#123; audio.maxTime | formatSecond &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">el-tag</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">v-show</span>=<span class="string">"!controlList.noMuted"</span> <span class="attr">type</span>=<span class="string">"text"</span> @<span class="attr">click</span>=<span class="string">"startMutedOrNot"</span>&gt;</span></span><span class="template-variable">&#123;&#123;audio.muted | transMutedOrNot&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">el-slider</span> <span class="attr">v-show</span>=<span class="string">"!controlList.noVolume"</span> <span class="attr">v-model</span>=<span class="string">"volume"</span> <span class="attr">:format-tooltip</span>=<span class="string">"formatVolumeToolTip"</span> @<span class="attr">change</span>=<span class="string">"changeVolume"</span> <span class="attr">class</span>=<span class="string">"slider"</span>&gt;</span><span class="tag">&lt;/<span class="name">el-slider</span>&gt;</span></span></span><br><span class="line"><span class="xml">      </span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">:href</span>=<span class="string">"url"</span> <span class="attr">v-show</span>=<span class="string">"!controlList.noDownload"</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">class</span>=<span class="string">"download"</span> <span class="attr">download</span>&gt;</span>下载<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span></span><br><span class="line"><span class="xml">  function realFormatSecond(second) &#123;</span></span><br><span class="line"><span class="xml">    var secondType = typeof second</span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">    if (secondType === 'number' || secondType === 'string') &#123;</span></span><br><span class="line"><span class="xml">      second = parseInt(second)</span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">      var hours = Math.floor(second / 3600)</span></span><br><span class="line"><span class="xml">      second = second - hours * 3600</span></span><br><span class="line"><span class="xml">      var mimute = Math.floor(second / 60)</span></span><br><span class="line"><span class="xml">      second = second - mimute * 60</span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">      return hours + ':' + ('0' + mimute).slice(-2) + ':' + ('0' + second).slice(-2)</span></span><br><span class="line"><span class="xml">    &#125; else &#123;</span></span><br><span class="line"><span class="xml">      return '0:00:00'</span></span><br><span class="line"><span class="xml">    &#125;</span></span><br><span class="line"><span class="xml">  &#125;</span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">  export default &#123;</span></span><br><span class="line"><span class="xml">    props: &#123;</span></span><br><span class="line"><span class="xml">      theUrl: &#123;</span></span><br><span class="line"><span class="xml">        type: String,</span></span><br><span class="line"><span class="xml">        required: true,</span></span><br><span class="line"><span class="xml">      &#125;,</span></span><br><span class="line"><span class="xml">      theSpeeds: &#123;</span></span><br><span class="line"><span class="xml">        type: Array,</span></span><br><span class="line"><span class="xml">        default () &#123;</span></span><br><span class="line"><span class="xml">          return [1, 1.5, 2]</span></span><br><span class="line"><span class="xml">        &#125;</span></span><br><span class="line"><span class="xml">      &#125;,</span></span><br><span class="line"><span class="xml">      theControlList: &#123;</span></span><br><span class="line"><span class="xml">        type: String,</span></span><br><span class="line"><span class="xml">        default: ''</span></span><br><span class="line"><span class="xml">      &#125;</span></span><br><span class="line"><span class="xml">    &#125;,</span></span><br><span class="line"><span class="xml">    name: 'VueAudio',</span></span><br><span class="line"><span class="xml">    data() &#123;</span></span><br><span class="line"><span class="xml">      return &#123;</span></span><br><span class="line"><span class="xml">        url: this.theUrl || 'http://devtest.qiniudn.com/secret base~.mp3',</span></span><br><span class="line"><span class="xml">        audio: &#123;</span></span><br><span class="line"><span class="xml">          currentTime: 0,</span></span><br><span class="line"><span class="xml">          maxTime: 0,</span></span><br><span class="line"><span class="xml">          playing: false,</span></span><br><span class="line"><span class="xml">          muted: false,</span></span><br><span class="line"><span class="xml">          speed: 1,</span></span><br><span class="line"><span class="xml">          waiting: true,</span></span><br><span class="line"><span class="xml">          preload: 'auto'</span></span><br><span class="line"><span class="xml">        &#125;,</span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">        sliderTime: 0,</span></span><br><span class="line"><span class="xml">        volume: 100,</span></span><br><span class="line"><span class="xml">        speeds: this.theSpeeds,</span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">        controlList: &#123;</span></span><br><span class="line"><span class="xml">          // 不显示下载</span></span><br><span class="line"><span class="xml">          noDownload: false,</span></span><br><span class="line"><span class="xml">          // 不显示静音</span></span><br><span class="line"><span class="xml">          noMuted: false,</span></span><br><span class="line"><span class="xml">          // 不显示音量条</span></span><br><span class="line"><span class="xml">          noVolume: false,</span></span><br><span class="line"><span class="xml">          // 不显示进度条</span></span><br><span class="line"><span class="xml">          noProcess: false,</span></span><br><span class="line"><span class="xml">          // 只能播放一个</span></span><br><span class="line"><span class="xml">          onlyOnePlaying: false,</span></span><br><span class="line"><span class="xml">          // 不要快进按钮</span></span><br><span class="line"><span class="xml">          noSpeed: false</span></span><br><span class="line"><span class="xml">        &#125;</span></span><br><span class="line"><span class="xml">      &#125;</span></span><br><span class="line"><span class="xml">    &#125;,</span></span><br><span class="line"><span class="xml">    methods: &#123;</span></span><br><span class="line"><span class="xml">      setControlList () &#123;</span></span><br><span class="line"><span class="xml">        let controlList = this.theControlList.split(' ')</span></span><br><span class="line"><span class="xml">        controlList.forEach((item) =&gt; &#123;</span></span><br><span class="line"><span class="xml">          if(this.controlList[item] !== undefined)&#123;</span></span><br><span class="line"><span class="xml">            this.controlList[item] = true</span></span><br><span class="line"><span class="xml">          &#125;</span></span><br><span class="line"><span class="xml">        &#125;)</span></span><br><span class="line"><span class="xml">      &#125;,</span></span><br><span class="line"><span class="xml">      changeSpeed() &#123;</span></span><br><span class="line"><span class="xml">        let index = this.speeds.indexOf(this.audio.speed) + 1</span></span><br><span class="line"><span class="xml">        this.audio.speed = this.speeds[index % this.speeds.length]</span></span><br><span class="line"><span class="xml">        this.$refs.audio.playbackRate = this.audio.speed</span></span><br><span class="line"><span class="xml">      &#125;,</span></span><br><span class="line"><span class="xml">      startMutedOrNot() &#123;</span></span><br><span class="line"><span class="xml">        this.$refs.audio.muted = !this.$refs.audio.muted</span></span><br><span class="line"><span class="xml">        this.audio.muted = this.$refs.audio.muted</span></span><br><span class="line"><span class="xml">      &#125;,</span></span><br><span class="line"><span class="xml">      // 音量条toolTip</span></span><br><span class="line"><span class="xml">      formatVolumeToolTip(index) &#123;</span></span><br><span class="line"><span class="xml">        return '音量条: ' + index</span></span><br><span class="line"><span class="xml">      &#125;,</span></span><br><span class="line"><span class="xml">      // 进度条toolTip</span></span><br><span class="line"><span class="xml">      formatProcessToolTip(index = 0) &#123;</span></span><br><span class="line"><span class="xml">        index = parseInt(this.audio.maxTime / 100 * index)</span></span><br><span class="line"><span class="xml">        return '进度条: ' + realFormatSecond(index)</span></span><br><span class="line"><span class="xml">      &#125;,</span></span><br><span class="line"><span class="xml">      // 音量改变</span></span><br><span class="line"><span class="xml">      changeVolume(index = 0) &#123;</span></span><br><span class="line"><span class="xml">        this.$refs.audio.volume = index / 100</span></span><br><span class="line"><span class="xml">        this.volume = index</span></span><br><span class="line"><span class="xml">      &#125;,</span></span><br><span class="line"><span class="xml">      // 播放跳转</span></span><br><span class="line"><span class="xml">      changeCurrentTime(index) &#123;</span></span><br><span class="line"><span class="xml">        this.$refs.audio.currentTime = parseInt(index / 100 * this.audio.maxTime)</span></span><br><span class="line"><span class="xml">      &#125;,</span></span><br><span class="line"><span class="xml">      startPlayOrPause() &#123;</span></span><br><span class="line"><span class="xml">        return this.audio.playing ? this.pausePlay() : this.startPlay()</span></span><br><span class="line"><span class="xml">      &#125;,</span></span><br><span class="line"><span class="xml">      // 开始播放</span></span><br><span class="line"><span class="xml">      startPlay() &#123;</span></span><br><span class="line"><span class="xml">        this.$refs.audio.play()</span></span><br><span class="line"><span class="xml">      &#125;,</span></span><br><span class="line"><span class="xml">      // 暂停</span></span><br><span class="line"><span class="xml">      pausePlay() &#123;</span></span><br><span class="line"><span class="xml">        this.$refs.audio.pause()</span></span><br><span class="line"><span class="xml">      &#125;,</span></span><br><span class="line"><span class="xml">      // 当音频暂停</span></span><br><span class="line"><span class="xml">      onPause () &#123;</span></span><br><span class="line"><span class="xml">        this.audio.playing = false</span></span><br><span class="line"><span class="xml">      &#125;,</span></span><br><span class="line"><span class="xml">      // 当发生错误, 就出现loading状态</span></span><br><span class="line"><span class="xml">      onError () &#123;</span></span><br><span class="line"><span class="xml">        this.audio.waiting = true</span></span><br><span class="line"><span class="xml">      &#125;,</span></span><br><span class="line"><span class="xml">      // 当音频开始等待</span></span><br><span class="line"><span class="xml">      onWaiting (res) &#123;</span></span><br><span class="line"><span class="xml">        console.log(res)</span></span><br><span class="line"><span class="xml">      &#125;,</span></span><br><span class="line"><span class="xml">      // 当音频开始播放</span></span><br><span class="line"><span class="xml">      onPlay (res) &#123;</span></span><br><span class="line"><span class="xml">        console.log(res)</span></span><br><span class="line"><span class="xml">        this.audio.playing = true</span></span><br><span class="line"><span class="xml">        this.audio.loading = false</span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">        if(!this.controlList.onlyOnePlaying)&#123;</span></span><br><span class="line"><span class="xml">          return </span></span><br><span class="line"><span class="xml">        &#125;</span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">        let target = res.target</span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">        let audios = document.getElementsByTagName('audio');</span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">        [...audios].forEach((item) =&gt; &#123;</span></span><br><span class="line"><span class="xml">          if(item !== target)&#123;</span></span><br><span class="line"><span class="xml">            item.pause()</span></span><br><span class="line"><span class="xml">          &#125;</span></span><br><span class="line"><span class="xml">        &#125;)</span></span><br><span class="line"><span class="xml">      &#125;,</span></span><br><span class="line"><span class="xml">      // 当timeupdate事件大概每秒一次，用来更新音频流的当前播放时间</span></span><br><span class="line"><span class="xml">      onTimeupdate(res) &#123;</span></span><br><span class="line"><span class="xml">        // console.log('timeupdate')</span></span><br><span class="line"><span class="xml">        // console.log(res)</span></span><br><span class="line"><span class="xml">        this.audio.currentTime = res.target.currentTime</span></span><br><span class="line"><span class="xml">        this.sliderTime = parseInt(this.audio.currentTime / this.audio.maxTime * 100)</span></span><br><span class="line"><span class="xml">      &#125;,</span></span><br><span class="line"><span class="xml">      // 当加载语音流元数据完成后，会触发该事件的回调函数</span></span><br><span class="line"><span class="xml">      // 语音元数据主要是语音的长度之类的数据</span></span><br><span class="line"><span class="xml">      onLoadedmetadata(res) &#123;</span></span><br><span class="line"><span class="xml">        console.log('loadedmetadata')</span></span><br><span class="line"><span class="xml">        console.log(res)</span></span><br><span class="line"><span class="xml">        this.audio.waiting = false</span></span><br><span class="line"><span class="xml">        this.audio.maxTime = parseInt(res.target.duration)</span></span><br><span class="line"><span class="xml">      &#125;</span></span><br><span class="line"><span class="xml">    &#125;,</span></span><br><span class="line"><span class="xml">    filters: &#123;</span></span><br><span class="line"><span class="xml">      formatSecond(second = 0) &#123;</span></span><br><span class="line"><span class="xml">        return realFormatSecond(second)</span></span><br><span class="line"><span class="xml">      &#125;,</span></span><br><span class="line"><span class="xml">      transPlayPause(value) &#123;</span></span><br><span class="line"><span class="xml">        return value ? '暂停' : '播放'</span></span><br><span class="line"><span class="xml">      &#125;,</span></span><br><span class="line"><span class="xml">      transMutedOrNot(value) &#123;</span></span><br><span class="line"><span class="xml">        return value ? '放音' : '静音'</span></span><br><span class="line"><span class="xml">      &#125;,</span></span><br><span class="line"><span class="xml">      transSpeed(value) &#123;</span></span><br><span class="line"><span class="xml">        return '快进: x' + value</span></span><br><span class="line"><span class="xml">      &#125;</span></span><br><span class="line"><span class="xml">    &#125;,</span></span><br><span class="line"><span class="xml">    created() &#123;</span></span><br><span class="line"><span class="xml">      this.setControlList()</span></span><br><span class="line"><span class="xml">    &#125;</span></span><br><span class="line"><span class="xml">  &#125;</span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- Add "scoped" attribute to limit CSS to this component only --&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span><span class="undefined"></span></span></span><br><span class="line"><span class="xml">  .main-wrap&#123;</span></span><br><span class="line"><span class="xml">    padding: 10px 15px;</span></span><br><span class="line"><span class="xml">  &#125;</span></span><br><span class="line"><span class="xml">  .slider &#123;</span></span><br><span class="line"><span class="xml">    display: inline-block;</span></span><br><span class="line"><span class="xml">    width: 100px;</span></span><br><span class="line"><span class="xml">    position: relative;</span></span><br><span class="line"><span class="xml">    top: 14px;</span></span><br><span class="line"><span class="xml">    margin-left: 15px;</span></span><br><span class="line"><span class="xml">  &#125;</span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">  .di &#123;</span></span><br><span class="line"><span class="xml">    display: inline-block;</span></span><br><span class="line"><span class="xml">  &#125;</span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">  .download &#123;</span></span><br><span class="line"><span class="xml">    color: #409EFF;</span></span><br><span class="line"><span class="xml">    margin-left: 15px;</span></span><br><span class="line"><span class="xml">  &#125;</span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">  .dn&#123;</span></span><br><span class="line"><span class="xml">    display: none;</span></span><br><span class="line"><span class="xml">  &#125;</span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h1 id="6-感谢"><a href="#6-感谢" class="headerlink" title="6. 感谢"></a>6. 感谢</h1><ul><li>如果你需要一个小型的vue音乐播放器，你可以试试<a href="https://github.com/SevenOutman/vue-aplayer" target="_blank" rel="noopener">vue-aplayer</a>, 该播放器不仅仅支持vue组件，非Vue的也支持，你可以看看他们的<a href="https://sevenoutman.github.io/vue-aplayer/demo" target="_blank" rel="noopener">demo</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1-简介&quot;&gt;&lt;a href=&quot;#1-简介&quot; class=&quot;headerlink&quot; title=&quot;1. 简介&quot;&gt;&lt;/a&gt;1. 简介&lt;/h1&gt;&lt;h2 id=&quot;1-1-相关技术&quot;&gt;&lt;a href=&quot;#1-1-相关技术&quot; class=&quot;headerlink&quot; title=
      
    
    </summary>
    
    
      <category term="audio" scheme="https://wdd.js.org/tags/audio/"/>
    
      <category term="vue" scheme="https://wdd.js.org/tags/vue/"/>
    
      <category term="ElementUI" scheme="https://wdd.js.org/tags/ElementUI/"/>
    
  </entry>
  
  <entry>
    <title>如何从浏览器导出HTTPS证书</title>
    <link href="https://wdd.js.org/export-https-certificate-in-browser.html"/>
    <id>https://wdd.js.org/export-https-certificate-in-browser.html</id>
    <published>2018-02-09T05:33:38.000Z</published>
    <updated>2018-02-09T06:00:09.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>以谷歌浏览器为栗子</p></blockquote><h1 id="1-打开一个HTTPS网站，例如https-segmentfault-com"><a href="#1-打开一个HTTPS网站，例如https-segmentfault-com" class="headerlink" title="1. 打开一个HTTPS网站，例如https://segmentfault.com/"></a>1. 打开一个HTTPS网站，例如<a href="https://segmentfault.com/" target="_blank" rel="noopener">https://segmentfault.com/</a></h1><h1 id="2-F12-gt-Secutity-gt-点击View-certificate"><a href="#2-F12-gt-Secutity-gt-点击View-certificate" class="headerlink" title="2. F12 -&gt; Secutity -&gt; 点击View certificate"></a>2. F12 -&gt; Secutity -&gt; 点击View certificate</h1><p><img src="http://p3alsaatj.bkt.clouddn.com/20180209133438_49mTFN_Screenshot.jpeg" alt=""></p><h1 id="3-详细信息-gt-复制到文件"><a href="#3-详细信息-gt-复制到文件" class="headerlink" title="3. 详细信息 -&gt; 复制到文件"></a>3. 详细信息 -&gt; 复制到文件</h1><p><img src="http://p3alsaatj.bkt.clouddn.com/20180209133453_9nA0g1_Screenshot.jpeg" alt=""></p><h1 id="4-证书导出向导"><a href="#4-证书导出向导" class="headerlink" title="4. 证书导出向导"></a>4. 证书导出向导</h1><p><img src="http://p3alsaatj.bkt.clouddn.com/20180209133502_rgjg2i_Screenshot.jpeg" alt=""><br><img src="http://p3alsaatj.bkt.clouddn.com/20180209133512_y7Xayk_Screenshot.jpeg" alt=""></p><p>这一步要给证书文件起个名字，后缀名就不用了。<br><img src="http://p3alsaatj.bkt.clouddn.com/20180209133527_7TnRGi_Screenshot.jpeg" alt=""><br><img src="http://p3alsaatj.bkt.clouddn.com/20180209133536_UqAHTV_Screenshot.jpeg" alt=""><br><img src="http://p3alsaatj.bkt.clouddn.com/20180209133544_3agGIU_Screenshot.jpeg" alt=""></p><p>然后在你的桌面上就多了一个证书文件。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;以谷歌浏览器为栗子&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;1-打开一个HTTPS网站，例如https-segmentfault-com&quot;&gt;&lt;a href=&quot;#1-打开一个HTTPS网站，例如https-segmentfault-com
      
    
    </summary>
    
    
      <category term="https" scheme="https://wdd.js.org/tags/https/"/>
    
  </entry>
  
  <entry>
    <title>奇技淫巧：css实现整个表单只读 form readonly</title>
    <link href="https://wdd.js.org/css-form-readonly.html"/>
    <id>https://wdd.js.org/css-form-readonly.html</id>
    <published>2018-02-09T05:31:38.000Z</published>
    <updated>2018-02-09T05:59:32.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>一般的方法往往给表单的各个input、select等加上readonly，但是这个方法有很多缺点。此处就不一一赘述。</p></blockquote><p>我说的方法只需要给表单加上一个类，就可以让表单只读。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;form <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-readonly"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p><h1 id="1-方法1-用-before给form做个看不见的蒙版，遮住下面所有的元素，使之不响应任何事件"><a href="#1-方法1-用-before给form做个看不见的蒙版，遮住下面所有的元素，使之不响应任何事件" class="headerlink" title="1. 方法1: 用:before给form做个看不见的蒙版，遮住下面所有的元素，使之不响应任何事件"></a>1. 方法1: 用:before给form做个看不见的蒙版，遮住下面所有的元素，使之不响应任何事件</h1><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.form-readonly</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.form-readonly</span><span class="selector-pseudo">:before</span>&#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">""</span>;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">1</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="2-方法2-用pointer-events-none-让所有事件穿透form"><a href="#2-方法2-用pointer-events-none-让所有事件穿透form" class="headerlink" title="2. 方法2: 用pointer-events:none, 让所有事件穿透form"></a>2. 方法2: 用pointer-events:none, 让所有事件穿透form</h1><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.form-readonly</span>&#123;</span><br><span class="line">    <span class="attribute">pointer-events</span>:none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>关于pointer-events属性，可以看看这个介绍：<a href="https://segmentfault.com/a/1190000011182335" target="_blank" rel="noopener">https://segmentfault.com/a/1190000011182335</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;一般的方法往往给表单的各个input、select等加上readonly，但是这个方法有很多缺点。此处就不一一赘述。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我说的方法只需要给表单加上一个类，就可以让表单只读。&lt;br&gt;&lt;figure class=
      
    
    </summary>
    
    
      <category term="表单" scheme="https://wdd.js.org/tags/%E8%A1%A8%E5%8D%95/"/>
    
  </entry>
  
  <entry>
    <title>你不知道的JSON.stringify()妙用</title>
    <link href="https://wdd.js.org/json-stringify-powerful.html"/>
    <id>https://wdd.js.org/json-stringify-powerful.html</id>
    <published>2018-02-09T05:27:15.000Z</published>
    <updated>2018-02-09T07:46:25.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-语法"><a href="#1-语法" class="headerlink" title="1. 语法"></a>1. 语法</h1><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">JSON</span><span class="selector-class">.stringify</span>(<span class="selector-tag">value</span><span class="selector-attr">[, replacer[, space]</span>])</span><br></pre></td></tr></table></figure><p>一般用法：<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var user = &#123;name: <span class="string">'andy'</span>, isDead: false, age: <span class="number">11</span>, addr: <span class="string">'shanghai'</span>&#125;;</span><br><span class="line"></span><br><span class="line">JSON.stringify(user);</span><br><span class="line"></span><br><span class="line"><span class="string">"&#123;"</span>name<span class="string">":"</span>andy<span class="string">","</span>isDead<span class="string">":false,"</span>age<span class="string">":11,"</span>add<span class="string">r":"</span>shanghai<span class="string">"&#125;"</span></span><br></pre></td></tr></table></figure></p><h1 id="2-扩展用法"><a href="#2-扩展用法" class="headerlink" title="2. 扩展用法"></a>2. 扩展用法</h1><h2 id="2-1-replacer"><a href="#2-1-replacer" class="headerlink" title="2.1. replacer"></a>2.1. replacer</h2><p>replacer可以是<code>函数</code>或者是<code>数组</code>。</p><p><code>功能1: 改变属性值</code><br>将isDead属性的值翻译成0或1，0对应false,1对应true<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">var user = &#123;name: <span class="string">'andy'</span>, isDead: false, age: <span class="number">11</span>, addr: <span class="string">'shanghai'</span>&#125;;</span><br><span class="line"></span><br><span class="line">JSON.stringify(user, <span class="keyword">function</span>(key, value)&#123;</span><br><span class="line">    <span class="keyword">if</span>(key === <span class="string">'isDead'</span>)&#123;</span><br><span class="line">        return value === true ? <span class="number">1</span> : <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    return value;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="string">"&#123;"</span>name<span class="string">":"</span>andy<span class="string">","</span>isDead<span class="string">":0,"</span>age<span class="string">":11,"</span>add<span class="string">r":"</span>shanghai<span class="string">"&#125;"</span></span><br></pre></td></tr></table></figure></p><p><code>功能2：删除某个属性</code><br>将isDead属性删除，如果replacer的返回值是<code>undefined</code>,那么该属性会被删除。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">var user = &#123;name: <span class="string">'andy'</span>, isDead: false, age: <span class="number">11</span>, addr: <span class="string">'shanghai'</span>&#125;;</span><br><span class="line"></span><br><span class="line">JSON.stringify(user, function(key, value)&#123;</span><br><span class="line">    <span class="keyword">if</span>(key === <span class="string">'isDead'</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> undefined;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> value;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="string">"&#123;"</span>name<span class="string">":"</span>andy<span class="string">","</span>age<span class="string">":11,"</span>add<span class="string">r":"</span>shanghai<span class="string">"&#125;"</span></span><br></pre></td></tr></table></figure></p><p><code>功能3: 通过数组过滤某些属性</code><br>只需要name属性和addr属性，其他不要。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var user = &#123;name: <span class="string">'andy'</span>, isDead: false, age: <span class="number">11</span>, addr: <span class="string">'shanghai'</span>&#125;;</span><br><span class="line"></span><br><span class="line">JSON.stringify(user, [<span class="string">'name'</span>, <span class="string">'addr'</span>]);</span><br><span class="line"></span><br><span class="line"><span class="string">"&#123;"</span>name<span class="string">":"</span>andy<span class="string">","</span>add<span class="string">r":"</span>shanghai<span class="string">"&#125;"</span></span><br></pre></td></tr></table></figure><h2 id="2-2-space"><a href="#2-2-space" class="headerlink" title="2.2. space"></a>2.2. space</h2><p>space可以是<code>数字</code>或者是<code>字符串</code>, 如果是数字则表示属性名前加上空格符号的数量，如果是字符串，则直接在属性名前加上该字符串。</p><p><code>功能1: 给输出属性前加上n个空格</code><br><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">var</span> user = &#123;name: <span class="string">'andy'</span>, isDead: <span class="literal">false</span>, age: <span class="number">11</span>, addr: <span class="string">'shanghai'</span>&#125;;</span><br><span class="line"></span><br><span class="line">JSON.stringify(user, <span class="built_in">null</span>, <span class="number">4</span>);</span><br><span class="line"></span><br><span class="line"><span class="string">"&#123;</span></span><br><span class="line"><span class="string">    "</span>name<span class="string">": "</span>andy<span class="string">",</span></span><br><span class="line"><span class="string">    "</span>isDead<span class="string">": false,</span></span><br><span class="line"><span class="string">    "</span>age<span class="string">": 11,</span></span><br><span class="line"><span class="string">    "</span>addr<span class="string">": "</span>shanghai<span class="string">"</span></span><br><span class="line"><span class="string">&#125;"</span></span><br></pre></td></tr></table></figure></p><p><code>功能2: tab格式化输出</code><br><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">var</span> user = &#123;name: <span class="string">'andy'</span>, isDead: <span class="literal">false</span>, age: <span class="number">11</span>, addr: <span class="string">'shanghai'</span>&#125;;</span><br><span class="line"></span><br><span class="line">JSON.stringify(user, <span class="built_in">null</span>, <span class="string">'\t'</span>);</span><br><span class="line"><span class="string">"&#123;</span></span><br><span class="line"><span class="string">"</span>name<span class="string">": "</span>andy<span class="string">",</span></span><br><span class="line"><span class="string">"</span>isDead<span class="string">": false,</span></span><br><span class="line"><span class="string">"</span>age<span class="string">": 11,</span></span><br><span class="line"><span class="string">"</span>addr<span class="string">": "</span>shanghai<span class="string">"</span></span><br><span class="line"><span class="string">&#125;"</span></span><br></pre></td></tr></table></figure></p><p><code>功能3： 搞笑</code><br><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">JSON.stringify(user, <span class="literal">null</span>, 'good');</span><br><span class="line"><span class="string">"&#123;</span></span><br><span class="line">good<span class="string">"name"</span>: <span class="string">"andy"</span>,</span><br><span class="line">good<span class="string">"isDead"</span>: false,</span><br><span class="line">good<span class="string">"age"</span>: <span class="number">11</span>,</span><br><span class="line">good<span class="string">"addr"</span>: <span class="string">"shanghai"</span></span><br><span class="line">&#125;<span class="string">"</span></span><br></pre></td></tr></table></figure></p><h2 id="2-3-深拷贝"><a href="#2-3-深拷贝" class="headerlink" title="2.3. 深拷贝"></a>2.3. 深拷贝</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> user = &#123;<span class="attr">name</span>: <span class="string">'andy'</span>, <span class="attr">isDead</span>: <span class="literal">false</span>, <span class="attr">age</span>: <span class="number">11</span>, <span class="attr">addr</span>: <span class="string">'shanghai'</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> temp = <span class="built_in">JSON</span>.stringify(user);</span><br><span class="line"><span class="keyword">var</span> user2 = <span class="built_in">JSON</span>.parse(temp);</span><br></pre></td></tr></table></figure><h1 id="3-其他"><a href="#3-其他" class="headerlink" title="3. 其他"></a>3. 其他</h1><p>JSON.parse() 其实也是支持第二个参数的。功能类似于JSON.stringify的第二个参数的功能。</p><h1 id="4-参考"><a href="#4-参考" class="headerlink" title="4. 参考"></a>4. 参考</h1><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify" target="_blank" rel="noopener">MDN JSON.stringify()</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1-语法&quot;&gt;&lt;a href=&quot;#1-语法&quot; class=&quot;headerlink&quot; title=&quot;1. 语法&quot;&gt;&lt;/a&gt;1. 语法&lt;/h1&gt;&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pr
      
    
    </summary>
    
    
      <category term="json" scheme="https://wdd.js.org/tags/json/"/>
    
  </entry>
  
  <entry>
    <title>手写可配置的express &amp; nodejs的代理</title>
    <link href="https://wdd.js.org/write-configurable-nodejs-http-proxy.html"/>
    <id>https://wdd.js.org/write-configurable-nodejs-http-proxy.html</id>
    <published>2018-02-09T05:24:35.000Z</published>
    <updated>2018-02-09T07:49:21.000Z</updated>
    
    <content type="html"><![CDATA[<p>nodejs比较好的代理包有：<a href="https://github.com/nodejitsu/node-http-proxy" target="_blank" rel="noopener">node-http-proxy</a>和<a href="https://github.com/chimurai/http-proxy-middleware" target="_blank" rel="noopener">http-proxy-middleware</a>。这两个我都用过，它们的优点自不用说，只说说缺点：<code>它们不能从配置文件里读取代理配置。每添加一个拦截路径都需要多加一个接口调用。</code></p><p><img src="http://p3alsaatj.bkt.clouddn.com/20180209132526_lgeTcJ_bVVFlt.jpeg" alt=""></p><p>所以，我需要自己写一个http代理，要包含一下功能：</p><ol><li>从配置文件里读取代理配置</li><li>可以路径重写</li></ol><p>这样做的好处是：<code>新增服务只需要在配置文件上加上该服务，无需修改业务逻辑</code></p><h1 id="1-config-default-js"><a href="#1-config-default-js" class="headerlink" title="1. /config/default.js"></a>1. /config/default.js</h1><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line"><span class="string">"ENV"</span>:<span class="string">"dev"</span>,</span><br><span class="line"><span class="string">"PORT"</span>:<span class="string">"8088"</span>,</span><br><span class="line"></span><br><span class="line"><span class="string">"maxAge"</span>: <span class="number">10</span>,</span><br><span class="line"></span><br><span class="line"><span class="string">"proxy"</span>:&#123;</span><br><span class="line"><span class="string">"olap"</span>:&#123;</span><br><span class="line"><span class="string">"host"</span>:<span class="string">"172.16.200.225"</span>,</span><br><span class="line"><span class="string">"port"</span>:<span class="string">"8092"</span>,</span><br><span class="line"><span class="string">"form"</span>:<span class="string">""</span>,</span><br><span class="line"><span class="string">"to"</span>:<span class="string">""</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">"qc"</span>:&#123;</span><br><span class="line"><span class="string">"host"</span>:<span class="string">"192.168.40.231"</span>,</span><br><span class="line"><span class="string">"port"</span>:<span class="string">"30088"</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">"api"</span>:&#123;</span><br><span class="line"><span class="string">"host"</span>:<span class="string">"192.168.40.231"</span>,</span><br><span class="line"><span class="string">"port"</span>:<span class="string">"30412"</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">"ocm"</span>:&#123;</span><br><span class="line"><span class="string">"host"</span>: process.env.ocm_host || <span class="string">"192.168.40.119"</span>,</span><br><span class="line"><span class="string">"port"</span>: process.env.ocm_port || <span class="string">"31003"</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="2-app-js"><a href="#2-app-js" class="headerlink" title="2. /app.js"></a>2. /app.js</h1><p>将所有要走代理的路径前必需加上 <code>/p</code>, 这个是我的个人配置，当然也可以是其他的名字。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> express = <span class="keyword">require</span>(<span class="string">'express'</span>);</span><br><span class="line"><span class="keyword">var</span> compression = <span class="keyword">require</span>(<span class="string">'compression'</span>);</span><br><span class="line"><span class="keyword">var</span> path = <span class="keyword">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="keyword">var</span> config = <span class="keyword">require</span>(<span class="string">'config'</span>);</span><br><span class="line"><span class="keyword">var</span> log4js = <span class="keyword">require</span>(<span class="string">'log4js'</span>);</span><br><span class="line"><span class="keyword">var</span> wsProxyConfig = config.get(<span class="string">'proxy'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> routes = <span class="keyword">require</span>(<span class="string">'./routes/index'</span>);</span><br><span class="line"><span class="keyword">var</span> views = <span class="keyword">require</span>(<span class="string">'./routes/views'</span>);</span><br><span class="line"><span class="keyword">var</span> proxy = <span class="keyword">require</span>(<span class="string">'./routes/proxy'</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.<span class="keyword">use</span>(<span class="string">'/p'</span>,proxy);</span><br></pre></td></tr></table></figure><h1 id="3-routes-proxy-js"><a href="#3-routes-proxy-js" class="headerlink" title="3. /routes/proxy.js"></a>3. /routes/proxy.js</h1><figure class="highlight qml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line"><span class="comment">// config是一个第三方包，它的功能是</span></span><br><span class="line"><span class="comment">// 自动根据环境变量帮你读取config目录下</span></span><br><span class="line"><span class="comment">// 的配置文件，默认会读取default.json，</span></span><br><span class="line"><span class="comment">// config支持很多文件类型。</span></span><br><span class="line"><span class="keyword">var</span> config = <span class="built_in">require</span>(<span class="string">'config'</span>);</span><br><span class="line"><span class="keyword">var</span> request = <span class="built_in">require</span>(<span class="string">'request'</span>);</span><br><span class="line"><span class="keyword">var</span> log4js = <span class="built_in">require</span>(<span class="string">'log4js'</span>);</span><br><span class="line"><span class="keyword">var</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> router = express.Router();</span><br><span class="line"><span class="comment">// 此处就是获取配置文件的proxy项了</span></span><br><span class="line"><span class="keyword">var</span> proxyConfig = config.get(<span class="string">'proxy'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 这里记录代理的日志</span></span><br><span class="line">log4js.configure(&#123;</span><br><span class="line">  <span class="attribute">appenders</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="attribute">type</span>: <span class="string">'file'</span>,</span><br><span class="line">    <span class="attribute">filename</span>: <span class="string">'./logs/all-proxy-logs.log'</span>,</span><br><span class="line">    <span class="attribute">maxLogSize</span>: <span class="number">10</span>*<span class="number">1024</span>*<span class="number">1024</span>, <span class="comment">//max 10mb</span></span><br><span class="line">    <span class="attribute">backups</span>: <span class="number">5</span>,</span><br><span class="line">    <span class="attribute">compress</span>: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="attribute">type</span>: <span class="string">'stdout'</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">var</span> logger = log4js.getLogger(<span class="string">'proxy'</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">router.all(<span class="string">'/:apiName/*'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res, next</span>) </span>&#123;</span><br><span class="line"> <span class="comment">// apiName 必需要对应配置文件的proxy的属性名</span></span><br><span class="line"> <span class="keyword">var</span> apiName = req.params.apiName;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">if</span>(!apiName)&#123;</span><br><span class="line"> res.status(<span class="number">404</span>).end(<span class="string">'api not found'</span>);</span><br><span class="line"> &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 如果apiName不在配置文件里，则报500</span></span><br><span class="line"> <span class="keyword">else</span> <span class="keyword">if</span>(!proxyConfig[apiName])&#123;</span><br><span class="line"> res.status(<span class="number">500</span>).end(<span class="string">'api has no config'</span>);</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="title">else</span>&#123;</span><br><span class="line">     <span class="comment">// originUrl是原始的url</span></span><br><span class="line">     <span class="comment">// 例如 /p/qc/calls</span></span><br><span class="line"> <span class="keyword">var</span> originalUrl = req.originalUrl;</span><br><span class="line"> <span class="keyword">var</span> api = proxyConfig[apiName];</span><br><span class="line"> <span class="keyword">var</span> <span class="built_in">url</span> = originalUrl.replace(<span class="string">'/p'</span>,<span class="string">''</span>);</span><br><span class="line"></span><br><span class="line"> <span class="built_in">url</span> = <span class="string">`http://<span class="subst">$&#123;api.host&#125;</span>:<span class="subst">$&#123;api.port&#125;</span>`</span> + <span class="built_in">url</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 某些需要路径重写的地方</span></span><br><span class="line"> <span class="keyword">if</span>(api.form &amp;&amp; api.to)&#123;</span><br><span class="line"> <span class="built_in">url</span> = <span class="built_in">url</span>.replace(api.form, api.to);</span><br><span class="line"> &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 必须要删除这个host</span></span><br><span class="line">        <span class="comment">// 因为本地测试时，这个host是localhost</span></span><br><span class="line">        <span class="comment">// 这会导致服务端报错</span></span><br><span class="line"> <span class="keyword">delete</span> req.headers.host;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 修改好的请求头</span></span><br><span class="line"> <span class="keyword">var</span> option = &#123;</span><br><span class="line"> <span class="attribute">url</span>: <span class="built_in">url</span>,</span><br><span class="line"> <span class="attribute">headers</span>: req.headers</span><br><span class="line"> &#125;;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 使用request发起请求</span></span><br><span class="line"> <span class="keyword">var</span> proxy = request(option);</span><br><span class="line"> <span class="comment">// 此处是关键，将请求流写入代理，将代理的响应写入原始响应</span></span><br><span class="line"> req.pipe(proxy);</span><br><span class="line"> proxy.pipe(res);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 代理结束响应时，原始请求结束，并输出日志</span></span><br><span class="line"> proxy.on(<span class="string">'end'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"> <span class="keyword">var</span> log = <span class="string">`<span class="subst">$&#123;req.method&#125;</span> <span class="subst">$&#123;res.statusCode&#125;</span> <span class="subst">$&#123;req.originalUrl&#125;</span> ---&gt; <span class="subst">$&#123;option.url&#125;</span> <span class="subst">$&#123;req.headers.sessionid&#125;</span>`</span>;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">if</span>(res.statusCode &lt; <span class="number">400</span>)&#123;</span><br><span class="line"> logger.info(log);</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="title">else</span>&#123;</span><br><span class="line"> logger.error(log);</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> res.end();</span><br><span class="line"> &#125;);</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = router;</span><br></pre></td></tr></table></figure><h1 id="4-相关第三方模块"><a href="#4-相关第三方模块" class="headerlink" title="4. 相关第三方模块"></a>4. 相关第三方模块</h1><ul><li><a href="https://github.com/lorenwest/node-config" target="_blank" rel="noopener">node-config</a></li><li><a href="https://github.com/request/request" target="_blank" rel="noopener">request</a></li><li><a href="https://github.com/nomiddlename/log4js-node" target="_blank" rel="noopener">log4js-node</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;nodejs比较好的代理包有：&lt;a href=&quot;https://github.com/nodejitsu/node-http-proxy&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;node-http-proxy&lt;/a&gt;和&lt;a href=&quot;https:/
      
    
    </summary>
    
    
      <category term="代理" scheme="https://wdd.js.org/tags/%E4%BB%A3%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>mac-sublime-shortcut-collector</title>
    <link href="https://wdd.js.org/mac-sublime-shortcut-collector.html"/>
    <id>https://wdd.js.org/mac-sublime-shortcut-collector.html</id>
    <published>2018-02-09T05:22:22.000Z</published>
    <updated>2018-02-09T07:46:33.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-对应关系"><a href="#1-对应关系" class="headerlink" title="1. 对应关系"></a>1. 对应关系</h1><table><thead><tr><th>标志</th><th>键名</th></tr></thead><tbody><tr><td>⌘</td><td>command</td></tr><tr><td>⇧</td><td>shift</td></tr><tr><td>↩</td><td>回车</td></tr><tr><td>↑</td><td>上</td></tr><tr><td>↓</td><td>下</td></tr><tr><td>⌃</td><td>control</td></tr><tr><td>⌥</td><td>option</td></tr></tbody></table><p>红色标记的是常用的快捷键。</p><h1 id="2-编辑"><a href="#2-编辑" class="headerlink" title="2. 编辑"></a>2. 编辑</h1><table><thead><tr><th>按键</th><th>功能</th></tr></thead><tbody><tr><td><code>⌘ + X</code></td><td>剪切当前行</td></tr><tr><td><code>⌥ + 拖动鼠标</code></td><td>垂直选中</td></tr><tr><td><code>⌘ + ↩</code></td><td>在当前行之后换行，无论鼠标在哪里</td></tr><tr><td>⌘ + ⇧ + ↩</td><td>再当前行之前换行，无论鼠标在哪里</td></tr><tr><td><code>⌘ + ⌃ + ↑</code></td><td>向上移动整行或者整段</td></tr><tr><td><code>⌘ + ⌃ + ↓</code></td><td>向下移动正行或者整段</td></tr><tr><td><code>⌘ + L</code></td><td>选择正行，重复按会向下再选择整行</td></tr><tr><td><code>⌘ + D</code></td><td>选中单词，重复按会向下选择相同的单词</td></tr><tr><td><code>⌃ + ⌘ + G</code></td><td>选中所有你选中的单词，比如先选中name这儿单词，然后按下这个快捷键，则当前文件里所有的name都会被选中</td></tr><tr><td>⌃ + ⇧ + ↑</td><td>Extra cursor on the line above</td></tr><tr><td>⌃ + ⇧ + ↓</td><td>Extra cursor on the line below</td></tr><tr><td>⌃ + M</td><td>跳到回应圆括号或大括号的结尾</td></tr><tr><td>⌃ + ⇧ + M</td><td>跳到回应圆括号或大括号的结尾，并选中这些内容</td></tr><tr><td>⌃ + A</td><td>跳到一行的最左边，光标右边有可能不是字母</td></tr><tr><td><code>⌘ + Left</code></td><td>调到一行文本的左边，光标右边一定跟着字母</td></tr><tr><td><code>⌃ + E, ⌘ + Right</code></td><td>调到一行的最右边</td></tr><tr><td><code>⌘ + K, ⌘ + K</code></td><td>删除光标所在行</td></tr><tr><td>⌘ + K + ⌫</td><td>删除光标所在位置到一行开头</td></tr><tr><td>⌘ + ]</td><td>缩进当前行或者段落</td></tr><tr><td>⌘ + [</td><td>取消缩进当前行或者段落</td></tr><tr><td><code>⌘ + ⇧ + D</code></td><td>复制当前行</td></tr><tr><td>⌘ + J</td><td>使当前行和当前行的下一行合并成一行</td></tr><tr><td><code>⌘ + /</code></td><td>注释或者取消注释当前行</td></tr><tr><td>⌘ + ⌥ + /</td><td>Block comment current selection</td></tr><tr><td>⌘ + Y</td><td>重复上一个快捷键</td></tr><tr><td><code>⌘ + ⇧ + V</code></td><td>粘贴并自动缩进</td></tr><tr><td>⌃ + Space</td><td>Select next auto-complete suggestion</td></tr><tr><td>⌃ + U</td><td>Soft undo; jumps to your last change before undoing change when repeated</td></tr><tr><td>⌃ + ⇧ + Up</td><td>Column selection up</td></tr><tr><td>⌃ + ⇧ + Down</td><td>Column selection down</td></tr><tr><td>⌃ + ⇧ + W</td><td>Wrap Selection in html tag</td></tr><tr><td>⌃ + ⇧ + K</td><td>Delete current line of cursor</td></tr></tbody></table><h1 id="3-导航"><a href="#3-导航" class="headerlink" title="3. 导航"></a>3. 导航</h1><table><thead><tr><th>按键</th><th>功能</th></tr></thead><tbody><tr><td>⌘ + P or ⌘ + T</td><td>按照文件名打开文件</td></tr><tr><td>⌘ + R</td><td>Goto symbol</td></tr><tr><td><code>⌃ + G</code></td><td>跳到制定行</td></tr></tbody></table><h1 id="4-通用"><a href="#4-通用" class="headerlink" title="4. 通用"></a>4. 通用</h1><table><thead><tr><th>按键</th><th>功能</th></tr></thead><tbody><tr><td>⌘ + ⇧ + P</td><td>Command Palette</td></tr><tr><td>⌃ + `</td><td>Python Console</td></tr><tr><td>⌃ + ⌘ + F</td><td>Toggle fullscreen mode</td></tr><tr><td>⌃ + ⇧ + ⌘ + F</td><td>Toggle distraction-free mode</td></tr><tr><td>⌘ + K, ⌘ + B</td><td>Toggle side bar</td></tr><tr><td>⌃ + ⇧ + P</td><td>Show scope in status bar</td></tr></tbody></table><h1 id="5-查找／替换"><a href="#5-查找／替换" class="headerlink" title="5. 查找／替换"></a>5. 查找／替换</h1><table><thead><tr><th>按键</th><th>功能</th></tr></thead><tbody><tr><td><code>⌘ + F</code></td><td>查找</td></tr><tr><td><code>⌘ + ⌥ + F</code></td><td>替换</td></tr><tr><td>⌘ + ⇧ + F</td><td>在文件中查找</td></tr></tbody></table><h1 id="6-滚动"><a href="#6-滚动" class="headerlink" title="6. 滚动"></a>6. 滚动</h1><table><thead><tr><th>按键</th><th>功能</th></tr></thead><tbody><tr><td>⌃ + V</td><td>向下滚动一页</td></tr><tr><td>⌃ + L</td><td>使当前行处于显示器的中央</td></tr><tr><td><code>⌘ + Down</code></td><td>滚动到文件结尾</td></tr><tr><td><code>⌘ + Up</code></td><td>滚动到文件开始</td></tr></tbody></table><h1 id="7-标签页"><a href="#7-标签页" class="headerlink" title="7. 标签页"></a>7. 标签页</h1><table><thead><tr><th>按键</th><th>功能</th></tr></thead><tbody><tr><td>⌘ + ⇧ + t</td><td>打开最近关闭的标签页</td></tr><tr><td>⌘ + [NUM]</td><td>调到制定标签页 1-9</td></tr><tr><td>⌘ + 0</td><td>调到第10个标签页</td></tr><tr><td><code>⌘ + ⇧ + [</code></td><td>切换成左边的标签页</td></tr><tr><td><code>⌘ + ⇧ + ]</code></td><td>切换成右边的标签页</td></tr><tr><td><code>^ + Tab</code></td><td>顺序跳转到最近使用的标签页</td></tr><tr><td>⇧ + ^ + Tab</td><td>逆序跳转最近使用的标签页</td></tr></tbody></table><h1 id="8-窗口分割"><a href="#8-窗口分割" class="headerlink" title="8. 窗口分割"></a>8. 窗口分割</h1><table><thead><tr><th>按键</th><th>功能</th></tr></thead><tbody><tr><td>⌘ + ⌥ + 1</td><td>切换成单窗口</td></tr><tr><td>⌘ + ⌥ + 2</td><td>切换窗口成2栏</td></tr><tr><td>⌘ + ⌥ + 3</td><td>切换窗口成3栏</td></tr><tr><td>⌘ + ⌥ + 4</td><td>切换窗口成4栏</td></tr><tr><td>⌘ + ⌥ + 5</td><td>Set view to grid (4 groups)</td></tr><tr><td>⌃ + [NUM]</td><td>Jump to group where num is 1-4</td></tr><tr><td>⌃ + ⇧ + [NUM]</td><td>Move file to specified group where num is 1-4</td></tr></tbody></table><h1 id="9-书签"><a href="#9-书签" class="headerlink" title="9. 书签"></a>9. 书签</h1><table><thead><tr><th>按键</th><th>功能</th></tr></thead><tbody><tr><td><code>⌘ + F2</code></td><td>设置或取消设置书签</td></tr><tr><td><code>F2</code></td><td>调到下一个书签</td></tr><tr><td><code>⇧ + F2</code></td><td>跳到上一个书签</td></tr><tr><td><code>⇧ + ⌘ + F2</code></td><td>清空所有书签</td></tr></tbody></table><h1 id="10-文本管理"><a href="#10-文本管理" class="headerlink" title="10. 文本管理"></a>10. 文本管理</h1><table><thead><tr><th>按键</th><th>功能</th></tr></thead><tbody><tr><td>⌘ + K, ⌘ + U</td><td>转成大写</td></tr><tr><td>⌘ + K, ⌘ + L</td><td>转成小写</td></tr><tr><td>⌘ + ⌃ + up, ⌘ + ⌃ + down</td><td>Clip text upwards / downwards</td></tr></tbody></table><h1 id="11-常用插件快捷键"><a href="#11-常用插件快捷键" class="headerlink" title="11. 常用插件快捷键"></a>11. 常用插件快捷键</h1><table><thead><tr><th>插件名</th><th>按键</th><th>功能</th></tr></thead><tbody><tr><td>omniMarkupPreview</td><td>⌘ + ⌥ + o</td><td>预览markdown</td></tr><tr><td>viewInBrowse</td><td>⌃ + ⌥ + c</td><td>在谷歌浏览器中预览html</td></tr></tbody></table><h1 id="12-参考"><a href="#12-参考" class="headerlink" title="12. 参考"></a>12. 参考</h1><ul><li><a href="http://docs.sublimetext.info/en/latest/reference/keyboard_shortcuts_osx.html" target="_blank" rel="noopener">Keyboard Shortcuts - OSX</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1-对应关系&quot;&gt;&lt;a href=&quot;#1-对应关系&quot; class=&quot;headerlink&quot; title=&quot;1. 对应关系&quot;&gt;&lt;/a&gt;1. 对应关系&lt;/h1&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;标志&lt;/th&gt;
&lt;th&gt;键名&lt;/th&gt;
&lt;/tr&gt;
&lt;/th
      
    
    </summary>
    
    
      <category term="sublime" scheme="https://wdd.js.org/tags/sublime/"/>
    
  </entry>
  
  <entry>
    <title>ECharts 轮流高亮中国地图各个省份</title>
    <link href="https://wdd.js.org/echarts-highlight-china-map.html"/>
    <id>https://wdd.js.org/echarts-highlight-china-map.html</id>
    <published>2018-02-09T05:16:53.000Z</published>
    <updated>2018-02-09T05:59:59.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://p3alsaatj.bkt.clouddn.com/20180209131759_k10o0Z_bVVWEB.jpeg" alt=""></p><p>最早我是想通过<code>dispatchAction</code>方法去改变选中的省份，但是没有起作用，如果你知道这个方法怎么实现，麻烦你可以告诉我。<br>我实现的方法是另外一种。</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">dispatchAction(&#123;</span><br><span class="line">    <span class="keyword">type</span>: <span class="string">'geoSelect'</span>,</span><br><span class="line">    <span class="comment">// 可选，系列 index，可以是一个数组指定多个系列</span></span><br><span class="line">    seriesIndex?: <span class="built_in">number</span>|<span class="built_in">Array</span>,</span><br><span class="line">    <span class="comment">// 可选，系列名称，可以是一个数组指定多个系列</span></span><br><span class="line">    seriesName?: <span class="built_in">string</span>|<span class="built_in">Array</span>,</span><br><span class="line">    <span class="comment">// 数据的 index，如果不指定也可以通过 name 属性根据名称指定数据</span></span><br><span class="line">    dataIndex?: <span class="built_in">number</span>,</span><br><span class="line">    <span class="comment">// 可选，数据名称，在有 dataIndex 的时候忽略</span></span><br><span class="line">    name?: <span class="built_in">string</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>后来我改变了一个方法。这个方法的核心思路是定时获取图标的配置，然后更新配置，最后在设置配置。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> myChart = echarts.init(<span class="built_in">document</span>.getElementById(<span class="string">'china-map'</span>));</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> COLORS = [<span class="string">"#070093"</span>, <span class="string">"#1c3fbf"</span>, <span class="string">"#1482e5"</span>, <span class="string">"#70b4eb"</span>, <span class="string">"#b4e0f3"</span>, <span class="string">"#ffffff"</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 指定图表的配置项和数据</span></span><br><span class="line"><span class="keyword">var</span> option = &#123;</span><br><span class="line">    tooltip: &#123;</span><br><span class="line">        trigger: <span class="string">'item'</span>,</span><br><span class="line">        formatter: <span class="string">'&#123;b&#125;'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    series: [</span><br><span class="line">        &#123;</span><br><span class="line">            name: <span class="string">'中国'</span>,</span><br><span class="line">            type: <span class="string">'map'</span>,</span><br><span class="line">            mapType: <span class="string">'china'</span>,</span><br><span class="line">            selectedMode : <span class="string">'single'</span>,</span><br><span class="line">            label: &#123;</span><br><span class="line">                normal: &#123;</span><br><span class="line">                    show: <span class="literal">true</span></span><br><span class="line">                &#125;,</span><br><span class="line">                emphasis: &#123;</span><br><span class="line">                    show: <span class="literal">true</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            data:[</span><br><span class="line">                <span class="comment">// 默认高亮安徽省</span></span><br><span class="line">                &#123;<span class="attr">name</span>:<span class="string">'安徽'</span>, <span class="attr">selected</span>:<span class="literal">true</span>&#125;</span><br><span class="line">            ],</span><br><span class="line">            itemStyle: &#123;</span><br><span class="line">                normal: &#123;</span><br><span class="line">                    areaColor: <span class="string">'rgba(255,255,255,0.5)'</span>,</span><br><span class="line">                    color: <span class="string">'#000000'</span>,</span><br><span class="line">                    shadowBlur: <span class="number">200</span>,</span><br><span class="line">                    shadowColor: <span class="string">'rgba(0, 0, 0, 0.5)'</span></span><br><span class="line">                &#125;,</span><br><span class="line">                emphasis:&#123;</span><br><span class="line">                    areaColor: <span class="string">'#3be2fb'</span>,</span><br><span class="line">                    color: <span class="string">'#000000'</span>,</span><br><span class="line">                    shadowBlur: <span class="number">200</span>,</span><br><span class="line">                    shadowColor: <span class="string">'rgba(0, 0, 0, 0.5)'</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用刚指定的配置项和数据显示图表。</span></span><br><span class="line">myChart.setOption(option);</span><br><span class="line"></span><br><span class="line">myChart.on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">params</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(params);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> op = myChart.getOption();</span><br><span class="line">    <span class="keyword">var</span> data = op.series[<span class="number">0</span>].data;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> length = data.length;</span><br><span class="line"></span><br><span class="line">    data.some(<span class="function"><span class="keyword">function</span>(<span class="params">item, index</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(item.selected)&#123;</span><br><span class="line">            item.selected = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">var</span> next = (index + <span class="number">1</span>)%length;</span><br><span class="line">            data[next].selected = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    myChart.setOption(op);</span><br><span class="line"></span><br><span class="line">&#125;, <span class="number">3000</span>);</span><br></pre></td></tr></table></figure></p><h1 id="1-后续补充"><a href="#1-后续补充" class="headerlink" title="1. 后续补充"></a>1. 后续补充</h1><p>我从这里发现：<a href="https://github.com/ecomfe/echarts/issues/3282，选中地图的写法是这样的，而试了一下果然可以。主要是type要是`mapSelect`,而不是`geoSelect`" target="_blank" rel="noopener">https://github.com/ecomfe/echarts/issues/3282，选中地图的写法是这样的，而试了一下果然可以。主要是type要是`mapSelect`,而不是`geoSelect`</a><br><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">myChart</span><span class="selector-class">.dispatchAction</span>(&#123;</span><br><span class="line">    <span class="attribute">type</span>: <span class="string">'mapSelect'</span>,</span><br><span class="line">    <span class="comment">// 可选，系列 index，可以是一个数组指定多个系列</span></span><br><span class="line">    <span class="comment">// seriesIndex: 0,</span></span><br><span class="line">    <span class="comment">// 可选，系列名称，可以是一个数组指定多个系列</span></span><br><span class="line">    <span class="comment">// seriesName: string|Array,</span></span><br><span class="line">    <span class="comment">// 数据的 index，如果不指定也可以通过 name 属性根据名称指定数据</span></span><br><span class="line">    <span class="comment">// dataIndex: number,</span></span><br><span class="line">    <span class="comment">// 可选，数据名称，在有 dataIndex 的时候忽略</span></span><br><span class="line">    <span class="attribute">name</span>: <span class="string">'河北'</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;http://p3alsaatj.bkt.clouddn.com/20180209131759_k10o0Z_bVVWEB.jpeg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;最早我是想通过&lt;code&gt;dispatchAction&lt;/code&gt;方法去改变选中的省份
      
    
    </summary>
    
    
      <category term="echarts" scheme="https://wdd.js.org/tags/echarts/"/>
    
  </entry>
  
  <entry>
    <title>Python3笔记 列表方法详解</title>
    <link href="https://wdd.js.org/python3-list-methods-collect.html"/>
    <id>https://wdd.js.org/python3-list-methods-collect.html</id>
    <published>2018-02-09T05:15:13.000Z</published>
    <updated>2018-02-09T07:47:23.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-使用-或者list-创建列表"><a href="#1-使用-或者list-创建列表" class="headerlink" title="1. 使用[]或者list()创建列表"></a>1. 使用<code>[]</code>或者<code>list()</code>创建列表</h1><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">user = []</span><br><span class="line">user = list()</span><br></pre></td></tr></table></figure><h1 id="2-使用list-可以将其他类型转换成列表"><a href="#2-使用list-可以将其他类型转换成列表" class="headerlink" title="2. 使用list()可以将其他类型转换成列表"></a>2. 使用<code>list()</code>可以将其他类型转换成列表</h1><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将字符串转成列表</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; list(<span class="string">'abcde'</span>)</span><br><span class="line">[<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将元祖转成列表</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; list((<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>))</span><br><span class="line">[<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>]</span><br></pre></td></tr></table></figure><h1 id="3-使用-offset-获取元素-或-修改元素"><a href="#3-使用-offset-获取元素-或-修改元素" class="headerlink" title="3. 使用[offset]获取元素 或 修改元素"></a>3. 使用<code>[offset]</code>获取元素 或 修改元素</h1><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;</span>&gt; users = [<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>,<span class="string">'d'</span>,<span class="string">'e'</span>]</span><br><span class="line"><span class="comment"># 可以使用整数来获取某个元素</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users[<span class="number">0</span>]</span><br><span class="line"><span class="string">'a'</span></span><br><span class="line"><span class="comment"># 可以使用负整数来表示从尾部获取某个元素</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users[-<span class="number">1</span>]</span><br><span class="line"><span class="string">'e'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 数组越界会报错</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users[<span class="number">100</span>]</span><br><span class="line">Traceback (most recent call last)<span class="symbol">:</span></span><br><span class="line">  File <span class="string">"&lt;stdin&gt;"</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;<span class="class"><span class="keyword">module</span>&gt;</span></span><br><span class="line"><span class="symbol">IndexError:</span> list index out of range</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users[-<span class="number">100</span>]</span><br><span class="line">Traceback (most recent call last)<span class="symbol">:</span></span><br><span class="line">  File <span class="string">"&lt;stdin&gt;"</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;<span class="class"><span class="keyword">module</span>&gt;</span></span><br><span class="line"><span class="symbol">IndexError:</span> list index out of range</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改某个元素</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users[<span class="number">0</span>] = <span class="string">'wdd'</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users</span><br><span class="line">[<span class="string">'wdd'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt;</span><br></pre></td></tr></table></figure><h1 id="4-列表切片与提取元素"><a href="#4-列表切片与提取元素" class="headerlink" title="4. 列表切片与提取元素"></a>4. 列表切片与提取元素</h1><p>列表的切片或者提取之后仍然是一个列表<br>形式如：<code>list[start:end:step]</code><br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;</span>&gt; users</span><br><span class="line">[<span class="string">'wdd'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>]</span><br><span class="line"><span class="comment"># 正常截取 注意这里并不会截取到users[2]</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users[<span class="number">0</span><span class="symbol">:</span><span class="number">2</span>]</span><br><span class="line">[<span class="string">'wdd'</span>, <span class="string">'b'</span>]</span><br><span class="line"><span class="comment"># 也可从尾部截取</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users[<span class="number">0</span><span class="symbol">:-</span><span class="number">2</span>]</span><br><span class="line">[<span class="string">'wdd'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>]</span><br><span class="line"><span class="comment"># 这样可以获取所有的元素</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users[<span class="symbol">:</span>]</span><br><span class="line">[<span class="string">'wdd'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>]</span><br><span class="line"><span class="comment"># 也可以加上步长参数</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users[<span class="number">0</span><span class="symbol">:</span><span class="number">4</span><span class="symbol">:</span><span class="number">2</span>]</span><br><span class="line">[<span class="string">'wdd'</span>, <span class="string">'c'</span>]</span><br><span class="line"><span class="comment"># 也可以通过这种方式去将列表取反</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users[<span class="symbol">:</span><span class="symbol">:-</span><span class="number">1</span>]</span><br><span class="line">[<span class="string">'e'</span>, <span class="string">'d'</span>, <span class="string">'c'</span>, <span class="string">'b'</span>, <span class="string">'wdd'</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 注意切片时，偏移量可以越界，越界之后不会报错，仍然按照界限来处理 例如开始偏移量如果小于0，那么仍然会按照0去计算。</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users</span><br><span class="line">[<span class="string">'wdd'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users[-<span class="number">100</span><span class="symbol">:</span><span class="number">3</span>]</span><br><span class="line">[<span class="string">'wdd'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users[-<span class="number">100</span><span class="symbol">:</span><span class="number">100</span>]</span><br><span class="line">[<span class="string">'wdd'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt;</span><br></pre></td></tr></table></figure></p><h1 id="5-使用append-添加元素至尾部"><a href="#5-使用append-添加元素至尾部" class="headerlink" title="5. 使用append()添加元素至尾部"></a>5. 使用<code>append()</code>添加元素至尾部</h1><p>形式如：<code>list.append(item)</code><br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;</span>&gt; users</span><br><span class="line">[<span class="string">'wdd'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users.append(<span class="string">'ddw'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users</span><br><span class="line">[<span class="string">'wdd'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>, <span class="string">'ddw'</span>]</span><br></pre></td></tr></table></figure></p><h1 id="6-使用extend-或-合并列表"><a href="#6-使用extend-或-合并列表" class="headerlink" title="6. 使用extend()或+=合并列表"></a>6. 使用<code>extend()</code>或<code>+=</code>合并列表</h1><p>形式如：<code>list1.extend(list2)</code><br>这两个方法都会直接修改原列表<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;</span>&gt; users</span><br><span class="line">[<span class="string">'wdd'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>, <span class="string">'ddw'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; names</span><br><span class="line">[<span class="string">'heihei'</span>, <span class="string">'haha'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users.extend(names)</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users</span><br><span class="line">[<span class="string">'wdd'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>, <span class="string">'ddw'</span>, <span class="string">'heihei'</span>, <span class="string">'haha'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users += names</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users</span><br><span class="line">[<span class="string">'wdd'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>, <span class="string">'ddw'</span>, <span class="string">'heihei'</span>, <span class="string">'haha'</span>, <span class="string">'heihei'</span>, <span class="string">'haha'</span>]</span><br></pre></td></tr></table></figure></p><h1 id="7-使用insert-在指定位置插入元素"><a href="#7-使用insert-在指定位置插入元素" class="headerlink" title="7. 使用insert()在指定位置插入元素"></a>7. 使用<code>insert()</code>在指定位置插入元素</h1><p>形式如：<code>list.insert(offset, item)</code><br>insert也不存在越界的问题，偏移量正负都行，越界之后会自动伸缩到界限之内，并不会报错<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;</span>&gt; users</span><br><span class="line">[<span class="string">'wdd'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>, <span class="string">'ddw'</span>, <span class="string">'heihei'</span>, <span class="string">'haha'</span>, <span class="string">'heihei'</span>, <span class="string">'haha'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users.insert(<span class="number">0</span>,<span class="string">'xiaoxiao'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users</span><br><span class="line">[<span class="string">'xiaoxiao'</span>, <span class="string">'wdd'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>, <span class="string">'ddw'</span>, <span class="string">'heihei'</span>, <span class="string">'haha'</span>, <span class="string">'heihei'</span>, <span class="string">'haha'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users.insert(-<span class="number">1</span>,<span class="string">'-xiaoxiao'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users</span><br><span class="line">[<span class="string">'xiaoxiao'</span>, <span class="string">'wdd'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>, <span class="string">'ddw'</span>, <span class="string">'heihei'</span>, <span class="string">'haha'</span>, <span class="string">'heihei'</span>, <span class="string">'-xiaoxiao'</span>, <span class="string">'haha'</span>]</span><br><span class="line"><span class="comment"># 下面-100肯定越界了</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users.insert(-<span class="number">100</span>,<span class="string">'-xiaoxiao'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users</span><br><span class="line">[<span class="string">'-xiaoxiao'</span>, <span class="string">'xiaoxiao'</span>, <span class="string">'wdd'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>, <span class="string">'ddw'</span>, <span class="string">'heihei'</span>, <span class="string">'haha'</span>, <span class="string">'heihei'</span>, <span class="string">'-xiaoxiao'</span>, <span class="string">'haha'</span>]</span><br><span class="line"><span class="comment"># 下面100也是越界了</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users.insert(<span class="number">100</span>,<span class="string">'-xiaoxiao'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users</span><br><span class="line">[<span class="string">'-xiaoxiao'</span>, <span class="string">'xiaoxiao'</span>, <span class="string">'wdd'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>, <span class="string">'ddw'</span>, <span class="string">'heihei'</span>, <span class="string">'haha'</span>, <span class="string">'heihei'</span>, <span class="string">'-xiaoxiao'</span>, <span class="string">'haha'</span>, <span class="string">'-xiaoxiao'</span>]</span><br></pre></td></tr></table></figure></p><h1 id="8-使用del删除某个元素"><a href="#8-使用del删除某个元素" class="headerlink" title="8. 使用del删除某个元素"></a>8. 使用<code>del</code>删除某个元素</h1><p>形式如：<code>del list[offset]</code><br>del是python的语句，而不是列表的方法，del删除不存在的元素时，也会提示越界<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;</span>&gt; users</span><br><span class="line">[<span class="string">'-xiaoxiao'</span>, <span class="string">'xiaoxiao'</span>, <span class="string">'wdd'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>, <span class="string">'ddw'</span>, <span class="string">'heihei'</span>, <span class="string">'haha'</span>, <span class="string">'heihei'</span>, <span class="string">'-xiaoxiao'</span>, <span class="string">'haha'</span>, <span class="string">'-xiaoxiao'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; del users[<span class="number">0</span>]</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users</span><br><span class="line">[<span class="string">'xiaoxiao'</span>, <span class="string">'wdd'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>, <span class="string">'ddw'</span>, <span class="string">'heihei'</span>, <span class="string">'haha'</span>, <span class="string">'heihei'</span>, <span class="string">'-xiaoxiao'</span>, <span class="string">'haha'</span>, <span class="string">'-xiaoxiao'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; del users[<span class="number">100</span>]</span><br><span class="line">Traceback (most recent call last)<span class="symbol">:</span></span><br><span class="line">  File <span class="string">"&lt;stdin&gt;"</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;<span class="class"><span class="keyword">module</span>&gt;</span></span><br><span class="line"><span class="symbol">IndexError:</span> list assignment index out of range</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; del users[-<span class="number">100</span>]</span><br><span class="line">Traceback (most recent call last)<span class="symbol">:</span></span><br><span class="line">  File <span class="string">"&lt;stdin&gt;"</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;<span class="class"><span class="keyword">module</span>&gt;</span></span><br><span class="line"><span class="symbol">IndexError:</span> list assignment index out of range</span><br></pre></td></tr></table></figure></p><h1 id="9-使用remove删除具有指定值的元素"><a href="#9-使用remove删除具有指定值的元素" class="headerlink" title="9. 使用remove删除具有指定值的元素"></a>9. 使用<code>remove</code>删除具有指定值的元素</h1><p>形式如：<code>list.remove(value)</code><br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;</span>&gt; users</span><br><span class="line">[<span class="string">'xiaoxiao'</span>, <span class="string">'wdd'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>, <span class="string">'ddw'</span>, <span class="string">'heihei'</span>, <span class="string">'haha'</span>, <span class="string">'heihei'</span>, <span class="string">'-xiaoxiao'</span>, <span class="string">'haha'</span>, <span class="string">'-xiaoxiao'</span>]</span><br><span class="line"><span class="comment"># 删除指定值'c'</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users.remove(<span class="string">'c'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users</span><br><span class="line">[<span class="string">'xiaoxiao'</span>, <span class="string">'wdd'</span>, <span class="string">'b'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>, <span class="string">'ddw'</span>, <span class="string">'heihei'</span>, <span class="string">'haha'</span>, <span class="string">'heihei'</span>, <span class="string">'-xiaoxiao'</span>, <span class="string">'haha'</span>, <span class="string">'-xiaoxiao'</span>]</span><br><span class="line"><span class="comment"># 删除不存在的值会报错</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users.remove(<span class="string">'alsdkfjalsdf'</span>)</span><br><span class="line">Traceback (most recent call last)<span class="symbol">:</span></span><br><span class="line">  File <span class="string">"&lt;stdin&gt;"</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;<span class="class"><span class="keyword">module</span>&gt;</span></span><br><span class="line"><span class="symbol">ValueError:</span> list.remove(x): x <span class="keyword">not</span> <span class="keyword">in</span> list</span><br><span class="line"><span class="comment"># 如果该值存在多个，那么只能删除到第一个</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users.remove(<span class="string">'haha'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users</span><br><span class="line">[<span class="string">'xiaoxiao'</span>, <span class="string">'wdd'</span>, <span class="string">'b'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>, <span class="string">'ddw'</span>, <span class="string">'heihei'</span>, <span class="string">'heihei'</span>, <span class="string">'-xiaoxiao'</span>, <span class="string">'haha'</span>, <span class="string">'-xiaoxiao'</span>]</span><br></pre></td></tr></table></figure></p><h1 id="10-使用pop-方式返回某个元素后，并在数组里删除它"><a href="#10-使用pop-方式返回某个元素后，并在数组里删除它" class="headerlink" title="10. 使用pop()方式返回某个元素后，并在数组里删除它"></a>10. 使用<code>pop()</code>方式返回某个元素后，并在数组里删除它</h1><p>形式如：<code>list.pop(offset=-1)</code> 偏移量默认等于-1，也就是删除最后的元素<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;</span>&gt; users</span><br><span class="line">[<span class="string">'xiaoxiao'</span>, <span class="string">'wdd'</span>, <span class="string">'b'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>, <span class="string">'ddw'</span>, <span class="string">'heihei'</span>, <span class="string">'heihei'</span>, <span class="string">'-xiaoxiao'</span>, <span class="string">'haha'</span>, <span class="string">'-xiaoxiao'</span>]</span><br><span class="line"><span class="comment"># 删除最后的元素</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users.pop()</span><br><span class="line"><span class="string">'-xiaoxiao'</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users</span><br><span class="line">[<span class="string">'xiaoxiao'</span>, <span class="string">'wdd'</span>, <span class="string">'b'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>, <span class="string">'ddw'</span>, <span class="string">'heihei'</span>, <span class="string">'heihei'</span>, <span class="string">'-xiaoxiao'</span>, <span class="string">'haha'</span>]</span><br><span class="line"><span class="comment"># 如果列表本身就是空的，那么pop时会报错</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; user.pop(<span class="number">0</span>)</span><br><span class="line">Traceback (most recent call last)<span class="symbol">:</span></span><br><span class="line">  File <span class="string">"&lt;stdin&gt;"</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;<span class="class"><span class="keyword">module</span>&gt;</span></span><br><span class="line"><span class="symbol">IndexError:</span> pop from empty list</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users.pop(<span class="number">0</span>)</span><br><span class="line"><span class="string">'xiaoxiao'</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users</span><br><span class="line">[<span class="string">'wdd'</span>, <span class="string">'b'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>, <span class="string">'ddw'</span>, <span class="string">'heihei'</span>, <span class="string">'heihei'</span>, <span class="string">'-xiaoxiao'</span>, <span class="string">'haha'</span>]</span><br><span class="line"><span class="comment"># 越界时也会报错</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users.pop(<span class="number">100</span>)</span><br><span class="line">Traceback (most recent call last)<span class="symbol">:</span></span><br><span class="line">  File <span class="string">"&lt;stdin&gt;"</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;<span class="class"><span class="keyword">module</span>&gt;</span></span><br><span class="line"><span class="symbol">IndexError:</span> pop index out of range</span><br></pre></td></tr></table></figure></p><h1 id="11-使用index-查询具有特定值的元素位置"><a href="#11-使用index-查询具有特定值的元素位置" class="headerlink" title="11. 使用index()查询具有特定值的元素位置"></a>11. 使用<code>index()</code>查询具有特定值的元素位置</h1><p>形式如：<code>list.index(value)</code><br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># index只会返回第一遇到该值得位置</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users</span><br><span class="line">[<span class="string">'wdd'</span>, <span class="string">'b'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>, <span class="string">'ddw'</span>, <span class="string">'heihei'</span>, <span class="string">'heihei'</span>, <span class="string">'-xiaoxiao'</span>, <span class="string">'haha'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users.index(<span class="string">'heihei'</span>)</span><br><span class="line"><span class="number">5</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果该值不存在，也会报错</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users.index(<span class="string">'laksdf'</span>)</span><br><span class="line">Traceback (most recent call last)<span class="symbol">:</span></span><br><span class="line">  File <span class="string">"&lt;stdin&gt;"</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;<span class="class"><span class="keyword">module</span>&gt;</span></span><br><span class="line"><span class="symbol">ValueError:</span> <span class="string">'laksdf'</span> is <span class="keyword">not</span> <span class="keyword">in</span> list</span><br></pre></td></tr></table></figure></p><h1 id="12-使用in判断值是否存在列表"><a href="#12-使用in判断值是否存在列表" class="headerlink" title="12. 使用in判断值是否存在列表"></a>12. 使用<code>in</code>判断值是否存在列表</h1><p>形式如：<code>value in list</code><br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;</span>&gt; users</span><br><span class="line">[<span class="string">'wdd'</span>, <span class="string">'b'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>, <span class="string">'ddw'</span>, <span class="string">'heihei'</span>, <span class="string">'heihei'</span>, <span class="string">'-xiaoxiao'</span>, <span class="string">'haha'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; <span class="string">'wdd'</span> in users</span><br><span class="line">True</span><br></pre></td></tr></table></figure></p><h1 id="13-使用count-记录特定值出现的次数"><a href="#13-使用count-记录特定值出现的次数" class="headerlink" title="13. 使用count()记录特定值出现的次数"></a>13. 使用<code>count()</code>记录特定值出现的次数</h1><p>形式如：<code>list.count(value)</code><br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;</span>&gt; users</span><br><span class="line">[<span class="string">'wdd'</span>, <span class="string">'b'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>, <span class="string">'ddw'</span>, <span class="string">'heihei'</span>, <span class="string">'heihei'</span>, <span class="string">'-xiaoxiao'</span>, <span class="string">'haha'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users.count(<span class="string">'heihei'</span>)</span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users.count(<span class="string">'h'</span>)</span><br><span class="line"><span class="number">0</span></span><br></pre></td></tr></table></figure></p><h1 id="14-使用join-将列表转为字符串"><a href="#14-使用join-将列表转为字符串" class="headerlink" title="14. 使用join()将列表转为字符串"></a>14. 使用<code>join()</code>将列表转为字符串</h1><p>形式如：<code>string.join(list)</code><br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;</span>&gt; users</span><br><span class="line">[<span class="string">'wdd'</span>, <span class="string">'b'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>, <span class="string">'ddw'</span>, <span class="string">'heihei'</span>, <span class="string">'heihei'</span>, <span class="string">'-xiaoxiao'</span>, <span class="string">'haha'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; <span class="string">','</span>.join(users)</span><br><span class="line"><span class="string">'wdd,b,d,e,ddw,heihei,heihei,-xiaoxiao,haha'</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; user</span><br><span class="line">[]</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; <span class="string">','</span>.join(user)</span><br><span class="line"><span class="string">''</span></span><br></pre></td></tr></table></figure></p><h1 id="15-使用sort-重新排列列表元素"><a href="#15-使用sort-重新排列列表元素" class="headerlink" title="15. 使用sort()重新排列列表元素"></a>15. 使用<code>sort()</code>重新排列列表元素</h1><p>形式如：list.sort()<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;</span>&gt; users</span><br><span class="line">[<span class="string">'wdd'</span>, <span class="string">'b'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>, <span class="string">'ddw'</span>, <span class="string">'heihei'</span>, <span class="string">'heihei'</span>, <span class="string">'-xiaoxiao'</span>, <span class="string">'haha'</span>]</span><br><span class="line"><span class="comment"># 默认是升序排序</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users.sort()</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users</span><br><span class="line">[<span class="string">'-xiaoxiao'</span>, <span class="string">'b'</span>, <span class="string">'d'</span>, <span class="string">'ddw'</span>, <span class="string">'e'</span>, <span class="string">'haha'</span>, <span class="string">'heihei'</span>, <span class="string">'heihei'</span>, <span class="string">'wdd'</span>]</span><br><span class="line"><span class="comment"># 加入reverse=True, 可以降序排序</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users.sort(reverse=True)</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users</span><br><span class="line">[<span class="string">'wdd'</span>, <span class="string">'heihei'</span>, <span class="string">'heihei'</span>, <span class="string">'haha'</span>, <span class="string">'e'</span>, <span class="string">'ddw'</span>, <span class="string">'d'</span>, <span class="string">'b'</span>, <span class="string">'-xiaoxiao'</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过匿名函数，传入函数进行自定义排序</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; students</span><br><span class="line">[&#123;<span class="string">'name'</span>: <span class="string">'wdd'</span>, <span class="string">'age'</span>: <span class="number">343</span>&#125;, &#123;<span class="string">'name'</span>: <span class="string">'ddw'</span>, <span class="string">'age'</span>: <span class="number">43</span>&#125;, &#123;<span class="string">'name'</span>: <span class="string">'jik'</span>, <span class="string">'age'</span>: <span class="number">90</span>&#125;]</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; students.sort(key=lambda <span class="symbol">item:</span> item[<span class="string">'age'</span>])</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; students</span><br><span class="line">[&#123;<span class="string">'name'</span>: <span class="string">'ddw'</span>, <span class="string">'age'</span>: <span class="number">43</span>&#125;, &#123;<span class="string">'name'</span>: <span class="string">'jik'</span>, <span class="string">'age'</span>: <span class="number">90</span>&#125;, &#123;<span class="string">'name'</span>: <span class="string">'wdd'</span>, <span class="string">'age'</span>: <span class="number">343</span>&#125;]</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; students.sort(key=lambda <span class="symbol">item:</span> item[<span class="string">'age'</span>], reverse=True)</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; students</span><br><span class="line">[&#123;<span class="string">'name'</span>: <span class="string">'wdd'</span>, <span class="string">'age'</span>: <span class="number">343</span>&#125;, &#123;<span class="string">'name'</span>: <span class="string">'jik'</span>, <span class="string">'age'</span>: <span class="number">90</span>&#125;, &#123;<span class="string">'name'</span>: <span class="string">'ddw'</span>, <span class="string">'age'</span>: <span class="number">43</span>&#125;]</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt;</span><br></pre></td></tr></table></figure></p><h1 id="16-使用reverse-将列表翻转"><a href="#16-使用reverse-将列表翻转" class="headerlink" title="16. 使用reverse()将列表翻转"></a>16. 使用<code>reverse()</code>将列表翻转</h1><p>形式如：list.reverse()<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;</span>&gt; users</span><br><span class="line">[<span class="string">'wdd'</span>, <span class="string">'heihei'</span>, <span class="string">'heihei'</span>, <span class="string">'haha'</span>, <span class="string">'e'</span>, <span class="string">'ddw'</span>, <span class="string">'d'</span>, <span class="string">'b'</span>, <span class="string">'-xiaoxiao'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users.reverse()</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users</span><br><span class="line">[<span class="string">'-xiaoxiao'</span>, <span class="string">'b'</span>, <span class="string">'d'</span>, <span class="string">'ddw'</span>, <span class="string">'e'</span>, <span class="string">'haha'</span>, <span class="string">'heihei'</span>, <span class="string">'heihei'</span>, <span class="string">'wdd'</span>]</span><br></pre></td></tr></table></figure></p><h1 id="17-使用copy-复制列表"><a href="#17-使用copy-复制列表" class="headerlink" title="17. 使用copy()复制列表"></a>17. 使用<code>copy()</code>复制列表</h1><p>形式如：<code>list2 = list1.copy()</code><br>list2 = list1 这种并不是列表的复制，只是给列表起了别名。实际上还是指向同一个值。<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;</span>&gt; users</span><br><span class="line">[<span class="string">'-xiaoxiao'</span>, <span class="string">'b'</span>, <span class="string">'d'</span>, <span class="string">'ddw'</span>, <span class="string">'e'</span>, <span class="string">'haha'</span>, <span class="string">'heihei'</span>, <span class="string">'heihei'</span>, <span class="string">'wdd'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users2 = users.copy()</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users2</span><br><span class="line">[<span class="string">'-xiaoxiao'</span>, <span class="string">'b'</span>, <span class="string">'d'</span>, <span class="string">'ddw'</span>, <span class="string">'e'</span>, <span class="string">'haha'</span>, <span class="string">'heihei'</span>, <span class="string">'heihei'</span>, <span class="string">'wdd'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt;</span><br></pre></td></tr></table></figure></p><h1 id="18-使用clear-清空列表"><a href="#18-使用clear-清空列表" class="headerlink" title="18. 使用clear()清空列表"></a>18. 使用<code>clear()</code>清空列表</h1><p>形式如： <code>list.clear()</code><br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;</span>&gt; users2</span><br><span class="line">[<span class="string">'-xiaoxiao'</span>, <span class="string">'b'</span>, <span class="string">'d'</span>, <span class="string">'ddw'</span>, <span class="string">'e'</span>, <span class="string">'haha'</span>, <span class="string">'heihei'</span>, <span class="string">'heihei'</span>, <span class="string">'wdd'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users2.clear()</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; users2</span><br><span class="line">[]</span><br></pre></td></tr></table></figure></p><h1 id="19-使用len-获取列表长度"><a href="#19-使用len-获取列表长度" class="headerlink" title="19. 使用len()获取列表长度"></a>19. 使用<code>len()</code>获取列表长度</h1><p>形式如：<code>len(list)</code><br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;</span>&gt; users</span><br><span class="line">[<span class="string">'-xiaoxiao'</span>, <span class="string">'b'</span>, <span class="string">'d'</span>, <span class="string">'ddw'</span>, <span class="string">'e'</span>, <span class="string">'haha'</span>, <span class="string">'heihei'</span>, <span class="string">'heihei'</span>, <span class="string">'wdd'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; len(users)</span><br><span class="line"><span class="number">9</span></span><br></pre></td></tr></table></figure></p><h1 id="20-关于列表越界的深入思考"><a href="#20-关于列表越界的深入思考" class="headerlink" title="20. 关于列表越界的深入思考"></a>20. 关于列表越界的深入思考</h1><p>写了这些方法后，我有一些疑问，为什么有些操作会提示越界，有些则不会呢？</p><p>会提示偏移量越界的操作有</p><ul><li>list[offset] 读取或者修改某个元素</li><li>del list[offset] 删除指定位置的元素</li><li>list.remove(value) 删除指定值的元素</li><li>list.pop(offset) 删除指定位置的元素</li></ul><p>如果偏移量越界，这些方法会报错的。我的个人理解是:<br><code>假如我想读取偏移量为10的元素，但是该元素并不存在，如果系统自动给你读取了列表的最后一个元素，而且不报错，这是无法容忍的bug。 如果我想删除第10个元素，但是第10个元素并不存在，而系统帮你删除了列表的最后一个元素，我觉得这也是无法容忍的。</code></p><p>所以在使用这些方法时，务必确认该偏移量的元素是否存，否则可能会报错。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1-使用-或者list-创建列表&quot;&gt;&lt;a href=&quot;#1-使用-或者list-创建列表&quot; class=&quot;headerlink&quot; title=&quot;1. 使用[]或者list()创建列表&quot;&gt;&lt;/a&gt;1. 使用&lt;code&gt;[]&lt;/code&gt;或者&lt;code&gt;list()&lt;
      
    
    </summary>
    
    
      <category term="python3" scheme="https://wdd.js.org/tags/python3/"/>
    
  </entry>
  
  <entry>
    <title>我苦苦寻找诡异的bug原因，其实是我的无知</title>
    <link href="https://wdd.js.org/real-reason-of-my-bugs.html"/>
    <id>https://wdd.js.org/real-reason-of-my-bugs.html</id>
    <published>2018-02-09T05:13:12.000Z</published>
    <updated>2018-02-09T07:47:34.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-问题1：chosen插件无法显示图标"><a href="#1-问题1：chosen插件无法显示图标" class="headerlink" title="1. 问题1：chosen插件无法显示图标"></a>1. 问题1：chosen插件无法显示图标</h1><p><code>问题现象</code><br>在我本地调试的时候，我使用了一个多选下拉框的插件，就是<a href="https://harvesthq.github.io/chosen/" target="_blank" rel="noopener">chosen</a>, 不知道为什么，这个多选框上面的图标不见了。我找了半天没有找到原因，然后我把我的机器的内网地址给我同事，让他访问我机器，当它访问到这个页面时。他的电脑上居然显示出了这个下拉框的图标。</p><p><code>这是什么鬼？</code>, 为什么同样的代码，在我的电脑上显示不出图标，但是在他的电脑上可以显示。有句名言说的好：<code>没有什么bug是一遍调试解决不了的，如果有，就再仔细调试一遍</code>。于是我就再次调试一遍。</p><p>我发现了一些第一遍没有注意到的东西<code>媒体查询</code>，就是在css里有这样的语句：<br><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@media</span></span><br></pre></td></tr></table></figure></p><p>从这里作为切入口，我发现：<code>媒体查询的类会覆盖它原生的类的属性</code></p><p>由于我的电脑视网膜屏幕，分辨率比较高，触发了媒体查询，这就导致了媒体查询的类覆盖了原生的类。而覆盖后的类，使用了<code>chosen-sprite@2x.png</code>作为图标的背景图片。但是这个图片并没有被放在这个插件的目录下，有的只有<code>chosen-sprite.png</code>这个图片。在一般情况下，都是用<code>chosen-sprite.png</code>作为背景图片的。这就解释了：为什么同事的电脑上出现了图标，但是我的电脑上没有出现这个图标。</p><p>总结: <code>如果你要使用一个插件，你最好把这个插件的所有文件都放在同一个目录下。而不要只放一些你认为有用的文件。最后：媒体查询的相关知识也是必要的。</code></p><h1 id="2-问题2：jQuery-与-Vue之间的暧昧"><a href="#2-问题2：jQuery-与-Vue之间的暧昧" class="headerlink" title="2. 问题2：jQuery 与 Vue之间的暧昧"></a>2. 问题2：jQuery 与 Vue之间的暧昧</h1><p>jQuery流派代表着直接操纵DOM的流派，Vue流派代表着操纵数据的流派。</p><p>如果在项目里，你使用了一些jQuery插件，也使用了Vue，这就可能导致一些问题。</p><p>举个例子：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/vue/2.4.4/vue.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/jquery/3.2.1/jquery.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    姓名 <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">v-model</span>=<span class="string">"userName"</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    年龄 <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"userAge"</span> <span class="attr">v-model</span>=<span class="string">"userAge"</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="actionscript"><span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">    el: <span class="string">'#app'</span>,</span></span><br><span class="line"><span class="undefined">    data: &#123;</span></span><br><span class="line"><span class="actionscript">        userName: <span class="string">''</span>,</span></span><br><span class="line"><span class="undefined">        userAge: 12</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">&#125;);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">$(<span class="string">'#userAge'</span>).val(<span class="number">14</span>);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在页面刚打开时：姓名输入框是空的，年龄输入框是14。但是一旦你在姓名输入框输入任何字符时，年龄输入框的值就会变成12。</p><p>如果你仔细看过<a href="https://cn.vuejs.org/v2/guide/forms.html" target="_blank" rel="noopener">Vue官方文档</a>，你会很容易定位问题所在。</p><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">v</span>-model 会忽略所有表单元素的 value、checked、selected 特性的初始值。因为它会选择 <span class="type">Vue</span> 实例数据来作为具体的值。你应该通过 <span class="type">JavaScript</span> 在组件的 <span class="class"><span class="keyword">data</span> 选项中声明初始值。<span class="comment">---Vue官方文档</span></span></span><br></pre></td></tr></table></figure><p>你可以用 v-model 指令在表单控件元素上创建双向数据绑定。它会根据控件类型自动选取正确的方法来更新元素。尽管有些神奇，但 <code>v-model 本质上不过是语法糖，它负责监听用户的输入事件以更新数据</code>，并特别处理一些极端的例子。</p><p>当userAge被jQuery改成14时，Vue实例中的userAge任然是12。当你输入userName时，Vue发现数据改变，触发虚拟DOM的重新渲染，同时也将userAge渲染成了12。</p><p><img src="http://p3alsaatj.bkt.clouddn.com/20180209131356_2Lfly1_Screenshot.jpeg" alt=""></p><p>总结：<code>如果你在Vue项目中逼不得已使用jQuery, 你要知道这会导致哪些常见的问题，以及解决思路。</code></p><h1 id="3-最后"><a href="#3-最后" class="headerlink" title="3. 最后"></a>3. 最后</h1><p><code>我苦苦寻找诡异的bug原因，其实是我的无知。</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1-问题1：chosen插件无法显示图标&quot;&gt;&lt;a href=&quot;#1-问题1：chosen插件无法显示图标&quot; class=&quot;headerlink&quot; title=&quot;1. 问题1：chosen插件无法显示图标&quot;&gt;&lt;/a&gt;1. 问题1：chosen插件无法显示图标&lt;/h1
      
    
    </summary>
    
    
      <category term="思想者" scheme="https://wdd.js.org/tags/%E6%80%9D%E6%83%B3%E8%80%85/"/>
    
  </entry>
  
  <entry>
    <title>centos7 初始化软件安装及服务管理</title>
    <link href="https://wdd.js.org/centos7-init-install-packages.html"/>
    <id>https://wdd.js.org/centos7-init-install-packages.html</id>
    <published>2018-02-09T05:10:42.000Z</published>
    <updated>2018-02-09T05:59:01.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>因为阿里云最近搞活动，所以买了一台阿里云香港的一台最低配置主机。用来搞搞开发，做静态页面，给女朋友发短信，爬爬页面，翻墙等等。</p></blockquote><h1 id="1-软件安装"><a href="#1-软件安装" class="headerlink" title="1. 软件安装"></a>1. 软件安装</h1><h2 id="1-1-安装git"><a href="#1-1-安装git" class="headerlink" title="1.1. 安装git"></a>1.1. 安装git</h2><figure class="highlight d"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">yum install git</span><br><span class="line"></span><br><span class="line"><span class="comment">//检查git是否安装成功</span></span><br><span class="line">git --<span class="keyword">version</span></span><br></pre></td></tr></table></figure><h2 id="1-2-安装oh-my-zsh"><a href="#1-2-安装oh-my-zsh" class="headerlink" title="1.2. 安装oh-my-zsh"></a>1.2. 安装oh-my-zsh</h2><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">/<span class="regexp">/ 检查有没有安装zsh, 没有安装的话，先安装zsh</span></span><br><span class="line"><span class="regexp">cat /etc</span><span class="regexp">/shells</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">/</span><span class="regexp">/ 没有安装zsh,先安装zsh</span></span><br><span class="line"><span class="regexp">yum install zsh</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">/</span><span class="regexp">/ 然后安装oh-my-zsh</span></span><br><span class="line"><span class="regexp">sh -c "$(curl -fsSL https:/</span><span class="regexp">/raw.github.com/robbyrussell</span><span class="regexp">/oh-my-zsh/master</span><span class="regexp">/tools/install</span>.sh)<span class="string">"</span></span><br></pre></td></tr></table></figure><h2 id="1-3-安装ss"><a href="#1-3-安装ss" class="headerlink" title="1.3. 安装ss"></a>1.3. 安装ss</h2><p>基于python2.7</p><p><a href="http://heroi.cn/2017/08/09/%E9%98%BF%E9%87%8C%E4%BA%91ecs%E9%A6%99%E6%B8%AF%E8%8A%82%E7%82%B9%E6%90%AD%E5%BB%BAss%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E5%85%A8%E8%BF%87%E7%A8%8B/" target="_blank" rel="noopener">参考文献</a></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">//</span> 安装setuptools pip</span><br><span class="line">yum install python-setuptools &amp;&amp; easy_install pip</span><br><span class="line"></span><br><span class="line"><span class="regexp">//</span> 安装shadowsocks</span><br><span class="line">pip install shadowsocks</span><br><span class="line"></span><br><span class="line"><span class="regexp">//</span> 新建<span class="regexp">/etc/</span>shadowsocks.json 文件</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"server"</span>:<span class="string">"0.0.0.0"</span>,</span><br><span class="line">    <span class="string">"server_port"</span>:your-server_port,</span><br><span class="line">    <span class="string">"local_address"</span>:<span class="string">"127.0.0.1"</span>,</span><br><span class="line">    <span class="string">"local_port"</span>:<span class="number">1080</span>,</span><br><span class="line">    <span class="string">"password"</span>:<span class="string">"your-password"</span>,</span><br><span class="line">    <span class="string">"timeout"</span>:<span class="number">300</span>,</span><br><span class="line">    <span class="string">"method"</span>:<span class="string">"aes-256-cfb"</span>,</span><br><span class="line">    <span class="string">"fast_open"</span>:false,</span><br><span class="line">    <span class="string">"workers"</span>:<span class="number">5</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="regexp">//</span> 服务启动</span><br><span class="line">ssserver -c <span class="regexp">/etc/</span>shadowsocks.json -d start</span><br><span class="line"></span><br><span class="line"><span class="regexp">//</span> 服务停止</span><br><span class="line">ssserver -d stop</span><br><span class="line"></span><br><span class="line"><span class="regexp">//</span> 查看服务状态</span><br><span class="line">netstat -tunlp</span><br></pre></td></tr></table></figure><h2 id="1-4-安装nodejs"><a href="#1-4-安装nodejs" class="headerlink" title="1.4. 安装nodejs"></a>1.4. 安装nodejs</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">yum <span class="keyword">install</span> epel-<span class="keyword">release</span></span><br><span class="line">yum <span class="keyword">install</span> nodejs</span><br><span class="line"></span><br><span class="line">// 如果出现 CentOS <span class="number">7</span> 使用 npm 失败 npm: symbol SSL_set_cert_cb</span><br><span class="line">yum -y <span class="keyword">install</span> yum-utils</span><br><span class="line">yum-config-manager <span class="comment">--enable cr &amp;&amp; yum update</span></span><br><span class="line"></span><br><span class="line">// 安装cnpm</span><br><span class="line">npm <span class="keyword">install</span> -g cnpm <span class="comment">--registry=https://registry.npm.taobao.org</span></span><br></pre></td></tr></table></figure><h2 id="1-5-安装nginx"><a href="#1-5-安装nginx" class="headerlink" title="1.5. 安装nginx"></a>1.5. 安装nginx</h2><p><a href="http://www.centoscn.com/nginx/2017/0119/8422.html" target="_blank" rel="noopener">参考</a><br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">//</span> 直接通过 yum install nginx 肯定是不行的,因为yum没有nginx，所以首先把 nginx 的源加入 yum 中。</span><br><span class="line"><span class="regexp">//</span> 将nginx放到yum repro库中</span><br><span class="line">rpm -ivh http:<span class="regexp">//</span>nginx.org<span class="regexp">/packages/</span>centos<span class="regexp">/7/</span>noarch<span class="regexp">/RPMS/</span>nginx-release-centos-<span class="number">7</span>-<span class="number">0</span>.el7.ngx.noarch.rpm</span><br><span class="line"></span><br><span class="line"><span class="regexp">//</span> 查看nginx信息</span><br><span class="line">yum info nginx</span><br><span class="line"></span><br><span class="line"><span class="regexp">//</span> 安装nginx</span><br><span class="line">yum install nginx</span><br></pre></td></tr></table></figure></p><h1 id="2-安装python3"><a href="#2-安装python3" class="headerlink" title="2. 安装python3"></a>2. 安装python3</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum <span class="keyword">install</span> epel-<span class="keyword">release</span></span><br><span class="line">yum <span class="keyword">install</span> python34</span><br><span class="line">python3 <span class="comment">--version</span></span><br></pre></td></tr></table></figure><h1 id="3-服务管理"><a href="#3-服务管理" class="headerlink" title="3. 服务管理"></a>3. 服务管理</h1><table><thead><tr><th>功能</th><th>命令</th></tr></thead><tbody><tr><td>使服务开启启动</td><td>systemctl enable httpd.service</td></tr><tr><td>关闭服务开机启动</td><td>systemctl disabled httpd.service</td></tr><tr><td>检查服务状态</td><td>systemctl status httpd.service</td></tr><tr><td>查看所有已启动的服务</td><td>systemctl list-units –type=service</td></tr><tr><td>启动服务</td><td>systemctl start httpd.service</td></tr><tr><td>停止服务</td><td>systemctl stop httpd.service</td></tr><tr><td>重启服务</td><td>systemctl restart httpd.service</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;因为阿里云最近搞活动，所以买了一台阿里云香港的一台最低配置主机。用来搞搞开发，做静态页面，给女朋友发短信，爬爬页面，翻墙等等。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;1-软件安装&quot;&gt;&lt;a href=&quot;#1-软件安装&quot; class=&quot;h
      
    
    </summary>
    
    
      <category term="centos7" scheme="https://wdd.js.org/tags/centos7/"/>
    
  </entry>
  
  <entry>
    <title>一行命令搭建简易静态文件http服务器</title>
    <link href="https://wdd.js.org/one-command-create-static-file-server.html"/>
    <id>https://wdd.js.org/one-command-create-static-file-server.html</id>
    <published>2018-02-09T05:01:14.000Z</published>
    <updated>2018-02-09T07:47:15.000Z</updated>
    
    <content type="html"><![CDATA[<p>简易服务器：在命令执行的所在路径启动一个http服务器，然后你可以通过浏览器访问该路径下的所有文件。</p><p>在局域网内传文件，或者自己测试使用都是非常方便的。</p><h1 id="1-基于python"><a href="#1-基于python" class="headerlink" title="1. 基于python"></a>1. 基于python</h1><p><img src="http://p3alsaatj.bkt.clouddn.com/20180209130207_yzmvQO_Screenshot.jpeg" alt=""></p><h2 id="1-1-基于Python2"><a href="#1-1-基于Python2" class="headerlink" title="1.1. 基于Python2"></a>1.1. 基于Python2</h2><p><code>python -m SimpleHTTPServer port</code></p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; python -m SimpleHTTPServer <span class="number">8099</span></span><br><span class="line">Serving HTTP on <span class="number">0.0.0.0</span> port <span class="number">8099</span> ...</span><br><span class="line"><span class="number">127.0.0.1</span> - - <span class="string">[24/Oct/2017 11:07:56]</span> <span class="string">"<span class="keyword">GET</span> / HTTP/1.1"</span> <span class="number">200</span> -</span><br></pre></td></tr></table></figure><h2 id="1-2-基于python3"><a href="#1-2-基于python3" class="headerlink" title="1.2. 基于python3"></a>1.2. 基于python3</h2><p><code>python3 -m http.server port</code></p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; python3 -m http.server <span class="number">8099</span></span><br><span class="line">Serving HTTP on <span class="number">0.0.0.0</span> port <span class="number">8099</span> (http://<span class="number">0.0.0.0:8099</span>/) ...</span><br><span class="line"><span class="number">127.0.0.1</span> - - <span class="string">[24/Oct/2017 11:05:06]</span> <span class="string">"<span class="keyword">GET</span> / HTTP/1.1"</span> <span class="number">200</span> -</span><br><span class="line"><span class="number">127.0.0.1</span> - - <span class="string">[24/Oct/2017 11:05:06]</span> code <span class="number">404</span>, message File not found</span><br><span class="line"><span class="number">127.0.0.1</span> - - <span class="string">[24/Oct/2017 11:05:06]</span> <span class="string">"<span class="keyword">GET</span> /favicon.ico HTTP/1.1"</span> <span class="number">404</span> -</span><br></pre></td></tr></table></figure><h1 id="2-基于nodejs"><a href="#2-基于nodejs" class="headerlink" title="2. 基于nodejs"></a>2. 基于nodejs</h1><p>首先你要安装nodejs<br><img src="http://p3alsaatj.bkt.clouddn.com/20180209130231_76jUWj_Screenshot.jpeg" alt=""></p><h2 id="2-1-http-server"><a href="#2-1-http-server" class="headerlink" title="2.1. http-server"></a>2.1. <a href="https://github.com/indexzero/http-server" target="_blank" rel="noopener">http-server</a></h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 安装</span><br><span class="line">npm <span class="keyword">install</span> <span class="keyword">http</span>-<span class="keyword">server</span> -g</span><br><span class="line"></span><br><span class="line">// 用法</span><br><span class="line"><span class="keyword">http</span>-<span class="keyword">server</span> [<span class="keyword">path</span>] [options]</span><br></pre></td></tr></table></figure><h2 id="2-2-serve"><a href="#2-2-serve" class="headerlink" title="2.2. serve"></a>2.2. <a href="https://github.com/zeit/serve" target="_blank" rel="noopener">serve</a></h2><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 安装</span></span><br><span class="line">npm install -g serve</span><br><span class="line"></span><br><span class="line"><span class="comment">// 用法</span></span><br><span class="line">serve [options] <span class="params">&lt;path&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2-3-webpack-dev-server"><a href="#2-3-webpack-dev-server" class="headerlink" title="2.3. webpack-dev-server"></a>2.3. <a href="https://github.com/webpack/webpack-dev-server" target="_blank" rel="noopener">webpack-dev-server</a></h2><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 安装</span></span><br><span class="line">npm install webpack-dev-<span class="keyword">server</span> -g</span><br><span class="line"></span><br><span class="line"><span class="comment">// 用法</span></span><br><span class="line">webpack-dev-<span class="keyword">server</span></span><br></pre></td></tr></table></figure><h2 id="2-4-anywhere"><a href="#2-4-anywhere" class="headerlink" title="2.4. anywhere"></a>2.4. <a href="https://github.com/JacksonTian/anywhere" target="_blank" rel="noopener">anywhere</a></h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 安装</span></span><br><span class="line">npm install -g anywhere</span><br><span class="line"></span><br><span class="line"><span class="comment">// 用法</span></span><br><span class="line">anywhere</span><br><span class="line">anywhere -<span class="selector-tag">p</span> port</span><br></pre></td></tr></table></figure><h2 id="2-5-puer"><a href="#2-5-puer" class="headerlink" title="2.5. puer"></a>2.5. <a href="https://github.com/leeluolee/puer" target="_blank" rel="noopener">puer</a></h2><p><img src="http://p3alsaatj.bkt.clouddn.com/20180209130246_GqSjH6_Screenshot.jpeg" alt=""></p><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 安装</span></span><br><span class="line">npm -g install puer</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用</span></span><br><span class="line">puer</span><br><span class="line"></span><br><span class="line">-<span class="ruby"> 提供一个当前或指定路径的静态服务器</span></span><br><span class="line"><span class="ruby">- 所有浏览器的实时刷新：编辑css实时更新(update)页面样式，其它文件则重载(reload)页面</span></span><br><span class="line"><span class="ruby">- 提供简单熟悉的mock请求的配置功能，并且配置也是自动更新。</span></span><br><span class="line"><span class="ruby">- 可用作代理服务器，调试开发既有服务器的页面，可与mock功能配合使用</span></span><br><span class="line"><span class="ruby">- 集成了weinre，并提供二维码地址，方便移动端的调试</span></span><br><span class="line"><span class="ruby">- 可以作为connect中间件使用(前提是后端为nodejs，否则请使用代理模式)</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简易服务器：在命令执行的所在路径启动一个http服务器，然后你可以通过浏览器访问该路径下的所有文件。&lt;/p&gt;
&lt;p&gt;在局域网内传文件，或者自己测试使用都是非常方便的。&lt;/p&gt;
&lt;h1 id=&quot;1-基于python&quot;&gt;&lt;a href=&quot;#1-基于python&quot; class=&quot;
      
    
    </summary>
    
    
      <category term="静态文件服务器" scheme="https://wdd.js.org/tags/%E9%9D%99%E6%80%81%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>top-javascript-tools-in-2017</title>
    <link href="https://wdd.js.org/top-javascript-tools-in-2017.html"/>
    <id>https://wdd.js.org/top-javascript-tools-in-2017.html</id>
    <published>2018-02-09T04:59:38.000Z</published>
    <updated>2018-02-09T07:48:40.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://frontendtools.com/tools/JavaScript-Tools" target="_blank" rel="noopener">原文地址</a><br><a href="https://github.com/wangduanduan/top-tools" target="_blank" rel="noopener">git地址</a></p><h1 id="1-基础工具"><a href="#1-基础工具" class="headerlink" title="1. 基础工具"></a>1. 基础工具</h1><ul><li><a href="http://openexchangerates.github.io/accounting.js/" target="_blank" rel="noopener">accounting.js</a></li><li><a href="http://caolan.github.io/async/" target="_blank" rel="noopener">async</a></li><li><a href="https://github.com/mzabriskie/axios" target="_blank" rel="noopener">axios</a></li><li><a href="http://chancejs.com/" target="_blank" rel="noopener">chance</a></li><li><a href="https://date-fns.org/" target="_blank" rel="noopener">date-fns</a></li><li><a href="http://formatjs.io/" target="_blank" rel="noopener">format.js</a></li><li><a href="https://facebook.github.io/immutable-js/" target="_blank" rel="noopener">immutable</a></li><li><a href="http://arasatasaygin.github.io/is.js/" target="_blank" rel="noopener">is.js</a></li><li><a href="https://lodash.com/" target="_blank" rel="noopener">lodash</a></li><li><a href="http://mathjs.org/" target="_blank" rel="noopener">Math.js</a></li><li><a href="http://momentjs.com/" target="_blank" rel="noopener">Moment.js</a></li><li><a href="http://numeraljs.com/" target="_blank" rel="noopener">Numeral.js</a></li><li><a href="http://stringjs.com/" target="_blank" rel="noopener">string.js</a></li><li><a href="http://underscorejs.org/" target="_blank" rel="noopener">underscore.js</a></li><li><a href="https://vocajs.com/" target="_blank" rel="noopener">voca</a></li><li><a href="https://github.com/elving/wait" target="_blank" rel="noopener">wait</a></li><li><a href="http://xregexp.com/" target="_blank" rel="noopener">xregexp.com</a></li></ul><h1 id="2-编译-类型检查"><a href="#2-编译-类型检查" class="headerlink" title="2. 编译 / 类型检查"></a>2. 编译 / 类型检查</h1><ul><li><a href="https://babeljs.io/" target="_blank" rel="noopener">Babel</a></li><li><a href="https://www.typescriptlang.org/" target="_blank" rel="noopener">TypeScript</a></li><li><a href="https://flowtype.org/" target="_blank" rel="noopener">Flow</a></li></ul><h1 id="3-代码分析引擎"><a href="#3-代码分析引擎" class="headerlink" title="3. 代码分析引擎"></a>3. 代码分析引擎</h1><ul><li><a href="https://ternjs.net/" target="_blank" rel="noopener">Tern</a></li></ul><h1 id="4-JavaScript兼容性检查器"><a href="#4-JavaScript兼容性检查器" class="headerlink" title="4. JavaScript兼容性检查器"></a>4. JavaScript兼容性检查器</h1><ul><li><a href="http://jscc.info/" target="_blank" rel="noopener">jscc.info/</a></li></ul><h1 id="5-Linting-Hinting-amp-Style-Linter"><a href="#5-Linting-Hinting-amp-Style-Linter" class="headerlink" title="5. Linting/ Hinting &amp; Style Linter"></a>5. Linting/ Hinting &amp; Style Linter</h1><ul><li><a href="http://eslint.org/" target="_blank" rel="noopener">eslint</a></li></ul><h1 id="6-单元测试"><a href="#6-单元测试" class="headerlink" title="6. 单元测试"></a>6. 单元测试</h1><ul><li><a href="https://github.com/avajs/ava" target="_blank" rel="noopener">AVA</a></li><li><a href="http://jasmine.github.io/" target="_blank" rel="noopener">Jasmine</a></li><li><a href="http://mochajs.org/" target="_blank" rel="noopener">Mocha</a></li><li><a href="https://github.com/substack/tape" target="_blank" rel="noopener">Tape</a></li></ul><h1 id="7-单元测试断言库"><a href="#7-单元测试断言库" class="headerlink" title="7. 单元测试断言库"></a>7. 单元测试断言库</h1><ul><li><a href="http://chaijs.com/" target="_blank" rel="noopener">Chai</a></li><li><a href="https://github.com/Automattic/expect.js" target="_blank" rel="noopener">expect.js</a></li><li><a href="http://shouldjs.github.io/" target="_blank" rel="noopener">should.js</a></li></ul><h1 id="8-单元测试数据模拟"><a href="#8-单元测试数据模拟" class="headerlink" title="8. 单元测试数据模拟"></a>8. 单元测试数据模拟</h1><ul><li><a href="http://sinonjs.org/" target="_blank" rel="noopener">sinon.js</a></li><li><a href="http://devlucky.github.io/kakapo-js" target="_blank" rel="noopener">Kakapo.js</a></li><li><a href="http://mockjs.com/" target="_blank" rel="noopener">mockjs</a></li></ul><h1 id="9-E2E测试"><a href="#9-E2E测试" class="headerlink" title="9. E2E测试"></a>9. E2E测试</h1><ul><li><a href="https://github.com/GoogleChrome/puppeteer" target="_blank" rel="noopener">puppeteer</a></li></ul><h1 id="10-代码格式化-整洁"><a href="#10-代码格式化-整洁" class="headerlink" title="10. 代码格式化 / 整洁"></a>10. 代码格式化 / 整洁</h1><ul><li><a href="https://github.com/millermedeiros/esformatter#esformatterformatstr-optsstring" target="_blank" rel="noopener">esformatter</a></li><li><a href="http://jsbeautifier.org/" target="_blank" rel="noopener">js-beautify</a></li><li><a href="http://rdio.github.io/jsfmt/" target="_blank" rel="noopener">jsfmt</a></li><li><a href="https://github.com/jlongster/prettier" target="_blank" rel="noopener">prettier</a></li></ul><h1 id="11-性能测试"><a href="#11-性能测试" class="headerlink" title="11. 性能测试"></a>11. 性能测试</h1><ul><li><a href="http://benchmarkjs.com/" target="_blank" rel="noopener">benchmark.js</a></li><li><a href="https://jsperf.co/" target="_blank" rel="noopener">jsperf.co</a></li></ul><h1 id="12-可视化，静态分析，复杂性，覆盖工具"><a href="#12-可视化，静态分析，复杂性，覆盖工具" class="headerlink" title="12. 可视化，静态分析，复杂性，覆盖工具"></a>12. 可视化，静态分析，复杂性，覆盖工具</h1><ul><li><a href="https://coveralls.io/" target="_blank" rel="noopener">Coveralls</a></li><li><a href="http://esprima.org/" target="_blank" rel="noopener">Esprima</a></li><li><a href="https://github.com/gotwarlost/istanbul" target="_blank" rel="noopener">istanbul</a></li></ul><h1 id="13-优化"><a href="#13-优化" class="headerlink" title="13. 优化"></a>13. 优化</h1><ul><li><a href="https://github.com/mishoo/UglifyJS2" target="_blank" rel="noopener">UglifyJS 2</a></li><li><a href="https://github.com/nolanlawson/optimize-js" target="_blank" rel="noopener">optimize-js</a></li></ul><h1 id="14-混淆"><a href="#14-混淆" class="headerlink" title="14. 混淆"></a>14. 混淆</h1><ul><li><a href="http://www.javascriptobfuscator.com/" target="_blank" rel="noopener">Javascript Obfuscator</a></li><li><a href="https://jscrambler.com/" target="_blank" rel="noopener">JScrambler</a></li></ul><h1 id="15-可共享-可运行的代码编辑器"><a href="#15-可共享-可运行的代码编辑器" class="headerlink" title="15. 可共享/可运行的代码编辑器"></a>15. 可共享/可运行的代码编辑器</h1><ul><li><a href="http://www.es6fiddle.net/" target="_blank" rel="noopener">es6fiddle.net</a></li><li><a href="http://jsbin.com/" target="_blank" rel="noopener">jsbin.com</a></li><li><a href="http://jsfiddle.net/" target="_blank" rel="noopener">jsfiddle.net</a></li></ul><h1 id="16-在线正则表达式编辑器-可视化工具"><a href="#16-在线正则表达式编辑器-可视化工具" class="headerlink" title="16. 在线正则表达式编辑器/可视化工具"></a>16. 在线正则表达式编辑器/可视化工具</h1><ul><li><a href="https://www.debuggex.com" target="_blank" rel="noopener">debuggex</a></li><li><a href="https://regex101.com/" target="_blank" rel="noopener">regex101</a></li><li><a href="http://regexper.com/" target="_blank" rel="noopener">regexper</a></li><li><a href="http://regexr.com/" target="_blank" rel="noopener">RegExr</a></li></ul><h1 id="17-创作公约工具"><a href="#17-创作公约工具" class="headerlink" title="17. 创作公约工具"></a>17. 创作公约工具</h1><ul><li><a href="https://www.npmjs.com/package/eslint-config-airbnb" target="_blank" rel="noopener">Airbnb’s ESLint config, following our styleguide</a></li><li><a href="https://github.com/feross/eslint-config-standard" target="_blank" rel="noopener">Standard - ESLint Shareable Config</a></li></ul><h1 id="18-json可视化"><a href="#18-json可视化" class="headerlink" title="18. json可视化"></a>18. json可视化</h1><ul><li><a href="https://www.bejson.com/jsonviewernew/" target="_blank" rel="noopener">jsonviewernew</a></li></ul><h1 id="19-代码可视化"><a href="#19-代码可视化" class="headerlink" title="19. 代码可视化"></a>19. 代码可视化</h1><ul><li><a href="https://github.com/Jianru-Lin/lambda-view" target="_blank" rel="noopener">lambda-view</a></li></ul><h1 id="20-静态文件服务器"><a href="#20-静态文件服务器" class="headerlink" title="20. 静态文件服务器"></a>20. 静态文件服务器</h1><ul><li><a href="https://github.com/indexzero/http-server" target="_blank" rel="noopener">http-server</a></li><li><a href="https://github.com/zeit/serve" target="_blank" rel="noopener">serve</a></li><li><a href="https://github.com/JacksonTian/anywhere" target="_blank" rel="noopener">anywhere</a></li><li><a href="https://github.com/leeluolee/puer" target="_blank" rel="noopener">puer</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;http://frontendtools.com/tools/JavaScript-Tools&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;原文地址&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/wangduan
      
    
    </summary>
    
    
      <category term="工具" scheme="https://wdd.js.org/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>webrtc-tutorial-simple-video-chat</title>
    <link href="https://wdd.js.org/webrtc-tutorial-simple-video-chat.html"/>
    <id>https://wdd.js.org/webrtc-tutorial-simple-video-chat.html</id>
    <published>2018-02-09T04:56:12.000Z</published>
    <updated>2018-02-09T07:49:09.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本例子是参考<a href="https://www.scaledrone.com/blog/posts/webrtc-tutorial-simple-video-chat" target="_blank" rel="noopener">webrtc-tutorial-simple-video-chat</a>做的。<br>这个教程应该主要是去宣传ScaleDrone的sdk, 他们的服务是收费的，但是免费的也可以用，就是有些次数限制。</p></blockquote><p><a href="https://github.com/wangduanduan/webrtc" target="_blank" rel="noopener">本栗子的地址</a><br><a href="https://wangduanduan.github.io/webrtc/" target="_blank" rel="noopener">本栗子的pages地址</a></p><h1 id="1-准备"><a href="#1-准备" class="headerlink" title="1. 准备"></a>1. 准备</h1><ul><li>使用最新版谷歌浏览器（62版）</li><li>视频聊天中 一个是windows, 一个是mac</li><li>stun服务器使用谷歌的，trun使用<a href="https://www.scaledrone.com/" target="_blank" rel="noopener">ScaleDrone</a>的sdk，这样我就不用管服务端了。</li></ul><h1 id="2-先上效果图"><a href="#2-先上效果图" class="headerlink" title="2. 先上效果图"></a>2. 先上效果图</h1><p><img src="http://p3alsaatj.bkt.clouddn.com/20180209125722_GO0Ee0_Screenshot.jpeg" alt=""></p><h1 id="3-再上在线例子点击此处"><a href="#3-再上在线例子点击此处" class="headerlink" title="3. 再上在线例子点击此处"></a>3. 再上在线例子<a href="https://wangduanduan.github.io/webrtc/demos/chat-with-your-friend.html" target="_blank" rel="noopener">点击此处</a></h1><h1 id="4-源码分析"><a href="#4-源码分析" class="headerlink" title="4. 源码分析"></a>4. 源码分析</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 产生随机数</span></span><br><span class="line"><span class="keyword">if</span> (!location.hash) &#123;</span><br><span class="line">    location.hash = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * <span class="number">0xFFFFFF</span>).toString(<span class="number">16</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 获取房间号</span></span><br><span class="line"><span class="keyword">var</span> roomHash = location.hash.substring(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 放置你自己的频道id, 这是我注册了ScaleDrone 官网后，创建的channel</span></span><br><span class="line"><span class="comment">// 你也可以自己创建</span></span><br><span class="line"><span class="keyword">var</span> drone = <span class="keyword">new</span> ScaleDrone(<span class="string">'87fYv4ncOoa0Cjne'</span>);</span><br><span class="line"><span class="comment">// 房间名必须以 'observable-'开头</span></span><br><span class="line"><span class="keyword">var</span> roomName = <span class="string">'observable-'</span> + roomHash;</span><br><span class="line"><span class="keyword">var</span> configuration = &#123;</span><br><span class="line">    iceServers: [&#123;</span><br><span class="line">        urls: <span class="string">'stun:stun.l.google.com:19302'</span> <span class="comment">// 使用谷歌的stun服务</span></span><br><span class="line">    &#125;]</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> room;</span><br><span class="line"><span class="keyword">var</span> pc;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">onSuccess</span>(<span class="params"></span>) </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">onError</span>(<span class="params">error</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.error(error);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">drone.on(<span class="string">'open'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">error</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (error) &#123; <span class="keyword">return</span> <span class="built_in">console</span>.error(error);&#125;</span><br><span class="line"></span><br><span class="line">    room = drone.subscribe(roomName);</span><br><span class="line">    room.on(<span class="string">'open'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">error</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (error) &#123;onError(error);&#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 已经链接到房间后，就会收到一个 members 数组，代表房间里的成员</span></span><br><span class="line">    <span class="comment">// 这时候信令服务已经就绪</span></span><br><span class="line">    room.on(<span class="string">'members'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">members</span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'MEMBERS'</span>, members);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 如果你是第二个链接到房间的人，就会创建offer</span></span><br><span class="line">        <span class="keyword">var</span> isOfferer = members.length === <span class="number">2</span>;</span><br><span class="line">        startWebRTC(isOfferer);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 通过Scaledrone发送信令消息</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sendMessage</span>(<span class="params">message</span>) </span>&#123;</span><br><span class="line">    drone.publish(&#123;</span><br><span class="line">        room: roomName,</span><br><span class="line">        message</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">startWebRTC</span>(<span class="params">isOfferer</span>) </span>&#123;</span><br><span class="line">    pc = <span class="keyword">new</span> RTCPeerConnection(configuration);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 当本地ICE Agent需要通过信号服务器发送信息到其他端时</span></span><br><span class="line">    <span class="comment">// 会触发icecandidate事件回调</span></span><br><span class="line">    pc.onicecandidate = <span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (event.candidate) &#123;</span><br><span class="line">            sendMessage(&#123; <span class="string">'candidate'</span>: event.candidate &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果用户是第二个进入的人，就在negotiationneeded 事件后创建sdp</span></span><br><span class="line">    <span class="keyword">if</span> (isOfferer) &#123;</span><br><span class="line">        <span class="comment">// onnegotiationneeded 在要求sesssion协商时发生</span></span><br><span class="line">        pc.onnegotiationneeded = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="comment">// 创建本地sdp描述 SDP (Session Description Protocol) session描述协议</span></span><br><span class="line">            pc.createOffer().then(localDescCreated).catch(onError);</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 当远程数据流到达时，将数据流装载到video中</span></span><br><span class="line">    pc.onaddstream = <span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line">        remoteVideo.srcObject = event.stream;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取本地媒体流</span></span><br><span class="line">    navigator.mediaDevices.getUserMedia(&#123;</span><br><span class="line">        audio: <span class="literal">true</span>,</span><br><span class="line">        video: <span class="literal">true</span>,</span><br><span class="line">    &#125;).then( <span class="function"><span class="keyword">function</span>(<span class="params">stream</span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 将本地捕获的视频流装载到本地video中</span></span><br><span class="line">        localVideo.srcObject = stream;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 将本地流加入RTCPeerConnection 实例中 发送到其他端</span></span><br><span class="line">        pc.addStream(stream);</span><br><span class="line">    &#125;, onError);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 从Scaledrone监听信令数据</span></span><br><span class="line">    room.on(<span class="string">'data'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">message, client</span>)</span>&#123;</span><br><span class="line">        <span class="comment">// 消息是我自己发送的，则不处理</span></span><br><span class="line">        <span class="keyword">if</span> (client.id === drone.clientId) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (message.sdp) &#123;</span><br><span class="line">            <span class="comment">// 设置远程sdp, 在offer 或者 answer后</span></span><br><span class="line">            pc.setRemoteDescription(<span class="keyword">new</span> RTCSessionDescription(message.sdp), <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                <span class="comment">// 当收到offer 后就接听</span></span><br><span class="line">                <span class="keyword">if</span> (pc.remoteDescription.type === <span class="string">'offer'</span>) &#123;</span><br><span class="line">                    pc.createAnswer().then(localDescCreated).catch(onError);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, onError);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (message.candidate) &#123;</span><br><span class="line">            <span class="comment">// 增加新的 ICE canidatet 到本地的链接中</span></span><br><span class="line">            pc.addIceCandidate(</span><br><span class="line">                <span class="keyword">new</span> RTCIceCandidate(message.candidate), onSuccess, onError</span><br><span class="line">            );</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">localDescCreated</span>(<span class="params">desc</span>) </span>&#123;</span><br><span class="line">    pc.setLocalDescription(desc, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        sendMessage(&#123; <span class="string">'sdp'</span>: pc.localDescription &#125;);</span><br><span class="line">    &#125;,onError);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="5-WebRTC简介"><a href="#5-WebRTC简介" class="headerlink" title="5. WebRTC简介"></a>5. WebRTC简介</h1><h2 id="5-1-介绍"><a href="#5-1-介绍" class="headerlink" title="5.1. 介绍"></a>5.1. 介绍</h2><p>WebRTC 是一个开源项目，用于Web浏览器之间进行实时音频视频通讯，数据传递。<br>WebRTC有几个JavaScript APIS。 点击链接去查看demo。</p><ul><li><a href="">getUserMedia(): 捕获音频视频</a></li><li><a href="">MediaRecorder: 记录音频视频</a></li><li><a href="">RTCPeerConnection: 在用户之间传递音频流和视频流</a></li><li><a href="">RTCDataChannel: 在用户之间传递文件流</a></li></ul><h2 id="5-2-在哪里使用WebRTC"><a href="#5-2-在哪里使用WebRTC" class="headerlink" title="5.2. 在哪里使用WebRTC?"></a>5.2. 在哪里使用WebRTC?</h2><ul><li>Chrome</li><li>FireFox</li><li>Opera</li><li>Android</li><li>iOS</li></ul><h2 id="5-3-什么是信令"><a href="#5-3-什么是信令" class="headerlink" title="5.3. 什么是信令"></a>5.3. 什么是信令</h2><p>WebRTC使用<code>RTCPeerConnection</code>在浏览器之间传递流数据, 但是也需要一种机制去协调收发控制信息，这就是信令。信令的方法和协议并不是在WebRTC中明文规定的。 在codelad中用的是Node，也有许多其他的方法。</p><h2 id="5-4-什么是STUN和TURN和ICE"><a href="#5-4-什么是STUN和TURN和ICE" class="headerlink" title="5.4. 什么是STUN和TURN和ICE?"></a>5.4. 什么是STUN和TURN和ICE?</h2><blockquote><p>STUN（Session Traversal Utilities for NAT，NAT会话穿越应用程序）是一种网络协议，它允许位于NAT（或多重NAT）后的客户端找出自己的公网地址，查出自己位于哪种类型的NAT之后以及NAT为某一个本地端口所绑定的Internet端端口。这些信息被用来在两个同时处于NAT路由器之后的主机之间创建UDP通信。该协议由RFC 5389定义。 <a href="https://zh.wikipedia.org/wiki/STUN" target="_blank" rel="noopener">wikipedia STUN</a></p><p>TURN（全名Traversal Using Relay NAT, NAT中继穿透），是一种资料传输协议（data-transfer protocol）。允许在TCP或UDP的连线上跨越NAT或防火墙。<br>TURN是一个client-server协议。TURN的NAT穿透方法与STUN类似，都是通过取得应用层中的公有地址达到NAT穿透。但实现TURN client的终端必须在通讯开始前与TURN server进行交互，并要求TURN server产生”relay port”，也就是relayed-transport-address。这时TURN server会建立peer，即远端端点（remote endpoints），开始进行中继（relay）的动作，TURN client利用relay port将资料传送至peer，再由peer转传到另一方的TURN client。<a href="https://zh.wikipedia.org/wiki/TURN" target="_blank" rel="noopener">wikipedia TURN</a></p><p>ICE （Interactive Connectivity Establishment，互动式连接建立 ），一种综合性的NAT穿越的技术。<br>互动式连接建立是由IETF的MMUSIC工作组开发出来的一种framework，可整合各种NAT穿透技术，如STUN、TURN（Traversal Using Relay NAT，中继NAT实现的穿透）、RSIP（Realm Specific IP，特定域IP）等。该framework可以让SIP的客户端利用各种NAT穿透方式打穿远程的防火墙。[wikipedia ICE]</p></blockquote><p><img src="http://p3alsaatj.bkt.clouddn.com/20180209125753_F5e9Xf_Screenshot.jpeg" alt=""></p><p><img src="http://p3alsaatj.bkt.clouddn.com/20180209125803_bcjg2P_Screenshot.jpeg" alt=""></p><p>WebRTC被设计用于点对点之间工作，因此用户可以通过最直接的途径连接。然而，WebRTC的构建是为了应付现实中的网络: <code>客户端应用程序需要穿越NAT网关和防火墙，并且对等网络需要在直接连接失败的情况下进行回调。</code> 作为这个过程的一部分，WebRTC api使用STUN服务器来获取计算机的IP地址，并将服务器作为中继服务器运行，以防止对等通信失败。(现实世界中的WebRTC更详细地解释了这一点。)</p><h2 id="5-5-WebRTC是否安全"><a href="#5-5-WebRTC是否安全" class="headerlink" title="5.5. WebRTC是否安全?"></a>5.5. WebRTC是否安全?</h2><p>WebRTC组件是强制要求加密的，并且它的JavaScript APIS只能在安全的域下使用(HTTPS 或者 localhost)。信令机制并没有被WebRTC标准定义，所以是否使用安全的协议就取决于你自己了。</p><h1 id="6-WebRTC-参考资料"><a href="#6-WebRTC-参考资料" class="headerlink" title="6. WebRTC 参考资料"></a>6. WebRTC 参考资料</h1><ul><li><a href="https://webrtc.org/" target="_blank" rel="noopener">官网教程</a></li><li><a href="https://www.scaledrone.com/blog/posts/webrtc-tutorial-simple-video-chat" target="_blank" rel="noopener">WebRTC 简单的视频聊天</a> <a href="https://github.com/ScaleDrone/webrtc" target="_blank" rel="noopener">repo</a></li><li><a href="https://www.tutorialspoint.com/webrtc/index.html" target="_blank" rel="noopener">WebRTC 教程</a></li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/WebRTC_API" target="_blank" rel="noopener">MDN WebRTC API</a></li><li><a href="https://codelabs.developers.google.com/codelabs/webrtc-web/#0" target="_blank" rel="noopener">谷歌codelab WebRT教程</a></li><li><a href="https://github.com/webrtc/samples" target="_blank" rel="noopener">github上WebRTC各种例子</a></li><li><a href="https://segmentfault.com/bookmark/1230000011819985" target="_blank" rel="noopener">segemntfault上关于WebRTC的教程</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;本例子是参考&lt;a href=&quot;https://www.scaledrone.com/blog/posts/webrtc-tutorial-simple-video-chat&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;webrt
      
    
    </summary>
    
    
      <category term="webrtc" scheme="https://wdd.js.org/tags/webrtc/"/>
    
  </entry>
  
  <entry>
    <title>如何写好技术文档?</title>
    <link href="https://wdd.js.org/how-to-write-a-technical-document.html"/>
    <id>https://wdd.js.org/how-to-write-a-technical-document.html</id>
    <published>2018-02-09T04:52:57.000Z</published>
    <updated>2018-02-09T06:01:22.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文来自于公司内部的一个分享。<br>在文档方面，对内的一些接口文档主要是用swagger来写的。虽然可以在线测试，比较方便。但是也存在着一些更新不及时，swgger文档无法导出成文件的问题。<br>在对外提供的文档方面：我主要负责做一个浏览器端的一个js sdk。文档还算可以<a href="https://github.com/wangduanduan/wellclient" target="_blank" rel="noopener">github地址</a>，所以想把一些写文档的心得分享给大家。</p></blockquote><h1 id="1-衡量好文档的唯一标准是什么？"><a href="#1-衡量好文档的唯一标准是什么？" class="headerlink" title="1. 衡量好文档的唯一标准是什么？"></a>1. 衡量好文档的唯一标准是什么？</h1><p><img src="http://p3alsaatj.bkt.clouddn.com/20180209125351_QEkv8l_Screenshot.jpeg" alt=""></p><p>Martin(Bob大叔)曾在《代码整洁之道》一书打趣地说：当你的代码在做 Code Review 时，审查者要是愤怒地吼道：</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">“What the fuck <span class="keyword">is</span> <span class="keyword">this</span> shit?”</span><br><span class="line">“Dude, What the fuck！”</span><br></pre></td></tr></table></figure><p>等言辞激烈的词语时，那说明你写的代码是 Bad Code，如果审查者只是漫不经心的吐出几个</p><p><code>“What the fuck?”，</code></p><p><img src="http://p3alsaatj.bkt.clouddn.com/20180209125409_sQvHfi_Screenshot.jpeg" alt=""></p><p>那说明你写的是 Good Code。衡量代码质量的唯一标准就<code>是每分钟骂出“WTF” 的频率</code>。</p><p>衡量文档的标准也是如此。</p><h1 id="2-好文档的特点"><a href="#2-好文档的特点" class="headerlink" title="2. 好文档的特点"></a>2. 好文档的特点</h1><ul><li><code>简洁</code>：一句话可以说完的事情，就不要分两句话来说。并不是文档越厚越好，太厚的文档大多没人看。</li><li><code>准确</code>: 字段类型，默认值，备注，是否必填等属性说明。</li><li><code>逻辑性</code>: 文档如何划分？ 利于查看。</li><li><code>demo胜千言</code>: 好的demo胜过各种字段说明，可以复制下来直接使用。</li><li><code>读者心</code>: 从读者的角度考虑, 方法尽量简洁。可以传递一个参数搞定的事情，绝对不要让用户去传两个参数。</li><li><code>及时更新</code>: 不更新的文档比bug更严重。</li><li><code>向后兼容</code>: 不要随意废弃已有的接口或者某个字段，除非你考虑到这样做的后果。</li><li><code>建立文档词汇表</code>：每个概念只有一个名字，不要随意起名字，名不正则言不顺。</li><li><code>格式统一</code>：例如时间格式。我曾见过2017-09-12 09:32:23, 或2017.09.12 09:32:23或2017.09.12 09:32:23。变量名user_name, userName。</li><li><code>使用专业词语</code>：不要过于口语化</li></ul><h1 id="3-总结-写出好文档要有以下四点"><a href="#3-总结-写出好文档要有以下四点" class="headerlink" title="3. 总结: 写出好文档要有以下四点"></a>3. 总结: 写出好文档要有以下四点</h1><ol><li><code>逻辑性</code>：便于查找</li><li><code>专业性</code>: 值得信赖，质量保证</li><li><code>责任心</code>：及时更新，准确性，向后兼容</li><li><code>读者心</code>：你了解的东西，别人可能并不清楚。从读者的角度去考虑，他们需要什么，而不是一味去强调你能提供什么。</li></ol><h1 id="4-写文档的工具"><a href="#4-写文档的工具" class="headerlink" title="4. 写文档的工具"></a>4. 写文档的工具</h1><ul><li>markdown: 方便快捷，可以导出各种格式的文件</li><li>swagger: 功能强大，需要部署，不方便传递文件</li></ul><h1 id="5-markdown-工具推荐"><a href="#5-markdown-工具推荐" class="headerlink" title="5. markdown 工具推荐"></a>5. markdown 工具推荐</h1><ul><li><a href="https://leanote.com/" target="_blank" rel="noopener">蚂蚁笔记</a> 这是我正使用的。<ul><li>全平台（mac windows ios）有客户端，和浏览器端</li><li>笔记可以直接公布为博客</li><li>支持独立域名</li><li>标签很好用</li><li>支持思维导图</li><li>支持历史记录</li></ul></li><li><a href="https://www.zybuluo.com/mdeditor#411452" target="_blank" rel="noopener">cmd-markdown</a></li><li>有道云笔记</li></ul><h1 id="6-文档之外"><a href="#6-文档之外" class="headerlink" title="6. 文档之外"></a>6. 文档之外</h1><p>公司有个同事，我曾问他使用什么搜索一些技术文档，他说用百度。作为一个翻墙老司机，我惊诧的问他：你为什么不用谷歌去搜索。他说他不会翻墙。我只能呵呵一笑。</p><p>自从有一次搜索：<code>graph for x^8 + y^8</code>，我就决定不再使用百度了。你可以看一下两者的返回结果有什么不同。</p><p><strong>总之：<code>有些鸟儿是关不住的 他们的羽毛太鲜亮了</code>。</strong></p><p><img src="http://p3alsaatj.bkt.clouddn.com/20180209125425_frCDAB_Screenshot.jpeg" alt=""><br><img src="http://p3alsaatj.bkt.clouddn.com/20180209125433_KKkTLQ_Screenshot.jpeg" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;本文来自于公司内部的一个分享。&lt;br&gt;在文档方面，对内的一些接口文档主要是用swagger来写的。虽然可以在线测试，比较方便。但是也存在着一些更新不及时，swgger文档无法导出成文件的问题。&lt;br&gt;在对外提供的文档方面：我主要负责做一个浏览器端的
      
    
    </summary>
    
    
      <category term="文档" scheme="https://wdd.js.org/tags/%E6%96%87%E6%A1%A3/"/>
    
  </entry>
  
</feed>

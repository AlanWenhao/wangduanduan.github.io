<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>洞香春</title>
  
  <subtitle>洞香春以名士荟萃、谈论国事、交流思想而著称于当时列国 --《大秦帝国》</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://wdd.js.org/"/>
  <updated>2018-03-27T06:45:18.000Z</updated>
  <id>https://wdd.js.org/</id>
  
  <author>
    <name>王端端</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>js中的真值和假值</title>
    <link href="https://wdd.js.org/js-true-and-false-value.html"/>
    <id>https://wdd.js.org/js-true-and-false-value.html</id>
    <published>2018-03-27T06:31:01.000Z</published>
    <updated>2018-03-27T06:45:18.000Z</updated>
    
    <content type="html"><![CDATA[<p><code>无论什么语言，都需要逻辑，而逻辑中，能否判断出真假，是最基本也是最重要技能之一</code>。</p><h1 id="JS中的假值有6个"><a href="#JS中的假值有6个" class="headerlink" title="JS中的假值有6个"></a>JS中的假值有6个</h1><ol><li>false</li><li>‘’</li><li>undefinded</li><li>null</li><li>0, +0, -0</li><li>NaN</li></ol><h1 id="有点类似假值的真值有两个"><a href="#有点类似假值的真值有两个" class="headerlink" title="有点类似假值的真值有两个"></a>有点类似假值的真值有两个</h1><ol><li>{}</li><li>[]</li></ol><p>空对象和空数组，很多初学者都很用把这两个当做假值。但是实际上他们是真值，你只需要记住，除了null之外的所有对象类型的数据，都是真值。</p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typeof</span> <span class="literal">null</span> <span class="comment">// 'object'</span></span><br></pre></td></tr></table></figure><p>据说：<code>typeof null返回对象这是一个js语言中的bug。</code>实际上typeof null应该返回null才比较准确，但是这个bug已经存来好久了。几乎所有的代码里都这样去判断。如果把typeof null给改成返回null, 那么这必定会导致JS世界末日。</p><p>我们承认<code>JS并不完美</code>，她有很多小缺点，但是这并不妨碍她吸引万千开发者拜倒在她的石榴裙下。</p><p>就像一首歌唱的：<code>有些人说不清哪里好 但就是谁都替代不了</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;code&gt;无论什么语言，都需要逻辑，而逻辑中，能否判断出真假，是最基本也是最重要技能之一&lt;/code&gt;。&lt;/p&gt;
&lt;h1 id=&quot;JS中的假值有6个&quot;&gt;&lt;a href=&quot;#JS中的假值有6个&quot; class=&quot;headerlink&quot; title=&quot;JS中的假值有6个&quot;&gt;&lt;/
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>前端之路 树根 树干 树叶</title>
    <link href="https://wdd.js.org/frontend-tree-root-trunk-leaf.html"/>
    <id>https://wdd.js.org/frontend-tree-root-trunk-leaf.html</id>
    <published>2018-03-26T10:09:44.000Z</published>
    <updated>2018-03-26T10:11:51.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="树根-向下扎实基本功"><a href="#树根-向下扎实基本功" class="headerlink" title="树根 向下扎实基本功"></a>树根 向下扎实基本功</h1><h1 id="树干-积累让身躯更坚实"><a href="#树干-积累让身躯更坚实" class="headerlink" title="树干 积累让身躯更坚实"></a>树干 积累让身躯更坚实</h1><h1 id="树叶-随风而去的好奇心"><a href="#树叶-随风而去的好奇心" class="headerlink" title="树叶 随风而去的好奇心"></a>树叶 随风而去的好奇心</h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;树根-向下扎实基本功&quot;&gt;&lt;a href=&quot;#树根-向下扎实基本功&quot; class=&quot;headerlink&quot; title=&quot;树根 向下扎实基本功&quot;&gt;&lt;/a&gt;树根 向下扎实基本功&lt;/h1&gt;&lt;h1 id=&quot;树干-积累让身躯更坚实&quot;&gt;&lt;a href=&quot;#树干-积累让身躯更坚
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>一切皆有可能 IE5 支持WebSocket stompjs</title>
    <link href="https://wdd.js.org/everything-is-possible-ie5-support-websocket.html"/>
    <id>https://wdd.js.org/everything-is-possible-ie5-support-websocket.html</id>
    <published>2018-03-23T10:54:53.000Z</published>
    <updated>2018-03-24T09:29:36.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="web-socket-js让IE5支持WebSocket"><a href="#web-socket-js让IE5支持WebSocket" class="headerlink" title="web-socket-js让IE5支持WebSocket"></a>web-socket-js让IE5支持WebSocket</h1><p><a href="https://github.com/gimite/web-socket-js" target="_blank" rel="noopener">web-socket-js</a>基于flash技术, 让浏览器可以拥有类似原生的WebSocket的体验。只需要在服务端做少许的改动</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;web-socket-js让IE5支持WebSocket&quot;&gt;&lt;a href=&quot;#web-socket-js让IE5支持WebSocket&quot; class=&quot;headerlink&quot; title=&quot;web-socket-js让IE5支持WebSocket&quot;&gt;&lt;/a&gt;we
      
    
    </summary>
    
    
      <category term="未完成" scheme="https://wdd.js.org/tags/%E6%9C%AA%E5%AE%8C%E6%88%90/"/>
    
      <category term="ie5" scheme="https://wdd.js.org/tags/ie5/"/>
    
      <category term="websocket" scheme="https://wdd.js.org/tags/websocket/"/>
    
      <category term="stompjs" scheme="https://wdd.js.org/tags/stompjs/"/>
    
  </entry>
  
  <entry>
    <title>需求文档写作规范</title>
    <link href="https://wdd.js.org/demand-docs-guideline-draft.html"/>
    <id>https://wdd.js.org/demand-docs-guideline-draft.html</id>
    <published>2018-03-22T06:31:49.000Z</published>
    <updated>2018-03-23T01:44:56.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-项目创建"><a href="#1-项目创建" class="headerlink" title="1. 项目创建"></a>1. 项目创建</h1><p>一般情况，一个服务要有一个需求文档的git项目。即需要在<a href="http://192.168.60.11:30000/groups/docs" target="_blank" rel="noopener">gitlab docs 组织下建立与之对应的项目仓库</a></p><p><img src="http://p3alsaatj.bkt.clouddn.com/20180323090328_PZuu7W_Jietu20180323-090307.jpeg" alt=""></p><p>例如创建一个需求文档的项目。</p><p><img src="http://p3alsaatj.bkt.clouddn.com/20180323092522_uW8yBy_Jietu20180323-092513.jpeg" alt=""></p><h1 id="文件结构"><a href="#文件结构" class="headerlink" title="文件结构"></a>文件结构</h1><h1 id="2-版本管理"><a href="#2-版本管理" class="headerlink" title="2. 版本管理"></a>2. 版本管理</h1><p><code>需求文档基于git分支进行版本管理。</code></p><p>默认情况下，创建一个git项目都会有一个master分支。我们并不在master分支上写任何需求。</p><p>我们根据项目的版本来创建分支。例如我们先创建一个v1.0.0的分支，我们在该分支上写需求文档。当v1.0.0版本发布后，我们基于v1.0.1分支。 而且我们能够自由的切换分支。</p><p><img src="http://p3alsaatj.bkt.clouddn.com/20180323092753_al0zTZ_Jietu20180323-092744.jpeg" alt=""></p><h1 id="3-需求状态"><a href="#3-需求状态" class="headerlink" title="3. 需求状态"></a>3. 需求状态</h1><p>需求有以下几种状态，</p><ul><li>开始(draft), 草稿阶段</li><li>需求稳定(stable), 需求标记为stable, 开发才着手开始开发</li><li>需求修改(modified), 需求处于修改状态，则开发暂停</li><li>开发(dev), 开始开发</li><li>测试(test), 开始测试</li><li>发布(released), 测试通过，开始发布</li></ul><p><img src="http://p3alsaatj.bkt.clouddn.com/20180323094409_akabhc_Jietu20180323-094357.jpeg" alt=""></p><h1 id="4-格式要求"><a href="#4-格式要求" class="headerlink" title="4. 格式要求"></a>4. 格式要求</h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1-项目创建&quot;&gt;&lt;a href=&quot;#1-项目创建&quot; class=&quot;headerlink&quot; title=&quot;1. 项目创建&quot;&gt;&lt;/a&gt;1. 项目创建&lt;/h1&gt;&lt;p&gt;一般情况，一个服务要有一个需求文档的git项目。即需要在&lt;a href=&quot;http://192.168.
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>在实践中我遇到stompjs, websocket和nginx的问题与总结</title>
    <link href="https://wdd.js.org/stomp-over-websocket.html"/>
    <id>https://wdd.js.org/stomp-over-websocket.html</id>
    <published>2018-03-20T14:09:34.000Z</published>
    <updated>2018-03-22T01:39:21.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-AWS-EC2-不支持WebSocket"><a href="#1-AWS-EC2-不支持WebSocket" class="headerlink" title="1. AWS EC2 不支持WebSocket"></a>1. AWS EC2 不支持WebSocket</h1><p><a href="https://www.menubar.io/websockets-aws-elasticbeanstalk-ec2/" target="_blank" rel="noopener">直达解决方案 英文版</a></p><p>简单说一下思路：WebSocket底层基于TCP协议的，如果你的服务器基于HTTP协议暴露80端口，那WebSocket肯定无法连接。<code>你只要将HTTP协议修改成TCP协议就可以了。</code></p><p><img src="http://p3alsaatj.bkt.clouddn.com/20180320223231_T2gHyb_Screenshot.jpeg" alt=""></p><p>然后是安全组的配置：</p><p><img src="http://p3alsaatj.bkt.clouddn.com/20180320223255_pGGCWF_Screenshot.jpeg" alt=""></p><p>同样如果使用了NGINX作为反向代理，那么NGINX也需要做配置的。</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// https://gist.githubusercontent.com/unshift/324be6a8dc9e880d4d670de0dc97a8ce/raw/29507ed6b3c9394ecd7842f9d3228827cffd1c58/elasticbeanstalk_websockets</span></span><br><span class="line"></span><br><span class="line"><span class="symbol">files:</span></span><br><span class="line">    <span class="string">"/etc/nginx/conf.d/01_websockets.conf"</span> :</span><br><span class="line"><span class="symbol">        mode:</span> <span class="string">"000644"</span></span><br><span class="line"><span class="symbol">        owner:</span> root</span><br><span class="line"><span class="symbol">        group:</span> root</span><br><span class="line">        content : |</span><br><span class="line">            upstream <span class="class">nodejs </span>&#123;</span><br><span class="line">                server <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">8081</span>;</span><br><span class="line">                keepalive <span class="number">256</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="class">server </span>&#123;</span><br><span class="line">                listen <span class="number">8080</span>;</span><br><span class="line"></span><br><span class="line">                location <span class="class">/ &#123;</span></span><br><span class="line"><span class="class">                    proxy_pass  http:<span class="comment">//nodejs;</span></span></span><br><span class="line"><span class="class">                    proxy_set_header Upgrade $http_upgrade;</span></span><br><span class="line"><span class="class">                    proxy_set_header Connection <span class="string">"upgrade"</span>;</span></span><br><span class="line"><span class="class">                    proxy_http_version <span class="number">1.1</span>;</span></span><br><span class="line"><span class="class">                    proxy_set_header        Host            $host;</span></span><br><span class="line"><span class="class">                    proxy_set_header        X-Real-IP       $remote_addr;</span></span><br><span class="line"><span class="class">                    proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;</span></span><br><span class="line"><span class="class">                &#125;</span></span><br><span class="line"><span class="class">            &#125;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">    <span class="string">"/opt/elasticbeanstalk/hooks/appdeploy/enact/41_remove_eb_nginx_confg.sh"</span>:</span></span><br><span class="line"><span class="class"><span class="symbol">        mode:</span> <span class="string">"000755"</span></span></span><br><span class="line"><span class="class"><span class="symbol">        owner:</span> root</span></span><br><span class="line"><span class="class"><span class="symbol">        group:</span> root</span></span><br><span class="line"><span class="class">        content : |</span></span><br><span class="line"><span class="class">            mv <span class="meta-keyword">/etc/</span>nginx/conf.d/<span class="number">00</span>_elastic_beanstalk_proxy.conf <span class="meta-keyword">/etc/</span>nginx/conf.d/<span class="number">00</span>_elastic_beanstalk_proxy.conf.old</span></span><br></pre></td></tr></table></figure><h1 id="2-NGINX做反向代理是需要注意的问题"><a href="#2-NGINX做反向代理是需要注意的问题" class="headerlink" title="2. NGINX做反向代理是需要注意的问题"></a>2. NGINX做反向代理是需要注意的问题</h1><p>如果排除所有问题后，那剩下的问题可以考虑出在反向代理上，一下有几点是可以考虑的。</p><ul><li><p>HTTP的版本问题: http有三个版本，http 1.0, 1.1, 2.0, 现在主流的浏览器都是使用http 1.1版本，为了保证更好的兼容性，最好转发时不要修改协议的版本号</p></li><li><p>NGINX具有路径重写功能，如果你使用了该功能，就要考虑问题可能出在这里，因为NGINX在路径重写时，需要对路径进行编解码，有可能在解码之后，没有编码就发送给后端的服务器，导致后端服务器无法对URL进行解码。</p></li></ul><h1 id="3-IE8-IE9-有没有简单方便支持WebSocket的方案"><a href="#3-IE8-IE9-有没有简单方便支持WebSocket的方案" class="headerlink" title="3. IE8 IE9 有没有简单方便支持WebSocket的方案"></a>3. IE8 IE9 有没有简单方便支持WebSocket的方案</h1><p>目前测试下来，最简单方案是基于flash的。参考：<a href="https://github.com/gimite/web-socket-js" target="_blank" rel="noopener">https://github.com/gimite/web-socket-js</a>, </p><p>注意该方案需要在WebSocket服务上的843端口, 提供<a href="https://www.adobe.com/devnet/flashplayer/articles/socket_policy_files.html" target="_blank" rel="noopener">socket_policy_files</a>, 也可以参考：<a href="http://old.briangonzalez.org/posts/websockets-polyfill" target="_blank" rel="noopener">A PolyFill for WebSockets</a></p><p>网上也有教程是使用socket.io基于ajax长轮训的方案，如果服务端已经确定的情况下，一般是不会轻易改动服务端代码的。而且ajax长轮训也是有延迟，和disconnect时，无法回调的问题。</p><h1 id="4-stompjs-connected后，没有调用connect-callBack"><a href="#4-stompjs-connected后，没有调用connect-callBack" class="headerlink" title="4. stompjs connected后，没有调用connect_callBack"></a>4. stompjs connected后，没有调用connect_callBack</h1><p>该问题主要是使用web-socket-js，在ie8,ie9上出现的</p><p>该问题还没有分析出原因，但是看了stompjs的源码不是太多，明天用源码调试看看原因。</p><p>问题已经找到，请参考：<a href="https://github.com/wangduanduan/stomp-websocket#about-ie8-ie9-use-websocket" target="_blank" rel="noopener">https://github.com/wangduanduan/stomp-websocket#about-ie8-ie9-use-websocket</a></p><h1 id="5-参考文献"><a href="#5-参考文献" class="headerlink" title="5. 参考文献"></a>5. 参考文献</h1><ul><li><a href="http://jmesnil.net/stomp-websocket/doc/" target="_blank" rel="noopener">STOMP Over WebSocket</a></li><li><a href="http://stomp.github.io/stomp-specification-1.1.html" target="_blank" rel="noopener">STOMP Protocol Specification, Version 1.1</a></li><li><a href="https://segmentfault.com/a/1190000006617344" target="_blank" rel="noopener">Stomp Over Websocket文档</a>, </li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1-AWS-EC2-不支持WebSocket&quot;&gt;&lt;a href=&quot;#1-AWS-EC2-不支持WebSocket&quot; class=&quot;headerlink&quot; title=&quot;1. AWS EC2 不支持WebSocket&quot;&gt;&lt;/a&gt;1. AWS EC2 不支持WebSo
      
    
    </summary>
    
    
      <category term="websocket" scheme="https://wdd.js.org/tags/websocket/"/>
    
      <category term="stompjs" scheme="https://wdd.js.org/tags/stompjs/"/>
    
  </entry>
  
  <entry>
    <title>笔记 编写可读性代码的艺术</title>
    <link href="https://wdd.js.org/art-of-readable-code.html"/>
    <id>https://wdd.js.org/art-of-readable-code.html</id>
    <published>2018-03-15T10:21:50.000Z</published>
    <updated>2018-03-15T10:27:53.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://p3alsaatj.bkt.clouddn.com/20180315182640_4hEdE7_.jpeg" alt=""></p><h1 id="1-代码应当易于理解"><a href="#1-代码应当易于理解" class="headerlink" title="1. 代码应当易于理解"></a>1. 代码应当易于理解</h1><ul><li>唯一标准：<code>让别人理解的时间最小</code></li></ul><h1 id="2-把信息装到名字里"><a href="#2-把信息装到名字里" class="headerlink" title="2. 把信息装到名字里"></a>2. 把信息装到名字里</h1><ul><li>选择专业的词</li><li>避免泛泛的名字</li><li>使用具体的名字代替抽象的名字</li><li>为名字携带更多的信息</li><li>名字的作用域越大，最好名字越长</li><li>丢掉没用的词</li></ul><table><thead><tr><th>单词</th><th>更多选择</th></tr></thead><tbody><tr><td>send</td><td>deliver, dispatch, announce, distribute,route</td></tr><tr><td>find</td><td>search, extract, locate, recover</td></tr><tr><td>start</td><td>launch, create, begin, open</td></tr><tr><td>make</td><td>create, set up, build, generate, compose, add ,new </td></tr></tbody></table><h1 id="3-审美"><a href="#3-审美" class="headerlink" title="3. 审美"></a>3. 审美</h1><p>我之前学设计的时候看过一本书，<a href="https://book.douban.com/subject/3323633/" target="_blank" rel="noopener">写给大家看的设计书（第3版）</a>将这本书中的设计审美原理应用到写代码上，真实十分贴切，如果你读过此书，你的审美能力会大幅提高。</p><ul><li>对齐</li><li>重复</li><li>对比</li><li>亲密性 按照亲密关系分段</li><li>顺序</li></ul><p><img src="http://p3alsaatj.bkt.clouddn.com/20180315182604_54Imyu_.jpeg" alt=""></p><h1 id="4-写什么样的注释"><a href="#4-写什么样的注释" class="headerlink" title="4. 写什么样的注释"></a>4. 写什么样的注释</h1><ul><li>不要写一眼就能看懂的注释，类似于此地无银三百两</li><li>与其写注释，不如把变量名函数名写好，可以从名字中理解</li><li>记录你的思想</li><li>加入评论</li><li>指出哪里有陷阱，需要注意</li><li>言简意赅，不要啰嗦</li><li>不要使用不明确的代词，不要像像算命先生，如何解释都对</li></ul><h1 id="5-可读性控制流"><a href="#5-可读性控制流" class="headerlink" title="5. 可读性控制流"></a>5. 可读性控制流</h1><ul><li><code>追求最小理解时间</code>，而不是最少代码行</li><li>尽可能提前return结果</li><li>少点嵌套，要尽可能扁平化</li><li>理解执行流程。有些是连续执行。有些是随时都可能执行，像事件回调</li><li>避免使用while, 一般我们循环都是为了遍历数组，为什么不用forEach呢？</li></ul><h1 id="6-拆分超长表达式"><a href="#6-拆分超长表达式" class="headerlink" title="6. 拆分超长表达式"></a>6. 拆分超长表达式</h1><ul><li>拆分超长的表达式</li><li>拆分巨大的语句</li><li>尽量把逻辑包裹在函数中，不要重复你自己 DRY</li></ul><h1 id="7-变量与可读性"><a href="#7-变量与可读性" class="headerlink" title="7. 变量与可读性"></a>7. 变量与可读性</h1><ul><li>减少变量，变量越少越好</li><li>减少中间结果，垂直消费</li><li>减少用于控制流的变量</li><li>缩小变量的作用域</li><li>用到变量再定义，不要提前定义，不然还要随时想着，之前定义的变量是用干嘛的呢？</li></ul><h1 id="8-重构"><a href="#8-重构" class="headerlink" title="8. 重构"></a>8. 重构</h1><ul><li>抽取不相关的自子问题</li><li>抽取各种配置性的变量在一起，他们都是配置</li><li>尽量写纯函数</li><li>创建大量通用代码</li><li>打造自己的武器装备库</li><li>简化接口传参</li><li>过犹不及，不要太苛刻</li></ul><h1 id="9-一次只做一件事"><a href="#9-一次只做一件事" class="headerlink" title="9. 一次只做一件事"></a>9. 一次只做一件事</h1><h1 id="10-少写代码"><a href="#10-少写代码" class="headerlink" title="10. 少写代码"></a>10. 少写代码</h1><ul><li><code>最好的代码就是没有代码</code></li><li>别费神实现那个功能，你不会需要的</li><li>质疑和拆分的需求</li><li>保持小代码库</li><li>删除没用的代码</li><li>删除没有的注释</li></ul><h1 id="11-调试"><a href="#11-调试" class="headerlink" title="11. 调试"></a>11. 调试</h1><ul><li>尽可能将错误打印出来，不要隐藏</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;http://p3alsaatj.bkt.clouddn.com/20180315182640_4hEdE7_.jpeg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;1-代码应当易于理解&quot;&gt;&lt;a href=&quot;#1-代码应当易于理解&quot; class=&quot;head
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>如何高效地报告 Bug</title>
    <link href="https://wdd.js.org/how-to-report-bug-effective.html"/>
    <id>https://wdd.js.org/how-to-report-bug-effective.html</id>
    <published>2018-03-15T08:39:06.000Z</published>
    <updated>2018-03-15T13:32:33.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://p3alsaatj.bkt.clouddn.com/20180315213220_Rq8h6q_lady-bug-on-leaf.jpg.653x0_q80_crop-smart.jpeg" alt=""></p><h1 id="1-自问自答"><a href="#1-自问自答" class="headerlink" title="1. 自问自答"></a>1. 自问自答</h1><ul><li>该问题是否是必现的？</li><li>该问题出现多久了？</li><li>问题出现前后有没有什么异常？ 例如几分钟之前启动了其他的服务，有其他服务在更新</li></ul><h1 id="2-要事实，不要推测"><a href="#2-要事实，不要推测" class="headerlink" title="2. 要事实，不要推测"></a>2. 要事实，不要推测</h1><p>在bug报告里，要设法搞清什么是事实（例如：压测环境座席监控没有数据）。什么是推测（例如：我想问题可能出在XXX）。如果愿意的话，<code>您可以省去推测，但是千万别省略事实。</code></p><h1 id="3-要精确，不要模糊"><a href="#3-要精确，不要模糊" class="headerlink" title="3. 要精确，不要模糊"></a>3. 要精确，不要模糊</h1><h2 id="3-1-不要使用代词"><a href="#3-1-不要使用代词" class="headerlink" title="3.1. 不要使用代词"></a>3.1. 不要使用代词</h2><h2 id="3-2-不要使用”没有”"><a href="#3-2-不要使用”没有”" class="headerlink" title="3.2. 不要使用”没有”"></a>3.2. 不要使用”没有”</h2><h1 id="4-要详细，不要粗略"><a href="#4-要详细，不要粗略" class="headerlink" title="4. 要详细，不要粗略"></a>4. 要详细，不要粗略</h1><h1 id="5-建议要提供的数据"><a href="#5-建议要提供的数据" class="headerlink" title="5. 建议要提供的数据"></a>5. 建议要提供的数据</h1><ul><li><code>建议</code> 错误日志, 程序员最喜欢bug里的错误日志，<code>错误日志能说明一切</code>，非常建议你能提供错误日志</li><li><code>必须</code> 操作步骤, 有利于程序员去重现bug</li><li><code>可选</code> 错误截图, 在描述不清楚的时候，错误截图时更好的方法</li></ul><h1 id="6-参考"><a href="#6-参考" class="headerlink" title="6. 参考"></a>6. 参考</h1><ul><li><a href="https://www.chiark.greenend.org.uk/~sgtatham/bugs-cn.html" target="_blank" rel="noopener">如何有效地报告 Bug</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;http://p3alsaatj.bkt.clouddn.com/20180315213220_Rq8h6q_lady-bug-on-leaf.jpg.653x0_q80_crop-smart.jpeg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;1-自问
      
    
    </summary>
    
    
      <category term="bug" scheme="https://wdd.js.org/tags/bug/"/>
    
  </entry>
  
  <entry>
    <title>状态码为200时 jQuery ajax报错</title>
    <link href="https://wdd.js.org/status-code-200-jquery-ajax-failed.html"/>
    <id>https://wdd.js.org/status-code-200-jquery-ajax-failed.html</id>
    <published>2018-03-15T06:17:59.000Z</published>
    <updated>2018-03-15T06:33:16.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-问题现象"><a href="#1-问题现象" class="headerlink" title="1. 问题现象"></a>1. 问题现象</h1><p>HTTP 状态码为 200 OK 时， jquery ajax报错</p><h1 id="2-问题原因"><a href="#2-问题原因" class="headerlink" title="2. 问题原因"></a>2. 问题原因</h1><p>jquery ajax的dataType字段包含：json, 但是服务端返回的数据不是规范的json格式，导致jquery解析json字符串报错，最终导致ajax报错。</p><p>jQuery ajax 官方文档上说明：</p><blockquote><p>“json”: Evaluates the response as JSON and returns a JavaScript object. Cross-domain “json” requests are converted to “jsonp” unless the request includes jsonp: false in its request options. The JSON data is parsed in a strict manner; any malformed JSON is rejected and a parse error is thrown. As of jQuery 1.9, an empty response is also rejected; the server should return a response of null or {} instead. (See json.org for more information on proper JSON formatting.)</p></blockquote><p>设置dataType为json时，jquery就会去解析响应体为JavaScript对象。跨域的json请求会被转化成jsonp, 除非设置了<code>jsonp: false</code>。JSON数据会以严格模式去解析，任何不规范的JSON字符串都会解析异常并抛出错误。从jQuery 1.9起，一个空的响应也会被抛出异常。服务端应该返回一个<code>null</code>或者<code>{}</code>去代替空响应。参考<a href="http://json.org/" target="_blank" rel="noopener">json.org</a>, 查看更多内容</p><h1 id="3-解决方案"><a href="#3-解决方案" class="headerlink" title="3. 解决方案"></a>3. 解决方案</h1><p>这个问题的原因是后端返回的数据格式不规范，所以后端在返回结果是，不要使用空的响应，也不应该去手动拼接JSON字符串，而应该交给响应的库来实现JSON序列化字符串工作。</p><h1 id="4-参考"><a href="#4-参考" class="headerlink" title="4. 参考"></a>4. 参考</h1><ul><li><a href="https://stackoverflow.com/questions/6186770/ajax-request-returns-200-ok-but-an-error-event-is-fired-instead-of-success" target="_blank" rel="noopener">Ajax request returns 200 OK, but an error event is fired instead of success</a></li><li><a href="http://api.jquery.com/jQuery.ajax/" target="_blank" rel="noopener">jQuery.ajax</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1-问题现象&quot;&gt;&lt;a href=&quot;#1-问题现象&quot; class=&quot;headerlink&quot; title=&quot;1. 问题现象&quot;&gt;&lt;/a&gt;1. 问题现象&lt;/h1&gt;&lt;p&gt;HTTP 状态码为 200 OK 时， jquery ajax报错&lt;/p&gt;
&lt;h1 id=&quot;2-问题原因
      
    
    </summary>
    
    
      <category term="ajax" scheme="https://wdd.js.org/tags/ajax/"/>
    
  </entry>
  
  <entry>
    <title>前端剪贴板复制功能实现原理</title>
    <link href="https://wdd.js.org/clipboard-copy-tutorial.html"/>
    <id>https://wdd.js.org/clipboard-copy-tutorial.html</id>
    <published>2018-03-14T06:19:12.000Z</published>
    <updated>2018-03-14T10:36:45.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-兼容情况"><a href="#1-兼容情况" class="headerlink" title="1. 兼容情况"></a>1. 兼容情况</h1><p>如果想浏览器支持粘贴功能，那么浏览器必须支持，<a href="https://developer.mozilla.org/en-US/docs/Web/API/Document/execCommand" target="_blank" rel="noopener">document.execCommand(‘copy’)</a>方法，也可以根据<a href="https://developer.mozilla.org/en-US/docs/Web/API/Document/queryCommandSupported" target="_blank" rel="noopener">document.queryCommandEnabled(‘copy’)</a>，返回的true或者false判断浏览器是否支持copy命令。</p><p>从下表可以看出，主流的浏览器都支持execCommand命令</p><p><img src="http://p3alsaatj.bkt.clouddn.com/20180314142213_IhrFsz_Jietu20180314-141253.jpeg" alt=""></p><h1 id="2-复制的原理"><a href="#2-复制的原理" class="headerlink" title="2. 复制的原理"></a>2. 复制的原理</h1><ol><li>查询元素</li><li>选中元素</li><li>执行复制命令</li></ol><h1 id="3-代码展示"><a href="#3-代码展示" class="headerlink" title="3. 代码展示"></a>3. 代码展示</h1><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// html</span></span><br><span class="line">&lt;<span class="selector-tag">input</span> id=<span class="string">"username"</span> value=<span class="string">"123456"</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 查询元素</span></span><br><span class="line"><span class="selector-tag">var</span> username = document.getElementById(‘username’)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 选中元素</span></span><br><span class="line">username.select()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 执行复制</span></span><br><span class="line">document.execCommand(<span class="string">'copy'</span>)</span><br></pre></td></tr></table></figure><blockquote><p>注意: 以上代码只是简单示意，在实践过程中还有几个要判断的情况</p></blockquote><ol><li>首要要去检测浏览器execCommand能力检测</li><li>选取元素时，有可能选取元素为空，要考虑这种情况的处理</li></ol><h1 id="4-第三方方案"><a href="#4-第三方方案" class="headerlink" title="4. 第三方方案"></a>4. 第三方方案</h1><p><a href="https://clipboardjs.com/" target="_blank" rel="noopener">clipboard.js</a>是一个比较方便的剪贴板库，功能蛮多的。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Target --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">id</span>=<span class="string">"bar"</span>&gt;</span>Mussum ipsum cacilds...<span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Trigger --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn"</span> <span class="attr">data-clipboard-action</span>=<span class="string">"cut"</span> <span class="attr">data-clipboard-target</span>=<span class="string">"#bar"</span>&gt;</span></span><br><span class="line">    Cut to clipboard</span><br><span class="line"><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><p>官方给的代码里有上面的一个示例，如果你用了这个示例，但是不起作用，那你估计是没有初始化ClipboardJS示例的。</p><p>注意：下面的函数必须要主动调用，这样才能给响应的DOM元素注册事件。 ClipboardJS源代码压缩后大约有3kb，虽然很小了，但是如果你不需要它的这么多功能的话，其实你自己写几行代码就可以搞定复制功能。</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="type">ClipboardJS</span>(<span class="string">'.btn'</span>);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1-兼容情况&quot;&gt;&lt;a href=&quot;#1-兼容情况&quot; class=&quot;headerlink&quot; title=&quot;1. 兼容情况&quot;&gt;&lt;/a&gt;1. 兼容情况&lt;/h1&gt;&lt;p&gt;如果想浏览器支持粘贴功能，那么浏览器必须支持，&lt;a href=&quot;https://developer.mo
      
    
    </summary>
    
    
      <category term="copy" scheme="https://wdd.js.org/tags/copy/"/>
    
      <category term="clipboard" scheme="https://wdd.js.org/tags/clipboard/"/>
    
  </entry>
  
  <entry>
    <title>如何成为从培训班里出来的牛人？</title>
    <link href="https://wdd.js.org/how-to-learn-form-trianing-class.html"/>
    <id>https://wdd.js.org/how-to-learn-form-trianing-class.html</id>
    <published>2018-03-12T11:44:10.000Z</published>
    <updated>2018-03-13T03:38:18.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://p3alsaatj.bkt.clouddn.com/20180312210006_ggoJT5_.jpeg" alt="牛人"></p><a id="more"></a><h1 id="1-培训行业的现状和问题"><a href="#1-培训行业的现状和问题" class="headerlink" title="1. 培训行业的现状和问题"></a>1. 培训行业的现状和问题</h1><p><img src="http://p3alsaatj.bkt.clouddn.com/20180312210146_0EzB4z_.jpeg" alt=""></p><p>进入培训班学习可能有一下两个原因：</p><ol><li>想转行</li><li>学校里学的东西太过时了，需要深入学习本行业的知识</li></ol><p>培训的行业的核心思想都是：如何快速的让你能够面试通过</p><p>老师教的东西大多是一些面试必须要问的一些知识，做的项目也应该都是市面上比较火的项目。这么做的不利之处有以下几点：</p><ol><li>局限性：知识局限于教师的授课范围，知识面窄</li><li>扩展性：快餐式学习管饱不管消化，很多知识吸收不高，无法举一反三</li><li>系统性：没有系统的整体知识体系</li></ol><p>所以这些因素可能会让用人不太喜欢培训出来的应聘者，而往往希望刚毕业的应届生。但是，培训行业出来的应聘者，也不乏国士无双的牛逼人物。</p><h1 id="2-如何成为培训出来的牛人？"><a href="#2-如何成为培训出来的牛人？" class="headerlink" title="2. 如何成为培训出来的牛人？"></a>2. 如何成为培训出来的牛人？</h1><p><img src="http://p3alsaatj.bkt.clouddn.com/20180312210006_ggoJT5_.jpeg" alt="牛人"></p><p>无论在哪个行业，自学都是必不可少的事情。毕业不是学习的终点，而应该是起点。你和技术牛人之间的距离或许并不遥远，可能只是一个芭蕉扇的距离。</p><h2 id="2-1-读权威书籍，扎实理论基础"><a href="#2-1-读权威书籍，扎实理论基础" class="headerlink" title="2.1. 读权威书籍，扎实理论基础"></a>2.1. 读权威书籍，扎实理论基础</h2><p><img src="http://p3alsaatj.bkt.clouddn.com/20180312205915_vK65MG_images.jpeg" alt=""></p><p>每个行业都有一些经历时间考验而熠熠生辉的经典数据，例如在前端行业。我认为下面两本书是必须要读完一本的。</p><p><strong>基础</strong></p><ul><li><a href="https://book.douban.com/subject/10546125/" target="_blank" rel="noopener">JavaScript高级程序设计</a></li><li><a href="https://book.douban.com/subject/1232061/" target="_blank" rel="noopener">JavaScript权威指南</a></li></ul><p><strong>进阶</strong></p><ul><li><a href="https://book.douban.com/subject/3590768/" target="_blank" rel="noopener">JavaScript语言精粹</a></li><li><a href="https://book.douban.com/subject/26638316/" target="_blank" rel="noopener">JavaScript忍者秘籍</a></li><li><a href="https://book.douban.com/subject/25883834/" target="_blank" rel="noopener">You Don’t Know JS</a></li><li><a href="https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/" target="_blank" rel="noopener">JS函数式编程指南</a></li></ul><h2 id="2-2-动手能力，闲话少说，放码过来"><a href="#2-2-动手能力，闲话少说，放码过来" class="headerlink" title="2.2. 动手能力，闲话少说，放码过来"></a>2.2. 动手能力，闲话少说，放码过来</h2><p><img src="http://p3alsaatj.bkt.clouddn.com/20180312210414_APpqMz_Screenshot.jpeg" alt=""></p><p>各种demo啊，效果啊，有时间自己都可以撸一遍，放在github上，又不收钱，还能提高动手能力。</p><h2 id="2-3-数据结构"><a href="#2-3-数据结构" class="headerlink" title="2.3. 数据结构"></a>2.3. 数据结构</h2><p><img src="http://p3alsaatj.bkt.clouddn.com/20180312205748_PCryFT_.jpeg" alt=""></p><blockquote><p>差劲的程序员操心代码，牛逼的程序员操心数据结构和它们之间的关系。 一一Linus Torvalds, Linux 创始人</p></blockquote><p>优秀的数据结构，可以节省你80%的编码时间。差劲的数据结构，你需要花大量的时间去做各种高难度动作的转换，一不小心，数据库就要累的气喘如牛，停机罢工。</p><p><img src="http://p3alsaatj.bkt.clouddn.com/20180313113812_yObLd0_.jpeg" alt=""></p><h2 id="2-4-知识积累，从博客开始"><a href="#2-4-知识积累，从博客开始" class="headerlink" title="2.4. 知识积累，从博客开始"></a>2.4. 知识积累，从博客开始</h2><p><img src="http://p3alsaatj.bkt.clouddn.com/20180312205835_RKuuzw_.jpeg" alt=""></p><p>如果你已经在某个行业工作个两三年，一篇像样的博客都没有。</p><p><code>那我觉得你可能是个懒人。</code>因为几乎很少写东西。</p><p><code>我觉得你可以是个自私的人。</code>因为做计算机行业的，谁没有用过别人造的轮子。即使你没有造轮子的能力，即使你给出一个问题应该如何解决的，至少你对计算机行业也作出了你的贡献。</p><h2 id="2-5-互联网的基石-TCP-IP"><a href="#2-5-互联网的基石-TCP-IP" class="headerlink" title="2.5. 互联网的基石 TCP IP"></a>2.5. 互联网的基石 TCP IP</h2><p><img src="http://p3alsaatj.bkt.clouddn.com/20180312205615_vUZuEg_.jpeg" alt=""></p><p>计算机行业是分层的，就像大海一样，海面上的往往都是惊涛骇浪，暴风骤雨，各种框架层出不穷，争奇斗艳。当你深入海底，你会发现，那里是最平静的地方。而TCP IP等协议知识，就是整个互联网大航海时代的海底。互联网行业如此多娇，引无数框架竞折腰。浪潮之巅者成为行业热点，所有资源会喷薄涌入，失去优势被替代者，往往折戟沉沙铁未销。总之，越是上层，竞争越激烈，换代越快。</p><p><img src="http://p3alsaatj.bkt.clouddn.com/20180313113545_2Wlw3y_.jpeg" alt=""><img src="http://p3alsaatj.bkt.clouddn.com/20180313113633_GQRwhD_images.jpeg" alt=""></p><p>但是底层的TCP/IP之类的知识，往往几十年都不会有多大的改变。而且无论你从事什么语言开发，只要你涉及到通信了，你就需要TCP/IP的知识点，不过你不清楚这些知识点，你可以随时给自己埋下定时炸弹。</p><p>这个错误我也犯过，你可以看我的犯错记录：<a href="https://wdd.js.org/tcp-high-recv-q-or-send-q-reasons.html">哑代理 - TCP链接高Recv-Q，内存泄露的罪魁祸首</a>。</p><p>关于TCP/IP, 推荐一下书籍</p><p><strong>基础</strong></p><ul><li><a href="https://book.douban.com/subject/24737674/" target="_blank" rel="noopener">图解TCP/IP : 第5版</a></li><li><a href="https://book.douban.com/subject/25863515/" target="_blank" rel="noopener">图解HTTP</a></li></ul><p><strong>进阶</strong></p><ul><li><a href="https://book.douban.com/subject/10746113/" target="_blank" rel="noopener">HTTP权威指南</a></li></ul><h2 id="2-6-工具的威力"><a href="#2-6-工具的威力" class="headerlink" title="2.6. 工具的威力"></a>2.6. 工具的威力</h2><p><img src="http://p3alsaatj.bkt.clouddn.com/20180312205507_oFCW2L_images.jpeg" alt=""></p><p><code>你用刀，我用枪，谁说谁能打过谁</code>。原始社会两个野蛮人相遇，块头大的，食物多，可以拥有更多的繁衍后代的权利。但是当一个野蛮人知道用刀的威力时，他就不会害怕胳膊比较粗的对手了。</p><p>举例来说，前端开发免不了有时需要一个静态文件服务器，如果你只知道阿帕奇，那你的工具也太落后了。你可以看看这篇文章：<a href="https://wdd.js.org/one-command-create-static-file-server.html">一行命令搭建简易静态文件http服务器</a></p><p><code>当你想要更偷懒，想要不安于现状时，你会找到更多的厉害的工具。</code></p><h2 id="2-7-英语阅读能力"><a href="#2-7-英语阅读能力" class="headerlink" title="2.7. 英语阅读能力"></a>2.7. 英语阅读能力</h2><p><img src="http://p3alsaatj.bkt.clouddn.com/20180312211550_3JOQkF_.jpeg" alt=""></p><p>IT行业还有一个现象，就是看英文文档如喝中药一般，总是捏着鼻子也看不下去。看中文文档放佛如喝王老吉，消火又滋润。</p><p>IT行业至今来说，放佛还是个舶来品。所有的最新的文档都是英文的。但是也不乏有好的中文翻译文档，但是都是需要花时间去等待。而且英文文档也随着翻译者的水平而参差不齐。</p><p>其实我们完全没必要去害怕英文文档，其实英文文档里最常用的单词往往是很固定的。又不是什么言情小说，总是让你摸不着头脑。</p><p>你不想看英文文档，从本质上说，还是因为你懒。</p><h2 id="2-8-文档能力"><a href="#2-8-文档能力" class="headerlink" title="2.8. 文档能力"></a>2.8. 文档能力</h2><p><img src="http://p3alsaatj.bkt.clouddn.com/20180312212821_8MdIOS_.jpeg" alt=""></p><p>大多说程序的文档都是写给自己看的，或者说大多说的程序员的语文都是数学老师教的。这个其实很让看文档的人苦恼的。一个优秀的程序和框架，无一不是文档非常完善。因为文档的完善才能有利于文档的传播，才有利于解决问题。你的框架再牛逼，效率再如何高，没有人能看的懂，那是没用了。闭门造车永远也搞不出好东西。</p><p>关于如何写作文档，可以参考：<a href="https://wdd.js.org/how-to-write-a-technical-document.html">如何写好技术文档?</a></p><h1 id="3-总结"><a href="#3-总结" class="headerlink" title="3. 总结"></a>3. 总结</h1><ul><li>开放的思维，敢于接纳一些新事物</li><li>不断学习，不舍昼夜</li><li>记笔记，写博客，要给所有的努力留下记录</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://p3alsaatj.bkt.clouddn.com/20180312210006_ggoJT5_.jpeg&quot; alt=&quot;牛人&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="学习方法" scheme="https://wdd.js.org/tags/%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>你不知道的专业化道路</title>
    <link href="https://wdd.js.org/feature-of-dangerous-professional-skill.html"/>
    <id>https://wdd.js.org/feature-of-dangerous-professional-skill.html</id>
    <published>2018-03-10T13:16:32.000Z</published>
    <updated>2018-03-10T14:14:48.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="从分工到专业化"><a href="#从分工到专业化" class="headerlink" title="从分工到专业化"></a>从分工到专业化</h1><p>分工提高生产效率，专业化提高个人价值。很多人都认为，一旦我们进入了某一行，我们就应该在这个行业深挖到底。例如我是做前端的，我就会去学习各种前端的知识点，各种层出不穷的框架。我总是在如饥似渴的希望自己能够保持在深入学习的状态，我不想哪一天自己突然out了。</p><h1 id="专业化的危机在哪？"><a href="#专业化的危机在哪？" class="headerlink" title="专业化的危机在哪？"></a>专业化的危机在哪？</h1><p>以前我在上初中的时候，就稍稍的学习了一点点ActionScript的知识。可能有些人不知道ActionScript是干嘛的，它是在flash的环境中工作的，可以在flash里做一些动画和特效之类的。那时候flash是很火的技术，几乎所有的网站都是有flash的，所以会ActionScript语言的程序员，工资都不低。</p><p>但是，你现在还听过什么ActionScript吗？ 它的宿主环境flash都已经被淘汰了，皮之不存毛将焉附。可想而知，flash的淘汰，同时也让时长淘汰了一批在ActionScript的专家。</p><p>所以，专业化并不是一个安全的道路。准确来说，世界上本来就没有安全的路。大多说认为这条路安全，是因为他们总是以静态的眼光看这条路。说点题外话，如果你书读多了，你会发现，其实一直在你思想里的那些观念，那些故事，往往都是忽悠人的。你可以看看我的一个书单：<a href="https://wdd.js.org/2018-reading-plan.html">2018年我的阅读计划</a>。</p><p>从企业的角度考虑，每个老板都想招在某一方面专家。但是从个人的角度考虑，如果你在专业化的道路钻研的非常深，或许有时候你应该放慢脚步，找个长椅，坐着想一想，如果你前面马上就是死路了，你应该怎么办？</p><h1 id="我们应该怎么办？"><a href="#我们应该怎么办？" class="headerlink" title="我们应该怎么办？"></a>我们应该怎么办？</h1><p>世界上没有安全的路，世界上也没有一直安全的职业。一个职业的火爆，往往因为这个行业的火爆。而永远也没有永远火爆的行业，当退潮时，将会有大批的弄潮儿会搁浅，干死，窒息……</p><p>除去环境造成的扰动，人的身体也会随着年龄会慢慢老化。</p><p>你可以想象一下，当你四十多岁时。那些新来的实习生，比你要的工资低，比你更容易接受这个行业的前沿知识，比你更加能加班，比你能力更强时，比你更听话时。你的优势在哪里？我相信到那时候，你的领导会毫不犹豫开了你。</p><p>在此，你要改变。我给出以下几个角度，你可以自行延伸。</p><ul><li>开始锻炼身体 这是一切的基石</li><li>搞一搞副业，学习一下你喜欢的东西，你可以去深入学学如何做菜，如何摄影等等</li><li>学习理财知识，这是学校从没教你的，但是却是非常重要的东西</li><li>读书，越多越好</li></ul><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><ul><li><a href="https://book.douban.com/subject/1790456/" target="_blank" rel="noopener">专业主义 日 大前研一 </a></li><li><a href="https://book.douban.com/subject/25816940/" target="_blank" rel="noopener">富爸爸穷爸爸 罗伯特·清崎 / 莎伦·莱希特</a></li><li><a href="https://book.douban.com/subject/1261560/" target="_blank" rel="noopener">国富论 英 亚当·斯密</a></li><li><a href="https://book.douban.com/subject/5375620/" target="_blank" rel="noopener">失控</a></li><li><a href="https://book.douban.com/subject/1012611/" target="_blank" rel="noopener">乌合之众 法 古斯塔夫·勒庞</a></li><li><a href="http://survivor.ruanyifeng.com/index.html" target="_blank" rel="noopener">未来世界的幸存者 阮一峰</a></li><li><a href="https://www.gitbook.com/book/xiaolai/reborn/details" target="_blank" rel="noopener">新生 七年就是一辈子 李笑来</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;从分工到专业化&quot;&gt;&lt;a href=&quot;#从分工到专业化&quot; class=&quot;headerlink&quot; title=&quot;从分工到专业化&quot;&gt;&lt;/a&gt;从分工到专业化&lt;/h1&gt;&lt;p&gt;分工提高生产效率，专业化提高个人价值。很多人都认为，一旦我们进入了某一行，我们就应该在这个行业深挖到
      
    
    </summary>
    
    
      <category term="职业规划" scheme="https://wdd.js.org/tags/%E8%81%8C%E4%B8%9A%E8%A7%84%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>Chrome本地跨域origin-null-is-not-allowed问题分析与解决方案</title>
    <link href="https://wdd.js.org/origin-null-is-not-allowed.html"/>
    <id>https://wdd.js.org/origin-null-is-not-allowed.html</id>
    <published>2018-03-09T09:58:05.000Z</published>
    <updated>2018-03-09T10:24:22.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-问题表现"><a href="#1-问题表现" class="headerlink" title="1. 问题表现"></a>1. 问题表现</h1><p>以<code>file:///xxx.html</code>打开某个html文件，发送ajax请求时报错：</p><figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Response <span class="keyword">to</span> preflight request doesn<span class="symbol">'t</span> pass <span class="keyword">access</span> control check: The <span class="symbol">'Access</span>-Control-Allow-Origin' header has a value <span class="symbol">'null</span>' that <span class="keyword">is</span> <span class="keyword">not</span> equal <span class="keyword">to</span> the supplied origin. Origin <span class="symbol">'null</span>' <span class="keyword">is</span> therefore <span class="keyword">not</span> allowed <span class="keyword">access</span>.</span><br></pre></td></tr></table></figure><h1 id="2-问题原因"><a href="#2-问题原因" class="headerlink" title="2. 问题原因"></a>2. 问题原因</h1><p>Origin null是本地文件系统，因此这表明您正在加载通过file：// URL进行加载调用的HTML页面（例如，只需在本地文件浏览器或类似文件中双击它）。不同的浏览器采用不同的方法将相同来源策略应用到本地文件。<code>Chrome要求比较严格，不允许这种形势的跨域请求。</code>而最好使用http:// 访问html.</p><h1 id="3-解决方案"><a href="#3-解决方案" class="headerlink" title="3. 解决方案"></a>3. 解决方案</h1><p>以下给出三个解决方案，第一个最快，第三个作为彻底。</p><h2 id="3-1-方案1-给Chrome快捷方式中增加-–allow-file-access-from-files"><a href="#3-1-方案1-给Chrome快捷方式中增加-–allow-file-access-from-files" class="headerlink" title="3.1. 方案1 给Chrome快捷方式中增加 –allow-file-access-from-files"></a>3.1. 方案1 给Chrome快捷方式中增加 –allow-file-access-from-files</h2><p>打开Chrome快捷方式的属性中设置：右击Chrome浏览器快捷方式，选择“属性”，在“目标”中加”–allow-file-access-from-files”，注意前面有个空格，重启Chrome浏览器便可。</p><p><img src="http://p3alsaatj.bkt.clouddn.com/20180309181105_SUxYRg_Screenshot.jpeg" alt=""></p><h2 id="3-2-方案2-启动一个简单的静态文件服务器-以http协议访问html"><a href="#3-2-方案2-启动一个简单的静态文件服务器-以http协议访问html" class="headerlink" title="3.2. 方案2 启动一个简单的静态文件服务器, 以http协议访问html"></a>3.2. 方案2 启动一个简单的静态文件服务器, 以http协议访问html</h2><p>参见我的这篇文章: <a href="https://wdd.js.org/one-command-create-static-file-server.html">一行命令搭建简易静态文件http服务器</a></p><h2 id="3-3-方案3-服务端响应修改Access-Control-Allow-Origin"><a href="#3-3-方案3-服务端响应修改Access-Control-Allow-Origin" class="headerlink" title="3.3. 方案3 服务端响应修改Access-Control-Allow-Origin : *"></a>3.3. 方案3 服务端响应修改Access-Control-Allow-Origin : *</h2><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">response</span><span class="selector-class">.addHeader</span>(<span class="string">"Access-Control-Allow-Origin"</span>,<span class="string">"*"</span>)</span><br></pre></td></tr></table></figure><h1 id="4-参考文章"><a href="#4-参考文章" class="headerlink" title="4. 参考文章"></a>4. 参考文章</h1><ul><li><a href="http://blog.csdn.net/dandanzmc/article/details/31344267" target="_blank" rel="noopener">如何解决XMLHttpRequest cannot load file<del>~</del>~~Origin ‘null’ is therefore not allowed access</a></li><li><a href="http://blog.csdn.net/kissliux/article/details/16889111" target="_blank" rel="noopener">让chrome支持本地Ajax请求,Ajax请求status cancel Origin null is not allowed by Access-Control-Allow-Origin</a></li><li><a href="https://stackoverflow.com/questions/8456538/origin-null-is-not-allowed-by-access-control-allow-origin" target="_blank" rel="noopener">Origin null is not allowed by Access-Control-Allow-Origin</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1-问题表现&quot;&gt;&lt;a href=&quot;#1-问题表现&quot; class=&quot;headerlink&quot; title=&quot;1. 问题表现&quot;&gt;&lt;/a&gt;1. 问题表现&lt;/h1&gt;&lt;p&gt;以&lt;code&gt;file:///xxx.html&lt;/code&gt;打开某个html文件，发送ajax请求时报错
      
    
    </summary>
    
    
      <category term="chrome" scheme="https://wdd.js.org/tags/chrome/"/>
    
      <category term="跨域" scheme="https://wdd.js.org/tags/%E8%B7%A8%E5%9F%9F/"/>
    
      <category term="origin-null-is-not-allowed" scheme="https://wdd.js.org/tags/origin-null-is-not-allowed/"/>
    
  </entry>
  
  <entry>
    <title>曲线救国 使用googler命令行搜索</title>
    <link href="https://wdd.js.org/use-googler-for-serarch.html"/>
    <id>https://wdd.js.org/use-googler-for-serarch.html</id>
    <published>2018-03-06T03:15:38.000Z</published>
    <updated>2018-03-06T03:33:31.000Z</updated>
    
    <content type="html"><![CDATA[<p>之前因为有优惠政策，于是我在xx云上买了一台位于香港的最低配置的服务器，期限三年，主要用来搭建ss, 用来跨栏。</p><p>用了一段时间，感觉挺稳定的。后来一纸通知，收到了整改信息。于是我就把ss服务停了。</p><p>三年的主机不能浪费，于是我就思考一下曲线救国的思路。</p><p>即使用<code>ssh链接上远程服务器后，使用googler命令进行搜索，然后点击链接，使用本地浏览器打开搜索结果</code></p><p>关于googler可以查看，<a href="https://github.com/jarun/googler#installation" target="_blank" rel="noopener">https://github.com/jarun/googler#installation</a></p><p><img src="http://p3alsaatj.bkt.clouddn.com/20180306113311_LrY1wY_68747470733a2f2f73312e706f7374696d672e6f72672f3168673278316471726a2f676f6f676c65722e706e67.jpeg" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;之前因为有优惠政策，于是我在xx云上买了一台位于香港的最低配置的服务器，期限三年，主要用来搭建ss, 用来跨栏。&lt;/p&gt;
&lt;p&gt;用了一段时间，感觉挺稳定的。后来一纸通知，收到了整改信息。于是我就把ss服务停了。&lt;/p&gt;
&lt;p&gt;三年的主机不能浪费，于是我就思考一下曲线救国的思
      
    
    </summary>
    
    
      <category term="谷歌" scheme="https://wdd.js.org/tags/%E8%B0%B7%E6%AD%8C/"/>
    
  </entry>
  
  <entry>
    <title>前端团队合作规范</title>
    <link href="https://wdd.js.org/front-end-team-work-blog.html"/>
    <id>https://wdd.js.org/front-end-team-work-blog.html</id>
    <published>2018-03-02T00:59:01.000Z</published>
    <updated>2018-03-26T02:43:25.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-编程风格"><a href="#1-编程风格" class="headerlink" title="1. 编程风格"></a>1. 编程风格</h1><ul><li><code>代码风格</code> <a href="https://standardjs.com/readme-zhcn.html" target="_blank" rel="noopener">JavaScript Standard Style</a></li><li><a href="https://wdd.js.org/js-best-parctices/#/">js最佳实践</a></li><li><a href="https://standardjs.com/rules.html" target="_blank" rel="noopener">JavaScript Standard Style 细则建议看看</a></li></ul><h1 id="2-编辑器"><a href="#2-编辑器" class="headerlink" title="2. 编辑器"></a>2. 编辑器</h1><ul><li>vscode</li></ul><h1 id="3-git版本控制-分支管理"><a href="#3-git版本控制-分支管理" class="headerlink" title="3. git版本控制 分支管理"></a>3. git版本控制 分支管理</h1><ul><li>开发分支: master, 开发分支，用于拉取开发分支，尽量不要在此分支上写代码</li><li>生产分支: production, 和生产环境同步</li><li>特性分支：feature, 所有特性分支均已 <code>f-</code>开头， 如<code>f-ocm-config</code>, 特性分支用于开发，是暂时性分支，分支开发完毕后，可以合并到master分支。</li></ul><h1 id="4-工程化与模块化"><a href="#4-工程化与模块化" class="headerlink" title="4. 工程化与模块化"></a>4. 工程化与模块化</h1><ul><li>构件工具必须要有</li><li>模块化</li></ul><h1 id="5-代码整洁"><a href="#5-代码整洁" class="headerlink" title="5. 代码整洁"></a>5. 代码整洁</h1><ul><li>阅读代码整洁之道 参考<a href="https://wdd.js.org/art-of-readable-code.html">笔记 编写可读性代码的艺术</a></li><li>单个文件代码行越少越好，尽量按模块分散</li><li>函数体代码行越少越好，职责单一</li></ul><h1 id="6-tcp-ip"><a href="#6-tcp-ip" class="headerlink" title="6. tcp ip"></a>6. tcp ip</h1><ul><li>阅读http权威指南</li><li>图解tcp ip</li></ul><h1 id="7-es6"><a href="#7-es6" class="headerlink" title="7. es6"></a>7. es6</h1><ul><li>阮一峰 es6教程</li></ul><h1 id="8-函数式编程"><a href="#8-函数式编程" class="headerlink" title="8. 函数式编程"></a>8. 函数式编程</h1><ul><li><a href="https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/" target="_blank" rel="noopener">推荐阅读 mostly-adequate-guide-chinese中文版</a></li></ul><h1 id="9-vue编程风格"><a href="#9-vue编程风格" class="headerlink" title="9. vue编程风格"></a>9. vue编程风格</h1><ul><li>vue官方推荐风格</li></ul><h1 id="10-硬性要求"><a href="#10-硬性要求" class="headerlink" title="10. 硬性要求"></a>10. 硬性要求</h1><ul><li>2018年后的，单个文件代码行绝对不要超过500行，可以分割文件，可以使用构建工具</li><li>每个js文件在顶部务必写一些说明性的文字，描述该文件的功能</li><li>比较容易歧义，或者关键点，需要写注释给与说明</li></ul><h1 id="积累与深入学习"><a href="#积累与深入学习" class="headerlink" title="积累与深入学习"></a>积累与深入学习</h1><ul><li><code>积累</code>: 工作中会遇到许多问题，建议你可以写在博客里。对自己来说是一种知识沉淀，对整个行业来说，你也贡献了你的力量。如果别人也遇到和你相同的问题，对别人来说也是帮助。</li><li><code>深入</code>: 不断学习，不断深入，扩展自己的阅历，包括专业方面的，健康方面，财富方面等等</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1-编程风格&quot;&gt;&lt;a href=&quot;#1-编程风格&quot; class=&quot;headerlink&quot; title=&quot;1. 编程风格&quot;&gt;&lt;/a&gt;1. 编程风格&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;代码风格&lt;/code&gt; &lt;a href=&quot;https://standardjs.
      
    
    </summary>
    
    
      <category term="规范" scheme="https://wdd.js.org/tags/%E8%A7%84%E8%8C%83/"/>
    
      <category term="前端团队" scheme="https://wdd.js.org/tags/%E5%89%8D%E7%AB%AF%E5%9B%A2%E9%98%9F/"/>
    
  </entry>
  
  <entry>
    <title>python3入门书籍与在线资料</title>
    <link href="https://wdd.js.org/python-books-comments.html"/>
    <id>https://wdd.js.org/python-books-comments.html</id>
    <published>2018-02-25T14:44:19.000Z</published>
    <updated>2018-02-26T01:24:51.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-书籍类"><a href="#1-书籍类" class="headerlink" title="1. 书籍类"></a>1. 书籍类</h1><h2 id="1-1-老太婆一样的罗里吧嗦：-Python学习手册（第4版）"><a href="#1-1-老太婆一样的罗里吧嗦：-Python学习手册（第4版）" class="headerlink" title="1.1. 老太婆一样的罗里吧嗦： Python学习手册（第4版）"></a>1.1. 老太婆一样的罗里吧嗦： Python学习手册（第4版）</h2><p>这本书相当的啰嗦，讲的内容空洞乏力，一些概念蜻蜓点水，买了必定会后悔。</p><p><img src="http://p3alsaatj.bkt.clouddn.com/20180225225213_u31NAG_Jietu20180225-225148.jpeg" alt=""></p><h2 id="1-2-很有意思：Python编程：从入门到实践"><a href="#1-2-很有意思：Python编程：从入门到实践" class="headerlink" title="1.2. 很有意思：Python编程：从入门到实践"></a>1.2. 很有意思：Python编程：从入门到实践</h2><p>这本书讲的知识点虽然不是很全面，但是要点都讲的很清晰，行文也很有意思，最后一些实践项目也很有趣。</p><p><img src="http://p3alsaatj.bkt.clouddn.com/20180225225523_yfBUXd_Jietu20180225-225513.jpeg" alt=""></p><h2 id="1-3-干货满满：Python语言及其应用"><a href="#1-3-干货满满：Python语言及其应用" class="headerlink" title="1.3. 干货满满：Python语言及其应用"></a>1.3. 干货满满：Python语言及其应用</h2><p>这本书虽然不是非常有趣，但是都是干货满满，知识点讲解也是很到位，非常推荐初学者看看。</p><p><img src="http://p3alsaatj.bkt.clouddn.com/20180225225931_DmTPVu_Jietu20180225-225852.jpeg" alt=""></p><h1 id="2-免费在线资料"><a href="#2-免费在线资料" class="headerlink" title="2. 免费在线资料"></a>2. 免费在线资料</h1><h2 id="2-1-廖雪峰pthon3教程：中文，免费，零起点，完整示例，基于最新的Python-3版本"><a href="#2-1-廖雪峰pthon3教程：中文，免费，零起点，完整示例，基于最新的Python-3版本" class="headerlink" title="2.1. 廖雪峰pthon3教程：中文，免费，零起点，完整示例，基于最新的Python 3版本"></a>2.1. <a href="https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000" target="_blank" rel="noopener">廖雪峰pthon3教程：中文，免费，零起点，完整示例，基于最新的Python 3版本</a></h2><p><img src="http://p3alsaatj.bkt.clouddn.com/20180225230211_jxRF1S_Jietu20180225-230203.jpeg" alt=""></p><h2 id="2-2-菜鸟教程-python3"><a href="#2-2-菜鸟教程-python3" class="headerlink" title="2.2. 菜鸟教程 python3 "></a>2.2. <a href="http://www.runoob.com/python3/python3-tutorial.html" target="_blank" rel="noopener">菜鸟教程 python3 </a></h2><p><code>非常适合作为一个快速查找的手册</code></p><p><img src="http://p3alsaatj.bkt.clouddn.com/20180225230510_1cHt69_Jietu20180225-230456.jpeg" alt=""></p><h2 id="2-3-进阶-Python-Cookbook-3"><a href="#2-3-进阶-Python-Cookbook-3" class="headerlink" title="2.3. 进阶 Python Cookbook 3"></a>2.3. 进阶 <a href="http://python3-cookbook.readthedocs.io/zh_CN/latest/index.html" target="_blank" rel="noopener">Python Cookbook 3</a></h2><p><code>适合有一定python基础的同学看</code></p><p><img src="http://p3alsaatj.bkt.clouddn.com/20180225230726_Yo3D9i_Jietu20180225-230715.jpeg" alt=""></p><h2 id="2-4-把这个放在枕头下面-The-Python-Standard-Library"><a href="#2-4-把这个放在枕头下面-The-Python-Standard-Library" class="headerlink" title="2.4. 把这个放在枕头下面 The Python Standard Library"></a>2.4. 把这个放在枕头下面 <a href="https://docs.python.org/3/library/index.html" target="_blank" rel="noopener">The Python Standard Library</a></h2><p>Python官方标准库参考手册，有什么需要刨根问底的问题需要查的时候，此处务必需要查阅一下。</p><p><img src="http://p3alsaatj.bkt.clouddn.com/20180225231148_DiPST4_Jietu20180225-231133.jpeg" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1-书籍类&quot;&gt;&lt;a href=&quot;#1-书籍类&quot; class=&quot;headerlink&quot; title=&quot;1. 书籍类&quot;&gt;&lt;/a&gt;1. 书籍类&lt;/h1&gt;&lt;h2 id=&quot;1-1-老太婆一样的罗里吧嗦：-Python学习手册（第4版）&quot;&gt;&lt;a href=&quot;#1-1-老太婆一
      
    
    </summary>
    
    
      <category term="python" scheme="https://wdd.js.org/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>正则表达式在线工具集合</title>
    <link href="https://wdd.js.org/regex-online-tools.html"/>
    <id>https://wdd.js.org/regex-online-tools.html</id>
    <published>2018-02-24T07:27:24.000Z</published>
    <updated>2018-02-24T07:43:52.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-功能最强：regex101"><a href="#1-功能最强：regex101" class="headerlink" title="1. 功能最强：regex101"></a>1. 功能最强：<a href="https://regex101.com/" target="_blank" rel="noopener">regex101</a></h1><p>优点：</p><ul><li>支持多种语言, prec,php,javascript,python,golang</li><li>界面美观大方</li><li>支持错误提示，实时匹配</li></ul><p>缺点：</p><ul><li>有时候加载速度太慢</li></ul><p><img src="http://p3alsaatj.bkt.clouddn.com/20180224153235_7QYNUW_Jietu20180224-153227.jpeg" alt=""></p><h1 id="2-可视化正则绘图-Regulex"><a href="#2-可视化正则绘图-Regulex" class="headerlink" title="2. 可视化正则绘图: Regulex"></a>2. 可视化正则绘图: <a href="https://jex.im/regulex/" target="_blank" rel="noopener">Regulex</a></h1><p>优点：</p><ul><li>实时根据正则表达式绘图</li><li>页面加载速度快</li></ul><p><img src="http://p3alsaatj.bkt.clouddn.com/20180224153440_Z2JC4M_Jietu20180224-153432.jpeg" alt=""></p><h1 id="3-可视化正则绘图：regexper"><a href="#3-可视化正则绘图：regexper" class="headerlink" title="3. 可视化正则绘图：regexper"></a>3. 可视化正则绘图：<a href="https://regexper.com/#%2F%5Bf%5D%2F" target="_blank" rel="noopener">regexper</a></h1><p>优点：</p><ul><li>根据正则表达式绘图</li><li>页面加载速度快</li></ul><p>缺点：</p><ul><li>无法实时绘图，需要点击才可以</li></ul><p><img src="http://p3alsaatj.bkt.clouddn.com/20180224153957_KAVhWs_Jietu20180224-153944.jpeg" alt=""></p><h1 id="4-专注于python正则：pyregex"><a href="#4-专注于python正则：pyregex" class="headerlink" title="4. 专注于python正则：pyregex"></a>4. 专注于python正则：<a href="http://www.pyregex.com/" target="_blank" rel="noopener">pyregex</a></h1><ul><li>专注python</li><li>页面加载速度快</li></ul><p><img src="http://p3alsaatj.bkt.clouddn.com/20180224153711_pNQ236_Jietu20180224-153703.jpeg" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1-功能最强：regex101&quot;&gt;&lt;a href=&quot;#1-功能最强：regex101&quot; class=&quot;headerlink&quot; title=&quot;1. 功能最强：regex101&quot;&gt;&lt;/a&gt;1. 功能最强：&lt;a href=&quot;https://regex101.com/&quot; 
      
    
    </summary>
    
    
      <category term="正则表达式" scheme="https://wdd.js.org/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>VScode Formatter yapf is not installed解决方法</title>
    <link href="https://wdd.js.org/formatter-yapf-is-not-installed.html"/>
    <id>https://wdd.js.org/formatter-yapf-is-not-installed.html</id>
    <published>2018-02-24T03:56:48.000Z</published>
    <updated>2018-02-24T04:02:36.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-判断你是否安装了yapf"><a href="#1-判断你是否安装了yapf" class="headerlink" title="1. 判断你是否安装了yapf"></a>1. 判断你是否安装了yapf</h1><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">yapf -v</span></span><br></pre></td></tr></table></figure><p>如果你没有安装过，那么必须要安装。</p><h1 id="2-指定pathon路径"><a href="#2-指定pathon路径" class="headerlink" title="2. 指定pathon路径"></a>2. 指定pathon路径</h1><p>有些系统，像macOS，自带python2, 如果你又安装了python3, 并且你使用<code>pip3</code>来安装的yapf， 那么你就需要指定pythonPath</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// <span class="keyword">user</span> <span class="title">settings</span></span><br><span class="line"><span class="string">"python.pythonPath"</span>: <span class="string">"python3"</span>,</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1-判断你是否安装了yapf&quot;&gt;&lt;a href=&quot;#1-判断你是否安装了yapf&quot; class=&quot;headerlink&quot; title=&quot;1. 判断你是否安装了yapf&quot;&gt;&lt;/a&gt;1. 判断你是否安装了yapf&lt;/h1&gt;&lt;figure class=&quot;highligh
      
    
    </summary>
    
    
      <category term="python" scheme="https://wdd.js.org/tags/python/"/>
    
      <category term="yapf" scheme="https://wdd.js.org/tags/yapf/"/>
    
      <category term="vscode" scheme="https://wdd.js.org/tags/vscode/"/>
    
      <category term="Formatter yapf is not installed" scheme="https://wdd.js.org/tags/Formatter-yapf-is-not-installed/"/>
    
  </entry>
  
  <entry>
    <title>前端面试和笔试题目</title>
    <link href="https://wdd.js.org/front-end-interview-handbook.html"/>
    <id>https://wdd.js.org/front-end-interview-handbook.html</id>
    <published>2018-02-23T07:18:26.000Z</published>
    <updated>2018-03-27T06:01:35.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-问答题"><a href="#1-问答题" class="headerlink" title="1. 问答题"></a>1. 问答题</h1><h2 id="1-1-HTML相关"><a href="#1-1-HTML相关" class="headerlink" title="1.1. HTML相关"></a>1.1. HTML相关</h2><h3 id="1-1-1-lt-DOCTYPE-html-gt-的作用是什么？"><a href="#1-1-1-lt-DOCTYPE-html-gt-的作用是什么？" class="headerlink" title="1.1.1. &lt;!DOCTYPE html&gt;的作用是什么？"></a>1.1.1. &lt;!DOCTYPE html&gt;的作用是什么？</h3><h3 id="1-1-2-script-script-async和script-defer之间有什么区别？"><a href="#1-1-2-script-script-async和script-defer之间有什么区别？" class="headerlink" title="1.1.2. script, script async和script defer之间有什么区别？"></a>1.1.2. script, script async和script defer之间有什么区别？</h3><h3 id="1-1-3-cookie-sessionStorage-和-localStorage之间有什么区别？"><a href="#1-1-3-cookie-sessionStorage-和-localStorage之间有什么区别？" class="headerlink" title="1.1.3. cookie, sessionStorage 和 localStorage之间有什么区别？"></a>1.1.3. cookie, sessionStorage 和 localStorage之间有什么区别？</h3><h3 id="1-1-4-用过哪些html模板渲染工具？"><a href="#1-1-4-用过哪些html模板渲染工具？" class="headerlink" title="1.1.4. 用过哪些html模板渲染工具？"></a>1.1.4. 用过哪些html模板渲染工具？</h3><h2 id="1-2-CSS相关"><a href="#1-2-CSS相关" class="headerlink" title="1.2. CSS相关"></a>1.2. CSS相关</h2><h3 id="1-2-1-简述CSS盒子模型"><a href="#1-2-1-简述CSS盒子模型" class="headerlink" title="1.2.1. 简述CSS盒子模型"></a>1.2.1. 简述CSS盒子模型</h3><h3 id="1-2-2-CSS有哪些选择器？"><a href="#1-2-2-CSS有哪些选择器？" class="headerlink" title="1.2.2. CSS有哪些选择器？"></a>1.2.2. CSS有哪些选择器？</h3><h3 id="1-2-3-CSS-sprite是什么？"><a href="#1-2-3-CSS-sprite是什么？" class="headerlink" title="1.2.3. CSS sprite是什么？"></a>1.2.3. CSS sprite是什么？</h3><h3 id="1-2-4-写一下你知道的前端UI框架？"><a href="#1-2-4-写一下你知道的前端UI框架？" class="headerlink" title="1.2.4. 写一下你知道的前端UI框架？"></a>1.2.4. 写一下你知道的前端UI框架？</h3><h2 id="1-3-JS相关"><a href="#1-3-JS相关" class="headerlink" title="1.3. JS相关"></a>1.3. JS相关</h2><h3 id="1-3-1-js有哪些数据类型？"><a href="#1-3-1-js有哪些数据类型？" class="headerlink" title="1.3.1. js有哪些数据类型？"></a>1.3.1. js有哪些数据类型？</h3><h3 id="1-3-2-js有哪些假值？"><a href="#1-3-2-js有哪些假值？" class="headerlink" title="1.3.2. js有哪些假值？"></a>1.3.2. js有哪些假值？</h3><h3 id="1-3-3-js数字和字符串之间有什么快速转换的写法？"><a href="#1-3-3-js数字和字符串之间有什么快速转换的写法？" class="headerlink" title="1.3.3. js数字和字符串之间有什么快速转换的写法？"></a>1.3.3. js数字和字符串之间有什么快速转换的写法？</h3><h3 id="1-3-4-经常使用哪些ES6的语法？"><a href="#1-3-4-经常使用哪些ES6的语法？" class="headerlink" title="1.3.4. 经常使用哪些ES6的语法？"></a>1.3.4. 经常使用哪些ES6的语法？</h3><h3 id="1-3-5-什么是同源策略？"><a href="#1-3-5-什么是同源策略？" class="headerlink" title="1.3.5. 什么是同源策略？"></a>1.3.5. 什么是同源策略？</h3><h3 id="1-3-6-跨域有哪些解决方法？"><a href="#1-3-6-跨域有哪些解决方法？" class="headerlink" title="1.3.6. 跨域有哪些解决方法？"></a>1.3.6. 跨域有哪些解决方法？</h3><h3 id="1-3-7-网页进度条实现的原理"><a href="#1-3-7-网页进度条实现的原理" class="headerlink" title="1.3.7. 网页进度条实现的原理"></a>1.3.7. 网页进度条实现的原理</h3><h3 id="1-3-8-请问console-log是同步的，还是异步的？"><a href="#1-3-8-请问console-log是同步的，还是异步的？" class="headerlink" title="1.3.8. 请问console.log是同步的，还是异步的？"></a>1.3.8. 请问console.log是同步的，还是异步的？</h3><h3 id="1-3-9-下面console输出的值是什么？"><a href="#1-3-9-下面console输出的值是什么？" class="headerlink" title="1.3.9. 下面console输出的值是什么？"></a>1.3.9. 下面console输出的值是什么？</h3><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> scores = [10,11,12];</span><br><span class="line"><span class="keyword">var</span> <span class="keyword">total</span> = 0;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> <span class="keyword">score</span> <span class="keyword">in</span> scores)&#123;</span><br><span class="line">  <span class="keyword">total</span> += <span class="keyword">score</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> average = <span class="keyword">total</span>/scores.length;</span><br><span class="line">console.<span class="built_in">log</span>(average);</span><br></pre></td></tr></table></figure><h3 id="1-3-10-请问下面的写法问题在哪？"><a href="#1-3-10-请问下面的写法问题在哪？" class="headerlink" title="1.3.10. 请问下面的写法问题在哪？"></a>1.3.10. 请问下面的写法问题在哪？</h3><figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">console.<span class="built_in">log</span>(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">(<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span><br><span class="line">    console.<span class="built_in">log</span>(<span class="number">1</span>)</span><br><span class="line">&#125;)()</span><br></pre></td></tr></table></figure><h3 id="1-3-11-请问s-length是多少，s-2-是多少"><a href="#1-3-11-请问s-length是多少，s-2-是多少" class="headerlink" title="1.3.11. 请问s.length是多少，s[2]是多少"></a>1.3.11. 请问s.length是多少，s[2]是多少</h3><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var s = <span class="string">[]</span></span><br><span class="line">s<span class="string">[3]</span> = <span class="number">4</span></span><br><span class="line"></span><br><span class="line">s.length ?</span><br><span class="line">s<span class="string">[2]</span> ?</span><br></pre></td></tr></table></figure><h3 id="1-3-12-解释闭包概念及其作用"><a href="#1-3-12-解释闭包概念及其作用" class="headerlink" title="1.3.12. 解释闭包概念及其作用"></a>1.3.12. 解释闭包概念及其作用</h3><h3 id="1-3-13-如何理解js-函数first-class的概念？"><a href="#1-3-13-如何理解js-函数first-class的概念？" class="headerlink" title="1.3.13. 如何理解js 函数first class的概念？"></a>1.3.13. 如何理解js 函数first class的概念？</h3><h3 id="1-3-14-函数有哪些调用方式？不同this的会指向哪里？"><a href="#1-3-14-函数有哪些调用方式？不同this的会指向哪里？" class="headerlink" title="1.3.14. 函数有哪些调用方式？不同this的会指向哪里？"></a>1.3.14. 函数有哪些调用方式？不同this的会指向哪里？</h3><h3 id="1-3-15-applly和call有什么区别？"><a href="#1-3-15-applly和call有什么区别？" class="headerlink" title="1.3.15. applly和call有什么区别？"></a>1.3.15. applly和call有什么区别？</h3><h3 id="1-3-16-函数的length属性的代表什么？"><a href="#1-3-16-函数的length属性的代表什么？" class="headerlink" title="1.3.16. 函数的length属性的代表什么？"></a>1.3.16. 函数的length属性的代表什么？</h3><h3 id="1-3-17-有用过哪些js编程风格"><a href="#1-3-17-有用过哪些js编程风格" class="headerlink" title="1.3.17. 有用过哪些js编程风格"></a>1.3.17. 有用过哪些js编程风格</h3><h3 id="1-3-18-如何理解EventLoop"><a href="#1-3-18-如何理解EventLoop" class="headerlink" title="1.3.18. 如何理解EventLoop?"></a>1.3.18. 如何理解EventLoop?</h3><h3 id="1-3-19-使用过哪些构建工具？各有什么优缺点？"><a href="#1-3-19-使用过哪些构建工具？各有什么优缺点？" class="headerlink" title="1.3.19. 使用过哪些构建工具？各有什么优缺点？"></a>1.3.19. 使用过哪些构建工具？各有什么优缺点？</h3><h2 id="1-4-其它"><a href="#1-4-其它" class="headerlink" title="1.4. 其它"></a>1.4. 其它</h2><h3 id="1-4-1-平时使用什么搜索引擎查资料？"><a href="#1-4-1-平时使用什么搜索引擎查资料？" class="headerlink" title="1.4.1. 平时使用什么搜索引擎查资料？"></a>1.4.1. 平时使用什么搜索引擎查资料？</h3><h3 id="1-4-2-对翻墙有什么看法？如何翻墙？"><a href="#1-4-2-对翻墙有什么看法？如何翻墙？" class="headerlink" title="1.4.2. 对翻墙有什么看法？如何翻墙？"></a>1.4.2. 对翻墙有什么看法？如何翻墙？</h3><h3 id="1-4-3-个人有没有技术博客，地址是什么？"><a href="#1-4-3-个人有没有技术博客，地址是什么？" class="headerlink" title="1.4.3. 个人有没有技术博客，地址是什么？"></a>1.4.3. 个人有没有技术博客，地址是什么？</h3><h3 id="1-4-4-github上有没有项目？"><a href="#1-4-4-github上有没有项目？" class="headerlink" title="1.4.4. github上有没有项目？"></a>1.4.4. github上有没有项目？</h3><h2 id="1-5-网络相关"><a href="#1-5-网络相关" class="headerlink" title="1.5. 网络相关"></a>1.5. 网络相关</h2><h3 id="1-5-1-请求状态码-1xx-2xx-3xx-4xx-5xx分别有什么含义？"><a href="#1-5-1-请求状态码-1xx-2xx-3xx-4xx-5xx分别有什么含义？" class="headerlink" title="1.5.1. 请求状态码 1xx,2xx,3xx,4xx,5xx分别有什么含义？"></a>1.5.1. 请求状态码 1xx,2xx,3xx,4xx,5xx分别有什么含义？</h3><h3 id="1-5-2-发送某些post请求时，有时会多一些options请求，请问这是为什么？"><a href="#1-5-2-发送某些post请求时，有时会多一些options请求，请问这是为什么？" class="headerlink" title="1.5.2. 发送某些post请求时，有时会多一些options请求，请问这是为什么？"></a>1.5.2. 发送某些post请求时，有时会多一些options请求，请问这是为什么？</h3><h3 id="1-5-3-http报文有哪些组成部分？"><a href="#1-5-3-http报文有哪些组成部分？" class="headerlink" title="1.5.3. http报文有哪些组成部分？"></a>1.5.3. http报文有哪些组成部分？</h3><h3 id="1-5-4-http端到端首部和逐跳首部有什么区别？"><a href="#1-5-4-http端到端首部和逐跳首部有什么区别？" class="headerlink" title="1.5.4. http端到端首部和逐跳首部有什么区别？"></a>1.5.4. http端到端首部和逐跳首部有什么区别？</h3><h3 id="1-5-5-http与https在同时使用时，有什么注意点？"><a href="#1-5-5-http与https在同时使用时，有什么注意点？" class="headerlink" title="1.5.5. http与https在同时使用时，有什么注意点？"></a>1.5.5. http与https在同时使用时，有什么注意点？</h3><h3 id="1-5-6-http-tcp-udp-websocket，分别位于7层网络的那一层？tcp和udp有什么不同？"><a href="#1-5-6-http-tcp-udp-websocket，分别位于7层网络的那一层？tcp和udp有什么不同？" class="headerlink" title="1.5.6. http, tcp, udp, websocket，分别位于7层网络的那一层？tcp和udp有什么不同？"></a>1.5.6. http, tcp, udp, websocket，分别位于7层网络的那一层？tcp和udp有什么不同？</h3><h1 id="2-编码题"><a href="#2-编码题" class="headerlink" title="2. 编码题"></a>2. 编码题</h1><h2 id="2-1-写一个函数，返回一个数组中所有元素被第一个元素除后的结果"><a href="#2-1-写一个函数，返回一个数组中所有元素被第一个元素除后的结果" class="headerlink" title="2.1. 写一个函数，返回一个数组中所有元素被第一个元素除后的结果"></a>2.1. 写一个函数，返回一个数组中所有元素被第一个元素除后的结果</h2><h2 id="2-2-写一个函数，来判断变量是否是数组，至少使用两种写法"><a href="#2-2-写一个函数，来判断变量是否是数组，至少使用两种写法" class="headerlink" title="2.2. 写一个函数，来判断变量是否是数组，至少使用两种写法"></a>2.2. 写一个函数，来判断变量是否是数组，至少使用两种写法</h2><h2 id="2-3-写一个函数，将秒转化成时分秒格式，如80转化成：00-01-20"><a href="#2-3-写一个函数，将秒转化成时分秒格式，如80转化成：00-01-20" class="headerlink" title="2.3. 写一个函数，将秒转化成时分秒格式，如80转化成：00:01:20"></a>2.3. 写一个函数，将秒转化成时分秒格式，如80转化成：00:01:20</h2><h1 id="3-翻译题"><a href="#3-翻译题" class="headerlink" title="3. 翻译题"></a>3. 翻译题</h1><blockquote><p>Aggregation operations process data records and return computed results. Aggregation operations group values from multiple documents together, and can perform a variety of operations on the grouped data to return a single result. MongoDB provides three ways to perform aggregation: the aggregation pipeline, the map-reduce function, and single purpose aggregation methods.</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1-问答题&quot;&gt;&lt;a href=&quot;#1-问答题&quot; class=&quot;headerlink&quot; title=&quot;1. 问答题&quot;&gt;&lt;/a&gt;1. 问答题&lt;/h1&gt;&lt;h2 id=&quot;1-1-HTML相关&quot;&gt;&lt;a href=&quot;#1-1-HTML相关&quot; class=&quot;headerlink
      
    
    </summary>
    
    
      <category term="面试" scheme="https://wdd.js.org/tags/%E9%9D%A2%E8%AF%95/"/>
    
      <category term="笔试" scheme="https://wdd.js.org/tags/%E7%AC%94%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>PyMongo学习笔记</title>
    <link href="https://wdd.js.org/pymongo-tutorial-and-example.html"/>
    <id>https://wdd.js.org/pymongo-tutorial-and-example.html</id>
    <published>2018-02-22T08:32:39.000Z</published>
    <updated>2018-02-23T09:16:46.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-环境"><a href="#1-环境" class="headerlink" title="1. 环境"></a>1. 环境</h1><ul><li>mongodb 3.4</li><li>pymongo 3.6.0</li><li>macOS</li></ul><h1 id="2-安装pymongo"><a href="#2-安装pymongo" class="headerlink" title="2. 安装pymongo"></a>2. 安装pymongo</h1><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 <span class="keyword">install</span> pymongo</span><br></pre></td></tr></table></figure><h1 id="3-建立数据库链接"><a href="#3-建立数据库链接" class="headerlink" title="3. 建立数据库链接"></a>3. 建立数据库链接</h1><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pymongo <span class="keyword">import</span> MongoClient</span><br><span class="line"></span><br><span class="line">conn = MongoClient(<span class="string">'localhost'</span>, <span class="number">27017</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 或者 conn = MongoClient('mongodb://localhost:27017/')</span></span><br></pre></td></tr></table></figure><h1 id="4-获取数据库"><a href="#4-获取数据库" class="headerlink" title="4. 获取数据库"></a>4. 获取数据库</h1><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">db</span> = conn.db_name // 如果数据库不存在，则自动创建</span><br><span class="line"></span><br><span class="line"><span class="attr">db</span> = conn[<span class="string">'db-name'</span>] // 如果数据库名中有中划线，则需要使用中括号的形式</span><br></pre></td></tr></table></figure><h1 id="5-获取集合"><a href="#5-获取集合" class="headerlink" title="5. 获取集合"></a>5. 获取集合</h1><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">collection = db<span class="selector-class">.test_users</span> <span class="comment">// 如果集合不存在，则自动创建</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 或者 collection = db['test-users']</span></span><br></pre></td></tr></table></figure><p>注意：只有当数据库或者集合中有数据被插入时，集合才真正被创建。</p><blockquote><p>An important note about collections (and databases) in MongoDB is that they are created lazily - none of the above commands have actually performed any operations on the MongoDB server. Collections and databases are created when the first document is inserted into them.</p></blockquote><h1 id="6-插入单个文档-insert-one"><a href="#6-插入单个文档-insert-one" class="headerlink" title="6. 插入单个文档 insert_one"></a>6. 插入单个文档 insert_one</h1><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">post</span> = &#123;<span class="string">"name"</span>:<span class="string">"wangduanduan"</span>, <span class="string">"province"</span>:<span class="string">"shanghai"</span>, <span class="string">"age"</span>: 12&#125;</span><br><span class="line"><span class="keyword">db</span>.collection.inser_one(<span class="keyword">post</span>)</span><br><span class="line"></span><br><span class="line">5a8e90b83617b1a34a06d890 <span class="comment">// 插入成功后会返回ObjectId</span></span><br></pre></td></tr></table></figure><h1 id="7-查询一个文档-find-one"><a href="#7-查询一个文档-find-one" class="headerlink" title="7. 查询一个文档 find_one"></a>7. 查询一个文档 find_one</h1><p>如果你确定你的查询结果里只有一个，那么最好使用find_one来做查询</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">db</span>.find_one(&#123;<span class="string">"name"</span>:<span class="string">"wangduanduan"</span>&#125;)</span><br></pre></td></tr></table></figure><h1 id="8-按照ObjectId查询-ObjectId"><a href="#8-按照ObjectId查询-ObjectId" class="headerlink" title="8. 按照ObjectId查询 ObjectId()"></a>8. 按照ObjectId查询 ObjectId()</h1><p>ObjectId不是字符串，你绝对不能把它当做字符串来做查询，虽然它看起来像字符串。</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// good </span></span><br><span class="line"><span class="selector-tag">db</span><span class="selector-class">.find_one</span>(<span class="string">'_id'</span>: ObjectId(<span class="string">"5a8e82af3617b1a035d10264"</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">// bad 这是查不到结果的</span></span><br><span class="line"><span class="selector-tag">db</span><span class="selector-class">.find_one</span>(<span class="string">'_id'</span>: <span class="string">"5a8e82af3617b1a035d10264"</span>)</span><br></pre></td></tr></table></figure><h1 id="9-关于Unicode字符串的注意事项"><a href="#9-关于Unicode字符串的注意事项" class="headerlink" title="9. 关于Unicode字符串的注意事项"></a>9. 关于Unicode字符串的注意事项</h1><p>MongoDB使用<a href="http://bsonspec.org/" target="_blank" rel="noopener">BSON格式</a>来存储数据，而BSON是utf-8编码的，所以pymongo必须要确保字符串是utf-8格式的。</p><p><a href="http://docs.python.org/howto/unicode.html" target="_blank" rel="noopener">python3 unicode字符串深入阅读</a></p><h1 id="10-批量插入-insert-many"><a href="#10-批量插入-insert-many" class="headerlink" title="10. 批量插入 insert_many()"></a>10. 批量插入 insert_many()</h1><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">db<span class="selector-class">.test_users</span><span class="selector-class">.insert_many</span>([user1, user2])</span><br><span class="line"></span><br><span class="line">[ObjectId1, ObjectId] <span class="comment">// 插入成功后会以数组形式返回ObjectId</span></span><br></pre></td></tr></table></figure><h1 id="11-条件查询-find"><a href="#11-条件查询-find" class="headerlink" title="11. 条件查询 find()"></a>11. 条件查询 find()</h1><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">db<span class="selector-class">.test_users</span><span class="selector-class">.find</span>()</span><br><span class="line"><span class="comment">// 返回符合条件的集合</span></span><br></pre></td></tr></table></figure><h1 id="12-统计文档数量-count"><a href="#12-统计文档数量-count" class="headerlink" title="12. 统计文档数量 count()"></a>12. 统计文档数量 count()</h1><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">db<span class="selector-class">.test_users</span><span class="selector-class">.find</span>().count()</span><br><span class="line"><span class="number">1</span> <span class="comment">// 返回文档的数量</span></span><br></pre></td></tr></table></figure><h1 id="13-范围查询"><a href="#13-范围查询" class="headerlink" title="13. 范围查询"></a>13. 范围查询</h1><p>返回查询如大于小于不能与之类的，MongoDB都是支持的，<a href="https://docs.mongodb.com/manual/reference/operator/" target="_blank" rel="noopener">详情参见</a></p><p>例如：查询日期小于2009年11月12号12点的文章，并按照作者排序<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">d = datetime.datetime(<span class="number">2009</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">12</span>) <span class="comment">// </span></span><br><span class="line">posts.<span class="keyword">find</span>(&#123;<span class="string">"date"</span>: &#123;<span class="string">"$lt"</span>: d&#125;&#125;).<span class="keyword">sort</span>(<span class="string">"author"</span>)</span><br></pre></td></tr></table></figure></p><p>更多类似与<code>$lt</code>之类的用法，可以参考<a href="https://docs.mongodb.com/manual/reference/operator/query/" target="_blank" rel="noopener">Query and Projection Operators</a></p><h1 id="14-索引"><a href="#14-索引" class="headerlink" title="14. 索引"></a>14. 索引</h1><p>以user_id建立索引后，profiles集合就有两个索引了，因为MongoDB自带_id索引。</p><p>下面设置的user_id索引，并将其设置成唯一值。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">result = db.profiles.create_index([(<span class="string">'user_id'</span>, pymongo.ASCENDING)], unique=<span class="keyword">True</span>)</span><br><span class="line">sorted(list(db.profiles.index_information()))</span><br><span class="line">[<span class="string">u'_id_'</span>, <span class="string">u'user_id_1'</span>]</span><br></pre></td></tr></table></figure></p><p>如果插入重复的user_id，那么会插入不成功，这个功能可以避免数据重复。</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;</span>&gt; new_profile = &#123;<span class="string">'user_id'</span>: <span class="number">213</span>, <span class="string">'name'</span>: <span class="string">'Drew'</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; duplicate_profile = &#123;<span class="string">'user_id'</span>: <span class="number">212</span>, <span class="string">'name'</span>: <span class="string">'Tommy'</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; result = db.profiles.insert_one(new_profile)  <span class="comment"># This is fine.</span></span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt; result = db.profiles.insert_one(duplicate_profile)</span><br><span class="line">Traceback (most recent call last)<span class="symbol">:</span></span><br><span class="line"><span class="symbol">DuplicateKeyError:</span> E1100<span class="number">0</span> duplicate key error <span class="symbol">index:</span> test_database.profiles.$user_id_1 dup <span class="symbol">key:</span> &#123; : <span class="number">212</span> &#125;</span><br></pre></td></tr></table></figure><p>关于索引，可以参考<a href="https://docs.mongodb.com/manual/indexes/" target="_blank" rel="noopener">Indexes</a></p><h1 id="15-参考"><a href="#15-参考" class="headerlink" title="15. 参考"></a>15. 参考</h1><ul><li><a href="https://api.mongodb.com/python/current/" target="_blank" rel="noopener">PyMongo 3.6.0 Documentation</a></li><li><a href="https://docs.mongodb.com/manual/reference/method/ObjectId/" target="_blank" rel="noopener">ObjectId</a></li><li><a href="https://api.mongodb.com/python/current/api/pymongo/collection.html" target="_blank" rel="noopener">collection – Collection level operations</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1-环境&quot;&gt;&lt;a href=&quot;#1-环境&quot; class=&quot;headerlink&quot; title=&quot;1. 环境&quot;&gt;&lt;/a&gt;1. 环境&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;mongodb 3.4&lt;/li&gt;
&lt;li&gt;pymongo 3.6.0&lt;/li&gt;
&lt;li&gt;macOS&lt;/li&gt;
      
    
    </summary>
    
    
      <category term="python" scheme="https://wdd.js.org/tags/python/"/>
    
      <category term="mongodb" scheme="https://wdd.js.org/tags/mongodb/"/>
    
      <category term="pymongo" scheme="https://wdd.js.org/tags/pymongo/"/>
    
  </entry>
  
  <entry>
    <title>Express 代理中间件的写法</title>
    <link href="https://wdd.js.org/express-proxy-middleware-demo.html"/>
    <id>https://wdd.js.org/express-proxy-middleware-demo.html</id>
    <published>2018-02-18T02:43:05.000Z</published>
    <updated>2018-02-18T03:04:57.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-配置文件写法"><a href="#1-配置文件写法" class="headerlink" title="1. 配置文件写法"></a>1. 配置文件写法</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// filename: config/default.js</span></span><br><span class="line"><span class="comment">// 开发环境配置文件</span></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="string">'ENV'</span>: <span class="string">'dev'</span>,</span><br><span class="line">  <span class="string">'PORT'</span>: <span class="string">'8088'</span>,</span><br><span class="line"></span><br><span class="line">  <span class="string">'maxAge'</span>: <span class="number">10</span>,</span><br><span class="line">  proxyTable: &#123;</span><br><span class="line">    <span class="comment">// 这里是http代理</span></span><br><span class="line">    <span class="comment">// 含有路径重写功能</span></span><br><span class="line">    <span class="string">'/p/olap'</span>: &#123;</span><br><span class="line">      target: <span class="string">'http://192.168.40.231:30092'</span>,</span><br><span class="line">      pathRewrite: &#123;</span><br><span class="line">        <span class="string">'^/p/olap'</span>: <span class="string">'/olap'</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 这里是http代理</span></span><br><span class="line">    <span class="comment">// 含有路径重写功能</span></span><br><span class="line">    <span class="string">'/p/qc'</span>: &#123;</span><br><span class="line">      target: <span class="string">'http://192.168.40.231:30088'</span>,</span><br><span class="line">      pathRewrite: &#123;</span><br><span class="line">        <span class="string">'^/p/qc'</span>: <span class="string">'/qc'</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 这是WebSocket代理</span></span><br><span class="line">    <span class="string">'/mvc/stomp'</span>: &#123;</span><br><span class="line">      target: <span class="string">'http://192.168.40.231:30412'</span>,</span><br><span class="line">      changeOrigin: <span class="literal">true</span>,</span><br><span class="line">      ws: <span class="literal">true</span>,</span><br><span class="line">      logLevel: <span class="string">'debug'</span>,</span><br><span class="line">      onError: <span class="function"><span class="keyword">function</span> (<span class="params">err, req, res</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'Something went wrong. And we are reporting a custom error message.'</span>)</span><br><span class="line">        <span class="built_in">console</span>.log(err)</span><br><span class="line"></span><br><span class="line">        res.writeHead(<span class="number">500</span>, &#123;</span><br><span class="line">          <span class="string">'Content-Type'</span>: <span class="string">'text/plain'</span></span><br><span class="line">        &#125;)</span><br><span class="line">        res.end(<span class="string">'Something went wrong. And we are reporting a custom error message.'</span>)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="2-app-js写法"><a href="#2-app-js写法" class="headerlink" title="2. app.js写法"></a>2. app.js写法</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> express = <span class="keyword">require</span>(<span class="string">'express'</span>)</span><br><span class="line"><span class="keyword">var</span> compression = <span class="keyword">require</span>(<span class="string">'compression'</span>)</span><br><span class="line"><span class="keyword">var</span> path = <span class="keyword">require</span>(<span class="string">'path'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// config会根据NODE_ENV环境变量自动去读取config目录下的文件，默认读取的default.js文件</span></span><br><span class="line"><span class="comment">// 你可以在config目录下设置production.js, test.js等配置文件</span></span><br><span class="line"><span class="keyword">var</span> config = <span class="keyword">require</span>(<span class="string">'config'</span>)</span><br><span class="line"><span class="keyword">var</span> proxyMiddleware = <span class="keyword">require</span>(<span class="string">'http-proxy-middleware'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 这里可以获取到配置文件的proxyTable</span></span><br><span class="line"><span class="keyword">var</span> proxyTable = config.get(<span class="string">'proxyTable'</span>)</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> app = express()</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment">// 这里是要点</span></span><br><span class="line"><span class="comment">// 遍历proxyTable，将配置文件中的路径挂载到app上</span></span><br><span class="line">Object.keys(proxyTable).<span class="keyword">forEach</span>(<span class="function"><span class="keyword">function</span> <span class="params">(context)</span> </span>&#123;</span><br><span class="line">  app.<span class="keyword">use</span>(proxyMiddleware(context, proxyTable[context]))</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">module.exports = app</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1-配置文件写法&quot;&gt;&lt;a href=&quot;#1-配置文件写法&quot; class=&quot;headerlink&quot; title=&quot;1. 配置文件写法&quot;&gt;&lt;/a&gt;1. 配置文件写法&lt;/h1&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr
      
    
    </summary>
    
    
      <category term="proxy" scheme="https://wdd.js.org/tags/proxy/"/>
    
      <category term="http" scheme="https://wdd.js.org/tags/http/"/>
    
      <category term="Express" scheme="https://wdd.js.org/tags/Express/"/>
    
  </entry>
  
</feed>
